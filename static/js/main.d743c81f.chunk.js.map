{"version":3,"sources":["config/api.js","config/socket.io.js","reducers/userInfo/actionsCreators.js","reducers/conversations/actionsCreators.js","config/getHours.js","components/InfoUser/UserConfig/styles.js","components/InfoUser/UserConfig/index.js","reducers/posts/actionsCreators.js","components/ListChat/UserChat/styles.js","components/ListChat/UserChat/index.js","components/SearchUser/styles.js","components/SearchUser/index.js","components/InfoUser/styles.js","components/InfoUser/index.js","components/Chat/Message/styles.js","components/Chat/Message/index.js","components/Chat/Posts/styles.js","components/Chat/Posts/index.js","components/Chat/SendMessage/styles.js","components/Chat/SendMessage/index.js","components/Chat/styles.js","components/Chat/index.js","components/Confirm/styles.js","components/Confirm/index.js","components/ListChat/styles.js","components/ListChat/index.js","components/Form/styles.js","components/Form/index.js","components/Auth/SignIn/index.js","components/Auth/SignUp/index.js","components/Auth/styles.js","components/Auth/index.js","pages/Chat/styles.js","pages/Chat/index.js","App.js","reducers/userInfo/index.js","reducers/posts/index.js","reducers/conversations/index.js","store/index.js","reducers/index.js","index.js"],"names":["api","url","socket","io","token","JSON","parse","localStorage","getItem","axios","create","baseURL","headers","hasOwnProperty","get","then","te","console","log","timer","STATUS","loadingConversations","dispatch","a","data","type","payload","updateStatus","cleanStatus","on","status","loginUser","email","password","post","setItem","stringify","time","place","hour","Date","getHours","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","ConfigList","styled","ul","MenuConfig","setFileImage","configRef","useRef","useEffect","current","focus","ref","id","hidden","onChange","files","target","htmlFor","onClick","removeItem","window","location","reload","newMessage","mensagem","UserConversation","li","connect","state","listConversations","userActive","posts","loadingPosts","userChatActive","idConversation","messages","_id","userChat","search","lastUpdate","messagesNotRead","setIsShowConfirm","setDeleteUser","useState","isMenuOptions","setIsMenuOptions","createConversation","userId","contacts","some","conversation","user","handleClickList","toString","length","every","item","className","src","imageProfile","alt","name","substring","username","onMouseLeave","idUser","ContainerSearch","div","searchUsers","userInfo","serachUsers","searchUser","query","action","placeholder","autoComplete","e","input","value","map","key","ConatinerInfo","header","PreviewImage","updateImageProfile","image","put","newImage","isMenuVisible","setIsMenuVisible","fileImage","imageProfileUpdate","FormData","append","closeUpdateImage","URL","createObjectURL","style","fontSize","gethours","updatedAt","renderStatus","setTimeout","ContainerMessage","props","preview","isImg","isIdUserLogged","Message","message","isPreview","setIsPreview","data-id-message","data-js","viewed","imagePath","createdAt","ContainerPosts","main","scroll","idsMessages","page","pageActual","totalPages","nextPage","previousPosts","containerChatRef","positionLine","socketnewMessage","warningMessage","document","createElement","textContent","classList","add","querySelectorAll","positionMessage","getBoundingClientRect","top","scrollTop","insertAdjacentElement","scrollHeight","initialConversation","clientHeight","Object","keys","forEach","emit","postsPrevious","currentTarget","messagesViewed","getAttribute","tail","onScroll","registerIdsMessages","ContainerSend","PreviewImg","figure","messageText","setMessageText","showEmoji","setShowEmoji","fileImg","setFileImg","sendMessage","preventDefault","onSelect","emoji","native","set","position","bottom","left","zIndex","cols","rows","href","ContainerChat","MessageViewed","updateMessageRead","numberMessages","lineRef","socketMessageRead","Container","Confirm","deleteConversation","ContainerList","cleanPosts","delete","isShowConfirm","deleteUser","FormContainer","form","Form","submit","signUp","setIsSignIn","messageError","onSubmit","setMessageError","login","register","confirmPassword","section","Auth","isSignIn","getInfoUserLogged","clearInterval","setInterval","isLogged","setIsLogged","isInitialStatusUpdate","setIsInitialStatusUpdate","getUserInfo","addEventListener","App","initialState","concat","tall","compo","conversations","contact","combineReducers","logger","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","createStore","reducers","ReactDOM","render","store","getElementById"],"mappings":"uKAGIA,E,wGCDSC,EAAM,uCAGJC,EAFAC,IAAGF,GDDZG,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,WAG5CR,EADEI,EACIK,IAAMC,OAAO,CAEjBC,QAASV,EACTW,QAAS,CACP,cAAgB,UAAhB,OAA2BR,EAAMS,eAAe,SAAWT,EAAMA,MAAQ,IACzE,eAAgB,sBAIdK,IAAMC,OAAO,CAEjBC,QAASV,EACT,cAAiB,SACjB,eAAgB,qBAIpBQ,IAAMK,IAAI,iFAAiFC,MAAK,SAAAC,GAAE,OAAIC,QAAQC,IAAIF,MAEnGhB,IEhBXmB,EFgBWnB,IGnBFoB,EAAS,2BAETC,EAAuB,yDAAM,WAAOC,GAAP,iBAAAC,EAAA,sEACjBvB,EAAIc,IAAI,kBADS,gBAChCU,EADgC,EAChCA,KAERF,EAAS,CACPG,KARiC,sCASjCC,QAASF,IAL6B,2CAAN,uDASvBG,EAAe,SAACC,GAAD,OAAiB,SAAAN,GACvCM,EACFN,EAAS,CACPG,KAAML,EACNM,QAAS,KAGXxB,EAAO2B,GAAG,UAAU,SAAAC,GAClBR,EAAS,CACPG,KAAML,EACNM,QAASI,SDnBX5B,EAASC,IAAGF,GAEL8B,EAAY,SAACC,EAAOC,GAAR,8CAAqB,WAAMX,GAAN,eAAAC,EAAA,6DACxCC,EAAO,CAAEA,KAAM,IADyB,SAE/BxB,EAAIkC,KAAJ,gBAA0B,CACrCF,QACAC,aAJ0C,OAE5CT,EAF4C,OAM5CjB,aAAa4B,QAAQ,SAAU9B,KAAK+B,UAAU,CAAEhC,MAAOoB,EAAKA,KAAKpB,SAMjEkB,EAAS,CACPG,KAnBsB,kBAoBtBC,QAASF,EAAKA,OAd4B,2CAArB,uDETV,WAAUa,EAAMC,GAC7B,IAAIC,EAAO,IAAIC,KAAKH,GAAMI,WACtBC,EAAU,IAAIF,KAAKH,GAAMM,aAE7BD,EAAUA,EAAU,GAAV,WAAmBA,GAAYA,EACzCH,EAAOA,EAAO,GAAP,WAAgBA,GAASA,EAEhC,IAAIK,EAAM,IAAIJ,KAAKH,GAAMQ,UACrBC,EAAQ,IAAIN,KAAKH,GAAMU,WACvBC,EAAO,IAAIR,KAAKH,GAAMY,cAC1B,MAAc,UAAVX,EACI,GAAN,OAAUC,EAAV,YAAkBG,GAEhBE,KAAQ,IAAIJ,MAAOK,UACf,GAAN,OAAUN,EAAV,YAAkBG,IAEf,IAAIF,MAAOK,UAAYD,EAAO,IAAK,IAAIJ,MAAOO,WAAa,EAAID,EAAQ,EAEpE,GAAN,OAAUF,EAAM,GAAN,WAAeA,GAAQA,EAAjC,YAAwCE,EAAQ,GAAR,WAAiBA,EAAQ,GAAMA,EAAvE,YAAgFE,IAE7E,IAAIR,MAAOK,UAAYD,IAAS,GAAe,SAAVN,EAClC,QAEA,SAAN,OAAgBC,EAAhB,YAAwBG,I,goBCrBrB,IAAMQ,EAAaC,IAAOC,GAAV,KCyBRC,EAxBI,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACdC,EAAYC,mBAClBC,qBAAU,WAAQF,EAAUG,QAAQC,UAAW,IAK/C,OACE,oCACE,kBAACT,EAAD,CAAYU,IAAKL,GACf,4BACE,2BACE9B,KAAK,OACLoC,GAAG,QAAQC,QAAM,EACjBC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BV,EAAaU,EAAM,OAC1D,2BAAOE,QAAQ,SAAf,mBAGF,wBAAIC,QAfK,WACb5D,aAAa6D,WAAW,UACxBC,OAAOC,SAASC,WAaZ,a,OCaKC,EAAa,SAACC,GAAD,8CAAc,WAAMnD,GAAN,SAAAC,EAAA,sDACtCD,EAAS,CACPG,KA/BuB,oBAgCvBC,QAAS+C,IAH2B,2CAAd,uD,q/DChCnB,IAAMC,EAAmBvB,IAAOwB,GAAV,K,yjBCM7B,IAiFeC,eANS,SAAAC,GAAK,MAAK,CAChCC,kBAAmBD,EAAMC,kBACzBC,WAAYF,EAAMG,MAAMD,WACxBC,MAAOH,EAAMG,MAAMA,SAGmB,CAAEC,aFhFd,SAACC,GAAD,8CAAoB,WAAM5D,GAAN,eAAAC,EAAA,0DAE1C2D,EAAeC,eAF2B,gCAG3BnF,EAAIc,IAAJ,gCAAiCoE,EAAeC,eAAhD,OAH2B,OAG5CC,EAH4C,cAK9C9D,EAAS,CACPG,KAbyB,sBAczBC,QAAS,CAEPsD,MAAOI,EAAWA,EAAS5D,KAAO,CAAE4D,SAAU,GAAIC,IAAKH,EAAeC,gBACtEJ,WAAYG,KAV8B,2CAApB,uDEgF4BvD,gBAAzCiD,EAjFE,SAAC,GAA0K,IAAxKU,EAAuK,EAAvKA,SAAUL,EAA6J,EAA7JA,aAAcM,EAA+I,EAA/IA,OAAQT,EAAuI,EAAvIA,kBAAmBU,EAAoH,EAApHA,WAAY7D,EAAwG,EAAxGA,aAAcoD,EAA0F,EAA1FA,WAAYC,EAA8E,EAA9EA,MAAOS,EAAuE,EAAvEA,gBAAiBC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,cAAeR,EAAqB,EAArBA,eAAqB,EAC/IS,oBAAS,GADsI,mBAClLC,EADkL,KACnKC,EADmK,KAGnLC,EAAkB,uCAAG,WAAOC,GAAP,iBAAAzE,EAAA,yDACKuD,EAAkBmB,SAASC,MAAK,SAAAC,GAAY,OAAIA,EAAaC,KAAKf,MAAQW,KAD/E,iCAGAhG,EAAIkC,KAAK,uBAAwB,CAAE8D,WAHnC,uBAGfxE,EAHe,EAGfA,KAHe,SAIjByD,EAAa,EAAD,GAAMK,EAAN,CAAgBH,eAAgB3D,EAAK2D,kBAJhC,WAKnBJ,EAAWlE,eAAe,OALP,oBAMjBkE,EAAWM,MAAQW,EANF,2CAMiB,GANjB,eAOrBrE,GAAa,GAPQ,mBAQd,GARc,4CAAH,sDAalB0E,EAAe,uCAAG,WAAOlB,GAAP,SAAA5D,EAAA,yDACjBwD,EAAWlE,eAAe,OADT,gCAEdoE,EAAa,EAAD,GAAMK,EAAN,CAAgBH,iBAAgBM,qBAF9B,iCAGb,GAHa,WAKlBV,EAAWlE,eAAe,OALR,oBAMhBkE,EAAWM,IAAIiB,aAAehB,EAASD,IAAIiB,aAActB,EAAMG,GAN/C,0CAOX,GAPW,uBASdF,EAAa,EAAD,GAAMK,EAAN,CAAgBH,iBAAgBM,qBAT9B,OAUpB9D,GAAa,GAVO,4CAAH,sDAcrB,OACE,kBAAC+C,EAAD,CACEP,QAAS,kBAA4C,IAAtCW,EAAkBmB,SAASM,OACtCR,EAAmBT,EAASD,KAC5BP,EAAkBmB,SAASO,OAAM,SAAAC,GAAI,OAAIA,EAAKL,KAAKf,MAAQC,EAASD,IAClEgB,EAAgBI,EAAKtB,gBACrBY,EAAmBT,EAASD,SAClCE,OAAQA,GACR,yBAAKmB,UAAU,cACb,yBAAKC,IAAKrB,EAASsB,aAAetB,EAASsB,aAAe,yBAA0BC,IAAI,MAE1F,yBAAKH,UAAU,aACb,yBAAKA,UAAU,aACb,4BAAKpB,EAASwB,KAAKP,QAAU,GAAKjB,EAASwB,KAAKC,UAAU,EAAG,IAAM,MAAQzB,EAASwB,MACpF,2BAAIxB,EAAS0B,WACXzB,KAAYE,GAAmB,0BAAMiB,UAAU,qBAC9CjB,MAILF,GACA,oCACE,yBAAKmB,UAAU,eACb,8BAAOjE,EAAS+C,EAAY,UAE9B,yBAAKkB,UAAU,mBACbvC,QAAS,kBAAM2B,GAAkBD,IACjCoB,aAAc,kBAAMnB,GAAiB,KACrC,uBAAGY,UAAU,sBACZb,GAAiB,wBAAIa,UAAU,gBAC9B,wBAAIvC,QAAS,WACXuB,GAAiB,GACjBC,EAAc,CACZuB,OAAQ5B,EAASD,IACjBF,qBAJJ,0B,qjBClEP,IAAMgC,EAAkBhE,IAAOiE,IAAV,KCuCbxC,eAJS,SAAAC,GAAK,MAAK,CAChCwC,YAAaxC,EAAMyC,SAASC,eAGU,CAAEC,WTFhB,SAACC,GAAD,8CAAW,WAAMnG,GAAN,eAAAC,EAAA,yDAErB,KAAVkG,EAF+B,gCAGpBzH,EAAIc,IAAJ,iBAAkB2G,IAHE,OAGjCjG,EAHiC,cAMnCF,EAAS,CACPG,KA1CuB,mBA2CvBC,QAASF,EAAOA,EAAKA,KAAO,KARK,2CAAX,wDSEXoD,EAnCI,SAAC,GAAiC,IAA/ByC,EAA8B,EAA9BA,YAAaG,EAAiB,EAAjBA,WAAiB,EACf5B,mBAAS,IADM,6BAQlD,OACE,kBAACuB,EAAD,KACE,0BAAMO,OAAO,IACX,2BAAOjG,KAAK,OACVkG,YAAY,wBACZb,KAAK,QACLc,aAAa,MACb7D,SAZO,SAAC8D,GACd,IAAMC,EAAQD,EAAE5D,OAChBuD,EAAWM,EAAMC,UAYb,4BACGV,EAAYW,KAAI,SAAA5B,GAAI,OACnB,kBAAC,EAAD,CACE6B,IAAG,iBAAY7B,EAAKf,KACpBE,QAAQ,EACRD,SAAUc,a,shFC1BjB,IAAM8B,EAAgB/E,IAAOgF,OAAV,KA6EbC,EAAejF,IAAOiE,IAAV,KCoBVxC,eANS,SAAAC,GAAK,MAAK,CAChCyC,SAAUzC,EAAMyC,SAChBxF,OAAQ+C,EAAMC,kBAAkBhD,OAChCiD,WAAYF,EAAMG,MAAMD,cAGc,CAAEsD,mBXhDR,SAACC,GAAD,8CAAW,WAAMhH,GAAN,iBAAAC,EAAA,sEACNvB,EAAIuI,IAAI,qBAAsBD,GADxB,gBAC3BE,EAD2B,EACnChH,KAAQgH,SAChBlH,EAAS,CACPG,KAjDgC,4BAkDhCC,QAAS8G,IAJgC,2CAAX,wDWgDnB5D,EA3FE,SAAC,GAA0D,IAAxD0C,EAAuD,EAAvDA,SAAUvC,EAA6C,EAA7CA,WAAYjD,EAAiC,EAAjCA,OAAQuG,EAAyB,EAAzBA,mBAAyB,EAC/BzC,oBAAS,GADsB,mBAClE6C,EADkE,KACnDC,EADmD,OAEvC9C,oBAAS,GAF8B,mBAElE+C,EAFkE,KAEvDrF,EAFuD,KAkBnEsF,EAAkB,uCAAG,4BAAArH,EAAA,sDACrBoH,KACInH,EAAO,IAAIqH,UACZC,OAAO,eAAgBH,GAC5BN,EAAmB7G,GACnBuH,KALuB,2CAAH,qDASlBA,EAAmB,WACvBzF,EAAa,MACboF,GAAiB,IAGnB,OACE,kBAACR,EAAD,KACGS,GAAa,kBAACP,EAAD,KACZ,yBAAK1B,UAAU,gBAAgBvC,QAAS4E,GACtC,uBAAGrC,UAAU,kBAEf,yBAAKA,UAAU,iBACb,gCACE,yBAAKC,IAAKtC,OAAO2E,IAAIC,gBAAgBN,GAAY9B,IAAI,OAGzD,yBAAKH,UAAU,WACb,4BAAQA,UAAU,MAAMvC,QAASyE,GAAjC,aACA,4BAAQlC,UAAU,MAAMvC,QAAS4E,GAAjC,cAIJ,yBAAKrC,UAAU,qBACZ3B,EAAWlE,eAAe,QACzB,oCACE,yBAAK6F,UAAU,yBACb,yBAAKC,IAAK5B,EAAW6B,aAAe7B,EAAW6B,aAAe,yBAA0BC,IAAI,MAE9F,yBAAKH,UAAU,0BACZ3B,GAAc,4BAAKA,EAAW+B,MAC9B/B,GAAc,2BAAIA,EAAWiC,UAtDrB,WACnB,GAAIlF,EAAOjB,eAAe,OACxB,OACEiB,EAAOA,OACL,2BAAO4E,UAAU,eACf,sCAGF,2BAAOwC,MAAO,CAAEC,SAAU,KACxB,kDAAqBC,EAAStH,EAAOuH,aA8ClCC,MAKT,kBAAC,EAAD,MACA,yBAAK5C,UAAU,eACb,yBAAKvC,QAAS,kBAAMoF,YAAW,kBAAMb,GAAkBD,KAAgB,OACrE,uBAAG/B,UAAU,qBACb,yBAAKA,UAAU,oBACZY,EAASR,MAAQ,4BAAKQ,EAASR,MAC/BQ,EAAStF,OAAS,2BAAIsF,EAAStF,QAElC,yBAAK0E,UAAU,mBACb,yBAAKC,IAAKW,EAASV,aAAeU,EAASV,aAAe,yBAA0BC,IAAI,OAG3F4B,GACC,kBAAC,EAAD,CACEnF,aAAcA,EACdoF,iBAAkBA,S,29CCpFvB,IAAMc,EAAmBrG,IAAOiE,IAAV,KAEf,SAAAqC,GAAK,OAAIA,EAAMC,QAAU,SAAW,cAgB9C,SAAAD,GAAK,OAAIA,EAAMC,SAAN,sOAiBI,SAAAD,GAAK,OAAIA,EAAME,MAAQ,MAAQ,SAC9B,SAAAF,GAAK,OAAIA,EAAMG,eAAiB,QAAU,aAK/C,SAAAH,GAAK,OAAIA,EAAMG,eAAiB,QAAU,UAGvC,SAAAH,GAAK,OAAIA,EAAMC,QAAU,SAAW,cAU5C,SAAAD,GAAK,OAAKA,EAAMG,gBAAP,iIAmBT,SAAAH,GAAK,OAAIA,EAAMC,SAAN,yPCnCFG,EApCC,SAAC,GAAiC,IAA/BD,EAA8B,EAA9BA,eAAgBE,EAAc,EAAdA,QAAc,EACblE,oBAAS,GADI,mBACxCmE,EADwC,KAC7BC,EAD6B,KAG/C,OACE,oCACGD,GAAa,yBAAKrD,UAAU,gBAAgBvC,QAAS,kBAAM6F,GAAa,KACvE,uBAAGtD,UAAU,kBAEf,kBAAC8C,EAAD,CAEEI,eAAgBA,EAChBK,kBAAiBH,EAAQzE,IACzB6E,WAAUN,GAAD,iBAA6BE,EAAQK,QAC9CR,OAAO,EACPD,QAASK,GACRD,GACC,yBAAKpD,UAAU,mBACZoD,EAAQM,WAAa,yBAAK1D,UAAU,eACnC,yBACEvC,QAAS,kBAAM6F,GAAcD,IAC7BpD,IAAKmD,EAAQM,UACbvD,IAAI,MAER,6BACE,2BAAIiD,EAAQA,SACZ,0BAAMpD,UAAU,QACbjE,EAASqH,EAAQO,UAAW,e,wZC5BtC,IAAMC,EAAiBnH,IAAOoH,KAAV,K,+4BCM3B,IAAIC,GAAS,GACTC,GAAc,GACdC,GAAO,EA+GI9F,gBATS,SAAAC,GAAK,MAAK,CAChCyC,SAAUzC,EAAMyC,SAChBtC,MAAOH,EAAMG,MAAMA,MACnB2F,WAAY9F,EAAMG,MAAM0F,KACxBE,WAAY/F,EAAMG,MAAM4F,WACxBC,SAAUhG,EAAMG,MAAM6F,SACtBpF,gBAAiBZ,EAAMG,MAAMD,WAAWU,mBAGF,CAAEjB,aAAYsG,cVjGzB,SAAC3F,EAAgBuF,GAAjB,8CAA0B,WAAMpJ,GAAN,eAAAC,EAAA,sEAC9BvB,EAAIc,IAAJ,gCAAiCqE,EAAjC,YAAmDuF,IADrB,OAC/CtF,EAD+C,OAErD9D,EAAS,CACPG,KAxB0B,uBAyB1BC,QAAS,CACPsD,MAAOI,EAAS5D,QALiC,2CAA1B,wDUiGdoD,EA9GD,SAAC,GAA2I,IAAzII,EAAwI,EAAxIA,MAAOsC,EAAiI,EAAjIA,SAAUnC,EAAuH,EAAvHA,eAAgB4F,EAAuG,EAAvGA,iBAAkBC,EAAqF,EAArFA,aAAcvF,EAAuE,EAAvEA,gBAAiBkF,EAAsD,EAAtDA,WAAYE,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,cAAeF,EAAiB,EAAjBA,WAAiB,EACzGhF,oBAAS,GADgG,gCAExGA,oBAAS,IAF+F,mBAInJqF,GAJmJ,UAIhI9K,IAAGF,IAC1BwD,qBAAU,WACR,GAAKgC,EAEE,CACL,IAAIyF,EAAiBC,SAASC,cAAc,QAC5CF,EAAeG,YAAc,oCAC7BH,EAAeI,UAAUC,IAAI,kBAC7B,IAAMnG,EAAW+F,SAASK,iBAAiB,4BAA4B,GACnEC,EAAkBrG,EAASsG,wBAAwBC,IACvDZ,EAAiBrH,QAAQkI,UAAaH,EAAkBT,EAAgB,IACxE5F,EAASyG,sBAAsB,aAAcX,QAR7CH,EAAiBrH,QAAQkI,UAAYb,EAAiBrH,QAAQoI,aAahEb,EAAiBpJ,GAAG,cAAc,WAC5BkJ,EAAiBrH,QAAQoI,aAAef,EAAiBrH,QAAQkI,UAAY,IAAM,MACrFb,EAAiBrH,QAAQkI,UAAYb,EAAiBrH,QAAQoI,iBAGlEC,MACC,CAAC5G,IAEJ,IAAM4G,EAAsB,WAC1B,GAAIhB,EAAiBrH,QAAQoI,eAAiBf,EAAiBrH,QAAQsI,aAAc,CACnF,IAAM5G,EAAW+F,SAASK,iBAAiB,4BACvCpG,IACF6G,OAAOC,KAAKzB,IAAa0B,SAAQ,SAAAtI,GAC/BuB,EAAS+G,QAAT,uCAAiB,WAAMrC,GAAN,SAAAvI,EAAA,sDACXuI,EAAQ4B,wBAAwBC,IAAMX,GACxC9K,EAAOkM,KAAK,wBAAyBvI,GAFxB,2CAAjB,0DAMF4G,GAAc,MAad4B,EAAa,uCAAG,WAAOxE,GAAP,SAAAtG,EAAA,2DAChBsG,EAAEyE,cAAcV,UAAY,KADZ,qBAEdjB,EAAaC,GAAcF,KAASC,GAFtB,uBAGhBD,GAAOC,EAHS,SAIVG,EAAc3F,EAAgB0F,GAJpB,4EAAH,sDAUb0B,EAAc,uCAAG,WAAO1E,GAAP,SAAAtG,EAAA,6DACrBiJ,GAAM,MACDA,GADC,eAEHrF,EAAiB0C,EAAEyE,cAAcV,YAEhCK,OAAOC,KAAKzB,IAAalE,OAAS,GACnB4E,SAASK,iBAAiB,4BAClCW,SAAQ,SAAArC,GACf,GAAIW,GAAYX,EAAQ0C,aAAa,oBAAqB,CACxD,IAAI3I,EAAK4G,GAAYX,EAAQ0C,aAAa,oBAC1C,GAAI1C,EAAQ4B,wBAAwBC,IAAMX,EAAc,CAAC,IAAD,EACzBP,GAATgC,GADkC,EAC/C5I,GAD+C,eAC/CA,GAD+C,UAEtD4G,GAAW,MACNgC,GAELvM,EAAOkM,KAAK,wBAAyBvI,QAfxB,SAoBfwI,EAAcxE,GApBC,2CAAH,sDAuBpB,OACE,kBAACyC,EAAD,CAAgB1G,IAAKmH,EAAkB2B,SAAUH,GAC9CvH,EAAMG,GAAgB6C,KAAI,SAAA8B,GAEzB,OA9CsB,SAACA,GACvBA,EAAQ5C,OAAOZ,aAAegB,EAASjC,KAAQyE,EAAQK,SACzDM,GAAW,MACNA,GADM,eAERX,EAAQzE,IAAMyE,EAAQzE,OAyCvBsH,CAAoB7C,GAElB,kBAAC,EAAD,CACE7B,IAAK6B,EAAQzE,IACbuE,eAAgBE,EAAQ5C,OAAOZ,aAAegB,EAASjC,IACvDyE,QAASA,W,wpDCtGd,IAAM8C,GAAgBzJ,IAAOiE,IAAV,MAgDbyF,GAAa1J,IAAO2J,OAAV,MCiCRlI,gBALS,SAAAC,GAAK,MAAK,CAChCE,WAAYF,EAAMG,MAAMD,WACxBD,kBAAmBD,EAAMC,qBAGa,CAAEzD,wBAA3BuD,EA3EK,SAAC,GAA4D,IAA1DG,EAAyD,EAAzDA,WAAkCgG,GAAuB,EAA7C1J,qBAA6C,EAAvB0J,kBAAuB,EACxCnF,mBAAS,IAD+B,mBACvEmH,EADuE,KAC1DC,EAD0D,OAE5CpH,oBAAS,GAFmC,mBAEvEqH,EAFuE,KAE5DC,EAF4D,OAGhDtH,mBAAS,MAHuC,mBAGvEuH,EAHuE,KAG9DC,EAH8D,KAKxEC,EAAW,uCAAG,WAAOxF,GAAP,eAAAtG,EAAA,yDAClBsG,EAAEyF,kBACEP,IAAeI,EAFD,wBAGV3L,EAAO,IAAIqH,UACZC,OAAO,SAAU/D,EAAWM,KACjC7D,EAAKsH,OAAO,UAAWiE,GACvBvL,EAAKsH,OAAO,QAASqE,GAAoB,IANzB,SAOVnN,EAAIkC,KAAK,uBAAwBV,GAPvB,OAQZuJ,EAAiBrH,UACnBqH,EAAiBrH,QAAQkI,UAAYb,EAAiBrH,QAAQoI,cAEhEkB,EAAe,IACfI,EAAW,MAZK,4CAAH,sDAqBjB,OACE,kBAACR,GAAD,KACGO,GAAW,kBAACN,GAAD,KACV,yBAAKnG,UAAU,UACb,yBAAKA,UAAU,cACb,2BAAIyG,EAAQrG,OAEd,yBAAKJ,UAAU,QAAQvC,QAAS,kBAAMiJ,EAAW,QAC/C,uBAAG1G,UAAU,mBAGjB,yBAAKA,UAAU,eACb,yBAAKC,IAAKqC,IAAIC,gBAAgBkE,GAAUtG,IAAI,OAGhD,yBAAKH,UAAU,mBACZuG,GAAa,kBAAC,KAAD,CACZM,SAtBS,SAAC1F,GAChB,IAAI2F,EAAQ3F,EAAE4F,OACdT,EAAeD,EAAcS,IAqBvBE,IAAK,SACLxE,MAAO,CAAEyE,SAAU,WAAYC,OAAQ,OAAQC,KAAM,EAAGC,OAAQ,MAElE,8BACEC,KAAK,KACLC,KAAK,IACLrG,YAAY,uBACZI,MAAOgF,EACPhJ,SAAU,gBAAGE,EAAH,EAAGA,OAAH,OAAgB+I,EAAe/I,EAAO8D,WAGpD,2BAAOtG,KAAK,OAAOqF,KAAK,GAAGjD,GAAG,QAAQC,QAAM,EAACC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAA2BoJ,EAAWpJ,EAAM,OAEnG,yBAAK0C,UAAU,SACb,uBAAGA,UAAU,eAAevC,QAAS,kBAAM+I,GAAcD,MACzD,2BAAO/I,QAAQ,SACb,uBAAGwC,UAAU,mBAGjB,yBAAKA,UAAU,YACb,uBAAGuH,KAAK,IAAI9J,QAASkJ,GAArB,e,+dCtED,ICQHrC,GDRSkD,GAAgB/K,IAAOiE,IAAV,MAWb+G,GAAgBhL,IAAOiE,IAAV,MCkCXxC,gBAHS,SAAAC,GAAK,MAAK,CAChCE,WAAYF,EAAMG,MAAMD,cAEc,CAAEP,aAAYnD,uBAAsB+M,kBdE3C,SAAC,GAAD,IAAGtE,EAAH,EAAGA,QAASrE,EAAZ,EAAYA,gBAAZ,OAAkC,SAAAnE,GACjEA,EAAS,CACPG,KJ/CoC,yCIgDpCC,QAAS,CACP2M,eAAgB5I,EAChBN,eAAgB2E,EAAQ3D,gBAG5B7E,EAAS,CACPG,KApDwB,qBAqDxBC,QAASoI,OcZElF,EApCF,SAAC,GAAyE,IAAvEG,EAAsE,EAAtEA,WAAYP,EAA0D,EAA1DA,WAAYnD,EAA8C,EAA9CA,qBAAsB+M,EAAwB,EAAxBA,kBACtDrD,EAAmBvH,mBACnB8K,EAAU9K,mBAchB,OAZAC,qBAAU,WACRuH,GAAesD,EAAQ5K,QAAQgI,wBAAwBC,IACxCxL,IAAGF,GACX4B,GAAG,cAAc,SAAAiI,GACtBtF,EAAWsF,GACXzI,OAEFkN,EAAkB1M,GAAG,eAAe,SAAAiI,GAClCsE,EAAkBtE,QAEnB,IAGD,kBAACoE,GAAD,KACGnJ,EAAWlE,eAAe,QACzB,kBAAC,GAAD,CACEmK,aAAcA,GACd7F,eAAgBJ,EAAWI,eAC3B4F,iBAAkBA,IAGtB,kBAACoD,GAAD,CAAevK,IAAK0K,IACnBvJ,EAAWlE,eAAe,QACzB,kBAAC,GAAD,CAAakK,iBAAkBA,Q,+jCCpChC,IAAMyD,GAAYrL,IAAOiE,IAAV,MCyBPqH,GAxBC,SAAC,GAA8C,IAA5C/I,EAA2C,EAA3CA,iBAAkBgJ,EAAyB,EAAzBA,mBACnC,OACE,kBAACF,GAAD,KACE,yBAAK9H,UAAU,cAAcvC,QAAS,kBAAMuB,GAAiB,KAC3D,uBAAGgB,UAAU,kBAEf,yBAAKA,UAAU,mBACb,4BACE,uBAAGA,UAAU,gCADf,6EAEyE,6BAFzE,+BAIA,yBAAKA,UAAU,eACb,4BAAQA,UAAU,aAAavC,QAAS,kBAAMuB,GAAiB,KAA/D,YAGA,4BAAQgB,UAAU,SAASvC,QAAS,kBAAMuK,MAA1C,e,uMChBH,IAAMC,GAAgBxL,IAAOiE,IAAV,MC6CXxC,gBAJS,SAAAC,GAAK,MAAK,CAChCC,kBAAmBD,EAAMC,qBAGa,CAAE8J,WlBNhB,SAAC,GAAD,IAAGzJ,EAAH,EAAGA,eAAgB+B,EAAnB,EAAmBA,OAAnB,8CAAgC,WAAM5F,GAAN,SAAAC,EAAA,sEAClDvB,EAAI6O,OAAJ,uBAA2B1J,EAA3B,YAA6C+B,IADK,OAExD5F,EAAS,CACPG,KAxC4B,yBAyC5BC,QAASyD,IAJ6C,2CAAhC,uDkBM4B9D,wBAAvCuD,EAvCE,SAAC,GAA6D,IAA3DE,EAA0D,EAA1DA,kBAAmB8J,EAAuC,EAAvCA,WAAYvN,EAA2B,EAA3BA,qBAA2B,EAClCuE,oBAAS,GADyB,mBACrEkJ,EADqE,KACtDpJ,EADsD,OAExCE,mBAAS,IAF+B,mBAErEmJ,EAFqE,KAEzDpJ,EAFyD,KAItE+I,EAAkB,uCAAG,sBAAAnN,EAAA,sEACnBqN,EAAWG,GADQ,OAEzB1N,IACAqE,GAAiB,GAHQ,2CAAH,qDAKxB,OACE,oCACGoJ,GAAiB,kBAAC,GAAD,CAChBJ,mBAAoBA,EACpBhJ,iBAAkBA,IAEpB,kBAACiJ,GAAD,KACE,wBAAIjI,UAAU,kBACX5B,EAAkBmB,SAAS+B,KAAI,SAAA7B,GAAY,OAC1C,kBAAC,EAAD,CACE8B,IAAK9B,EAAaC,KAAKf,IACvBC,SAAUa,EAAaC,KACvBZ,WAAYW,EAAakD,UACzBlE,eAAgBgB,EAAahB,eAC7BM,gBAAiBU,EAAaV,gBAC9BE,cAAeA,EACfD,iBAAkBA,a,8lCC/BzB,IAAMsJ,GAAgB7L,IAAO8L,KAAV,MCgCXC,GA/BF,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC3C,OACE,kBAACN,GAAD,CAAeO,SAAUJ,GACvB,0BAAMzI,UAAU,SAAS4I,GACxBF,GAAU,yBAAK1I,UAAU,eACxB,2BAAOjF,KAAK,OAAOqF,KAAK,OAAOa,YAAY,8BAE7C,yBAAKjB,UAAU,eACb,2BAAOjF,KAAK,QAAQqF,KAAK,QAAQa,YAAY,sBAE/C,yBAAKjB,UAAU,eACb,2BAAOjF,KAAK,WAAWqF,KAAK,WAAWa,YAAY,sBAEpDyH,GAAU,yBAAK1I,UAAU,eACxB,2BAAOjF,KAAK,WAAWqF,KAAK,kBAAkBa,YAAY,wBAE5D,yBAAKjB,UAAU,eACb,4BACEvC,QAAS,kBAAekL,IAATD,IACf1I,UAAU,cACVjF,KAAK,UACJ2N,EACG,8BAAM,uBAAG1I,UAAU,sBAAnB,UACA,eAEN,4BAAQA,UAAU,eAAe0I,EAAS,cAAgB,YCFnDxK,eAAQ,KAAM,CAAE7C,aAAhB6C,EArBA,SAAC,GAA+D,IAA7D7C,EAA4D,EAA5DA,UAAWsN,EAAiD,EAAjDA,YAAaC,EAAoC,EAApCA,aAAcE,EAAsB,EAAtBA,gBACtD/L,qBAAU,WACR+L,EAAgB,MACf,IAEH,IAAMC,EAAK,uCAAG,WAAO5H,GAAP,mBAAAtG,EAAA,yDACZsG,EAAEyF,iBADU,EAEgBzF,EAAE5D,OAAtBjC,EAFI,EAEJA,MAAOC,EAFH,EAEGA,SACVD,EAAM+F,OAAU9F,EAAS8F,MAHlB,uBAIVyH,EAAgB,oCAJN,mBAKH,GALG,uBAQNzN,EAAUC,EAAM+F,MAAO9F,EAAS8F,OAR1B,OASZ1D,OAAOC,SAASC,SATJ,2CAAH,sDAWX,OACE,kBAAC,GAAD,CAAM4K,OAAQM,EAAOJ,YAAaA,EAAaC,aAAcA,OCkBlD1K,eAAQ,KAAM,CAAE7C,aAAhB6C,EAlCA,SAAC,GAA+D,IAA7DyK,EAA4D,EAA5DA,YAAaC,EAA+C,EAA/CA,aAAcE,EAAiC,EAAjCA,gBAAiBzN,EAAgB,EAAhBA,UAC5D0B,qBAAU,WACR+L,EAAgB,MACf,IACH,IAAME,EAAQ,uCAAG,WAAO7H,GAAP,uBAAAtG,EAAA,yDACfsG,EAAEyF,iBADa,EAEoCzF,EAAE5D,OAA7C6C,EAFO,EAEPA,KAAM9E,EAFC,EAEDA,MAAOC,EAFN,EAEMA,SAAU0N,EAFhB,EAEgBA,gBAC1B7I,EAAKiB,OAAU/F,EAAM+F,OAAU9F,EAAS8F,OAAU4H,EAAgB5H,MAHxD,uBAIbyH,EAAgB,2CAJH,mBAKN,GALM,UAQXvN,EAAS8F,QAAU4H,EAAgB5H,MARxB,uBASbyH,EAAgB,sBATH,mBAUN,GAVM,iCAaPxP,EAAIkC,KAAK,gBAAiB,CAC9B4E,KAAMA,EAAKiB,MACX/F,MAAOA,EAAM+F,MACb9F,SAAUA,EAAS8F,QAhBR,yBAkBPhG,EAAUC,EAAM+F,MAAO9F,EAAS8F,OAlBzB,QAmBb1D,OAAOC,SAASC,SAnBH,kDAqBbiL,EAAgB,2CArBH,0DAAH,sDAyBd,OACE,kBAAC,GAAD,CAAML,OAAQO,EAAUL,YAAaA,EAAaD,QAAQ,EAAME,aAAcA,O,uYClC3E,IAAMd,GAAYrL,IAAOyM,QAAV,MC6BPC,GA3BF,WAAO,IAAD,EACejK,oBAAS,GADxB,mBACVkK,EADU,KACAT,EADA,OAEuBzJ,mBAAS,IAFhC,mBAEV0J,EAFU,KAEIE,EAFJ,KAGjB,OACE,kBAAC,GAAD,KACE,gCACE,yBAAK9I,UAAU,QACb,uBAAGA,UAAU,oBACb,oCAEF,yBAAKA,UAAU,SACb,4BAAKoJ,EAAW,QAAU,cAG7BA,EACG,kBAAC,GAAD,CACAT,YAAaA,EACbC,aAAcA,EACdE,gBAAiBA,IACjB,kBAAC,GAAD,CACAH,YAAaA,EACbC,aAAcA,EACdE,gBAAiBA,M,iVCxBpB,ICSHrO,GDTS+M,GAAgB/K,IAAOiE,IAAV,MCuEXxC,gBALS,SAAAC,GAAK,MAAK,CAChCyC,SAAUzC,EAAMyC,SAChBvC,WAAYF,EAAMG,MAAMD,cAGc,CAAEpD,eAAcN,uBAAsBU,YAAWgO,kB/B9CxD,yDAAM,WAAMzO,GAAN,eAAAC,EAAA,sEAClBvB,EAAIc,IAAI,SADU,OAC/BsF,EAD+B,OAErC4J,cAAc7O,GACdA,EAAQ8O,aAAY,WAClB/P,EAAOkM,KAAK,SAAUhG,EAAK5E,KAAK6D,OAC/B,KACH/D,EAAS,CACPG,KA/BsB,kBAgCtBC,QAAS0E,EAAK5E,OARqB,2CAAN,wD+B8ClBoD,EA5DF,SAAC,GAAgG,IAA9F0C,EAA6F,EAA7FA,SAAUjG,EAAmF,EAAnFA,qBAAiC0D,GAAkD,EAA7DhD,UAA6D,EAAlDgD,YAAYpD,EAAsC,EAAtCA,aAAcoO,EAAwB,EAAxBA,kBAAwB,EAC3EnK,mBAAS,MADkE,mBACpGsK,EADoG,KAC1FC,EAD0F,OAEjDvK,oBAAS,GAFwC,mBAEpGwK,EAFoG,KAE7EC,EAF6E,KAuC3G,OAnCA5M,qBAAU,YACS,uCAAG,sBAAAlC,EAAA,sDACJlB,KAAKC,MAAMC,aAAaC,QAAQ,YAE5C2P,GAAY,GACZJ,IACA1O,KAEA8O,GAAY,GAPI,2CAAH,qDAUjBG,KACC,IAEH7M,qBAAU,WACJsB,EAAWlE,eAAe,SAC5BmP,cAAc7O,IACdA,GAAQ8O,aAAY,WAClB/P,EAAOkM,KAAK,eAAgBrH,EAAWM,OACtC,QAEJ,CAACN,IAEJtB,qBAAU,WACH2M,IACHzO,IACA0O,GAAyB,MAE1B,CAACtL,IAEJV,OAAOkM,iBAAiB,gBAAgB,WAEtC,OADArQ,EAAOkM,KAAK,MAAO9E,EAASlB,KAAKf,KAC1B,MAIP,kBAAC,GAAD,MACgB,IAAb6K,GAAsB,kBAAC,GAAD,MAEtBA,GAAY,oCAEX,kBAAC,EAAD,CAAUhQ,OAAQA,IAElB,kBAAC,GAAD,MAEA,kBAAC,GAAD,WCnDOsQ,OARf,WACE,OACE,yBAAK9J,UAAU,OACb,kBAAC,GAAD,Q,wlBCJN,IAAM+J,GAAe,CACnBlJ,YAAa,IAyBAD,GAtBE,WAAmC,IAAlCzC,EAAiC,uDAAzB4L,GAAc/I,EAAW,uCACjD,OAAQA,EAAOjG,MACb,IjCLsB,kBiCMpB,OAAO,MACFoD,EADL,GAEK6C,EAAOhG,SAEd,IjCTuB,mBiCUrB,OAAO,MACFmD,EADL,CAEE0C,YAAaG,EAAOhG,UAExB,IjCbgC,4BiCc9B,OAAO,MACFmD,EADL,CAEE+B,aAAcc,EAAOhG,UAEzB,QACE,OAAOmD,I,w5BCtBb,IAAM4L,GAAe,CACnBzL,MAAO,GACPD,WAAY,IAkECE,GA/DM,WAAmC,IAAlCJ,EAAiC,uDAAzB4L,GAAc/I,EAAW,uCACrD,OAAQA,EAAOjG,MACb,I7BPyB,sB6BOJ,IAAD,EACYiG,EAAOhG,QAA7BqD,EADU,EACVA,WAAYC,EADF,EACEA,MACpB,OAAO,MACFH,EADL,GAEKG,EAFL,CAGEA,MAAM,MACDH,EAAMG,MADN,eAEFA,EAAMG,eAAiBH,EAAMA,QAEhCD,WAAYA,IAGhB,I7BlB0B,uB6BkBJ,IACZC,EAAU0C,EAAOhG,QAAjBsD,MACR,OAAO,MACFH,EADL,GAEK6C,EAAOhG,QAAQsD,MAFpB,CAGEA,MAAM,MACDH,EAAMG,MADN,eAEFA,EAAMG,eAFJ,uBAEyBH,EAAMA,OAF/B,aAEyCH,EAAMG,MAAMA,EAAMG,sBAIpE,I7B3BuB,oB6B2BJ,IACTgB,EAAiBuB,EAAOhG,QAAxByE,aACR,OAAO,MACFtB,EADL,CAEEG,MAAM,MACDH,EAAMG,MADN,eAEFmB,EAAetB,EAAMG,MAAMmB,GACxBtB,EAAMG,MAAMmB,GAAcuK,OAAOhJ,EAAOhG,SACxC,CAACgG,EAAOhG,aAIlB,I7BxC4B,yB6BwCJ,IAAD,EACqBmD,EAAMG,MAD3B,EACZ0C,EAAOhG,QAAiBiP,GADZ,iCAErB,MAAO,CACL3L,MAAM,MACD2L,GAEL5L,WAAY,IAGhB,I7B/CwB,qB6B+CJ,IAAD,EACa2C,EAAOhG,QAA7B2D,EADS,EACTA,IAAKc,EADI,EACJA,aACb,OAAO,MACFtB,EADL,CAEEG,MAAM,MACDH,EAAMG,MADN,eAEFmB,EAAetB,EAAMG,MAAMmB,GAAc6B,KAAI,SAAA8B,GAAO,OAAIA,EAAQzE,MAAQA,EAAhB,MAChDqC,EAAOhG,SACZoI,SAIV,QACE,OAAOjF,I,6jBChEb,ICKI+L,GDLEH,GAAe,CACnBxK,SAAU,GACVnE,OAAQ,IA0BK+O,GAxBO,WAAmC,IAAlChM,EAAiC,uDAAzB4L,GAAc/I,EAAW,uCACtD,OAAQA,EAAOjG,MACb,IlCLiC,sCkCM/B,OAAO,MACFoD,EADL,CAEEoB,SAAUyB,EAAOhG,UAErB,KAAKN,EACH,OAAO,MACFyD,EADL,CAEE/C,OAAQ4F,EAAOhG,UAEnB,IlCdoC,yCkCelC,OAAO,MACFmD,EADL,CAEEoB,SAAUpB,EAAMoB,SAAS+B,KAAI,SAAA8I,GAAO,OAAIA,EAAQ3L,iBAAmBuC,EAAOhG,QAAQyD,eAA1C,MAC/B2L,EAD+B,CACtBrL,gBAAiBiC,EAAOhG,QAAQ2M,iBAC9CyC,OAER,QACE,OAAOjM,IErBEkM,gBAAgB,CAC7BzJ,YACAtC,SACAF,uBDJIkM,GAAS,WACb,OAAO3M,OAAO4M,8BAAgC5M,OAAO4M,gCAIrDL,GADEI,KACME,aAAQC,aAAgBC,MAAQJ,MAEhCE,aAAQC,aAAgBC,OAGnBC,oBAAYC,GAAU,GAAIV,I,OELzCW,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,GAAD,OAEFtG,SAASuG,eAAe,U","file":"static/js/main.d743c81f.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { url } from './socket.io'\r\nconst token = JSON.parse(localStorage.getItem('@chat@'))\r\nlet api\r\nif (token) {\r\n  api = axios.create({\r\n    // baseURL: 'http://localhost:3333',\r\n    baseURL: url,\r\n    headers: {\r\n      'Authorization': `Bearer ${token.hasOwnProperty('token') ? token.token : ''}`,\r\n      'Content-Type': 'application/json',\r\n    },\r\n  })\r\n} else {\r\n  api = axios.create({\r\n    // baseURL: 'http://localhost:3333',\r\n    baseURL: url,\r\n    'Authorization': 'Bearer',\r\n    'Content-Type': 'application/json',\r\n  })\r\n}\r\n\r\naxios.get('https://cors-anywhere.herokuapp.com/https://api-chat-back.herokuapp.com/teste').then(te => console.log(te))\r\n\r\nexport default api","import io from 'socket.io-client'\r\n// const socket = io('http://localhost:3333')\r\nexport const url = 'https://api-chat-back.herokuapp.com/'\r\nconst socket = io(url)\r\n\r\nexport default socket\r\n","import api from '../../config/api'\r\nimport io from 'socket.io-client'\r\nimport { url } from '../../config/socket.io'\r\nexport const LOGIN_USER = 'user:LOGIN_USER'\r\nexport const SEARCH_USER = 'user:SEARCH_USER'\r\nexport const UPDATE_IMAGE_PROFILE = 'user:UPDATE_IMAGE_PROFILE'\r\n\r\nconst socket = io(url)\r\nlet timer\r\nexport const loginUser = (email, password) => async dispatch => {\r\n  let data = { data: '' }\r\n  data = await api.post(`/auth/sign-in`, {\r\n    email,\r\n    password\r\n  })\r\n  localStorage.setItem('@chat@', JSON.stringify({ token: data.data.token }))\r\n\r\n  // clearInterval(timer)\r\n  // timer = setInterval(() => {\r\n  //   socket.emit('online', data.data.user._id)\r\n  // }, 2000)\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: data.data\r\n  })\r\n}\r\n\r\nexport const getInfoUserLogged = () => async dispatch => {\r\n  const user = await api.get('/user')\r\n  clearInterval(timer)\r\n  timer = setInterval(() => {\r\n    socket.emit('online', user.data._id)\r\n  }, 2000)\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: user.data\r\n  })\r\n}\r\n\r\nexport const searchUser = (query) => async dispatch => {\r\n  let data\r\n  if (query !== '') {\r\n    data = await api.get(`/users/${query}`)\r\n  }\r\n\r\n  dispatch({\r\n    type: SEARCH_USER,\r\n    payload: data ? data.data : []\r\n  })\r\n}\r\n\r\nexport const updateImageProfile = (image) => async dispatch => {\r\n  const { data: { newImage } } = await api.put('users/imageProfile', image)\r\n  dispatch({\r\n    type: UPDATE_IMAGE_PROFILE,\r\n    payload: newImage\r\n  })\r\n}","import api from '../../config/api'\r\nimport socket from '../../config/socket.io'\r\n\r\nexport const LOADING_CONVERSATIONS = 'conversations:LOADING_CONVERSATIONS'\r\nexport const UPDATE_MESSAGES_NOT_READ = 'conversations:UPDATE_MESSAGES_NOT_READ'\r\nexport const STATUS = 'convertation:USER_STATUS'\r\n\r\nexport const loadingConversations = () => async  dispatch => {\r\n  const { data } = await api.get('/conversations')\r\n\r\n  dispatch({\r\n    type: LOADING_CONVERSATIONS,\r\n    payload: data\r\n  })\r\n}\r\n\r\nexport const updateStatus = (cleanStatus) => dispatch => {\r\n  if (cleanStatus) {\r\n    dispatch({\r\n      type: STATUS,\r\n      payload: {}\r\n    })\r\n  } else {\r\n    socket.on('status', status => {\r\n      dispatch({\r\n        type: STATUS,\r\n        payload: status\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n","export default function (time, place) {\r\n  let hour = new Date(time).getHours()\r\n  let minutes = new Date(time).getMinutes()\r\n\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes\r\n  hour = hour < 10 ? `0${hour}` : hour\r\n\r\n  let day = new Date(time).getDate()\r\n  let month = new Date(time).getMonth()\r\n  let year = new Date(time).getFullYear()\r\n  if (place === 'posts') {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if (day === new Date().getDate()) {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if ((new Date().getDate() - day) > 1 || new Date().getMonth() + 1 > month + 1) {\r\n    // if(new Date().getMonth() - month)\r\n    return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  }\r\n  if ((new Date().getDate() - day) === 1 && place === 'list') {\r\n    return `Ontem`\r\n  } else {\r\n    return `Ontem ${hour}:${minutes}`\r\n  }\r\n\r\n  // else {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // let hours = (timer / 1000 / 60 / 60)\r\n  // if (hours < 24) {\r\n  //   return `${hour}:${minutes}`\r\n  // } else if (hours > 24 && hours < 48) {\r\n  //   return `${place === 'list' ? 'ontem' : `${hour}:${minutes}`}`\r\n  // } else if (hours > 48) {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // return `${hour}:${minutes}`\r\n}","import styled from 'styled-components'\r\n\r\nexport const ConfigList = styled.ul`\r\n  width: 170px;\r\n  background: #f1f1f1;\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 0px;\r\n  border: solid 1px #bbb;\r\n  color: #666;\r\n  list-style-type: none;\r\n  z-index: 14;\r\n  li{\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    height: 30px;\r\n    border-bottom: 1px solid #bbb;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    label{\r\n      width: 100%;\r\n      display: inline-block;\r\n      padding-top: 5px;\r\n      height: 100%;\r\n    }\r\n\r\n    &:hover{\r\n      background: #ddd;\r\n    }\r\n  }\r\n`","import React, { useRef, useEffect } from 'react'\r\nimport { ConfigList } from './styles'\r\n\r\nconst MenuConfig = ({ setFileImage }) => {\r\n  const configRef = useRef()\r\n  useEffect(() => { configRef.current.focus() }, [])\r\n  const logout = () => {\r\n    localStorage.removeItem('@chat@')\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <>\r\n      <ConfigList ref={configRef}>\r\n        <li>\r\n          <input\r\n            type=\"file\"\r\n            id=\"#file\" hidden\r\n            onChange={({ target: { files } }) => setFileImage(files[0])} />\r\n          <label htmlFor=\"#file\">\r\n            Alterar imagem\r\n        </label></li>\r\n        <li onClick={logout}>Logout</li>\r\n      </ConfigList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MenuConfig\r\n","import api from '../../config/api'\r\nimport { UPDATE_MESSAGES_NOT_READ } from '../conversations/actionsCreators'\r\nexport const LOADING_POSTS = 'posts:LOADING_POSTS'\r\nexport const PREVIOUS_POSTS = 'posts:PREVIOUS_POSTS'\r\nexport const CLEAN_POSTS_USER = 'posts:CLEAN_POSTS_USER'\r\nexport const NEW_MESSAGE = 'posts:NEW_MESSAGE'\r\nexport const MESSAGE_READ = 'posts:MESSAGE_READ'\r\n\r\n\r\nexport const loadingPosts = (userChatActive) => async dispatch => {\r\n  let messages\r\n  if (userChatActive.idConversation) {\r\n    messages = await api.get(`conversation/messages/${userChatActive.idConversation}/1`)\r\n  }\r\n  dispatch({\r\n    type: LOADING_POSTS,\r\n    payload: {\r\n      // posts: messages ? messages.data : { messages: [], _id: userChatActive.idConversation },\r\n      posts: messages ? messages.data : { messages: [], _id: userChatActive.idConversation },\r\n      userActive: userChatActive,\r\n    }\r\n  })\r\n}\r\n\r\nexport const previousPosts = (idConversation, page) => async dispatch => {\r\n  const messages = await api.get(`conversation/messages/${idConversation}/${page}`)\r\n  dispatch({\r\n    type: PREVIOUS_POSTS,\r\n    payload: {\r\n      posts: messages.data\r\n    }\r\n  })\r\n}\r\n\r\nexport const newMessage = (mensagem) => async dispatch => {\r\n  dispatch({\r\n    type: NEW_MESSAGE,\r\n    payload: mensagem\r\n  })\r\n}\r\n\r\nexport const cleanPosts = ({ idConversation, idUser }) => async dispatch => {\r\n  await api.delete(`conversation/${idConversation}/${idUser}`)\r\n  dispatch({\r\n    type: CLEAN_POSTS_USER,\r\n    payload: idConversation\r\n  })\r\n}\r\n\r\nexport const updateMessageRead = ({ message, messagesNotRead }) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_MESSAGES_NOT_READ,\r\n    payload: {\r\n      numberMessages: messagesNotRead,\r\n      idConversation: message.conversation\r\n    }\r\n  })\r\n  dispatch({\r\n    type: MESSAGE_READ,\r\n    payload: message\r\n  })\r\n}","import styled from 'styled-components'\r\n\r\nexport const UserConversation = styled.li`\r\n  align-items:center;\r\n  background: #eee;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n  display: flex;\r\n  padding: 2px 5px;\r\n  height: 60px;\r\n  transition: background 200ms linear;\r\n  position: relative;\r\n  width: 100%;\r\n  &:hover{\r\n    background: #ddd;\r\n  }  \r\n  &:hover .btn-user-options{\r\n    display: block;\r\n  }\r\n\r\n  .user-image{\r\n    width: 40px;\r\n    img{\r\n      border-radius: 50%;\r\n      width: 100%;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  .user-info{\r\n    margin-left: 10px;\r\n    color: #666;\r\n    width: 70%;\r\n    letter-spacing: 0.6px;\r\n\r\n    p{\r\n     font-size: 12px; \r\n    }\r\n  }\r\n  .messages-not-read{\r\n    position: absolute;\r\n    background:rgba(89, 125, 204, 0.9);\r\n    width: 22px;\r\n    height: 22px;\r\n    max-height: 25px;\r\n    font-size: 14px;\r\n    padding-top: 3px ;\r\n    border-radius: 50%;\r\n    color: #F8f8f8;\r\n    left:25px;\r\n    text-align: center;\r\n    bottom: 1px;\r\n  }\r\n  .last-update{\r\n    position: absolute;\r\n    right: 10px;\r\n    top:6px;\r\n    font-size: 13px;\r\n    color: #777;\r\n    z-index: 8;\r\n  }\r\n  .btn-user-options{\r\n    position: absolute;\r\n    right: 10px;\r\n    bottom: 7px;\r\n    display: none;\r\n    z-index: 14;\r\n    width: 60px;\r\n  \r\n    i{\r\n      margin-left: 15px;\r\n      color: #888;\r\n      border-radius: 50%;\r\n      padding: 6px 12px;\r\n      transition: background 200ms ease-in;\r\n      &:hover{\r\n        background: rgba(0, 0, 0, 0.1);\r\n      }\r\n    }\r\n    .user-options{\r\n      width:160px;\r\n      position: absolute;\r\n      right: 28px;\r\n      background: #EEEEEE;\r\n      border-radius: 4px;\r\n      border: solid 1px #bbb;\r\n      z-index: 15;\r\n    }\r\n    li{\r\n      padding: 8px 5px 8px 10px;\r\n      border-bottom: 1px solid #bbb;\r\n    }\r\n  }\r\n\r\n  .add-chat a{\r\n    display: block;\r\n    text-decoration: none;\r\n    background: #7693D2;\r\n    color: #f8f8f8;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    padding: 3px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    width: 150px;\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport getHours from '../../../config/getHours'\r\nimport { loadingPosts } from '../../../reducers/posts/actionsCreators'\r\nimport { updateStatus } from '../../../reducers/conversations/actionsCreators'\r\nimport { UserConversation } from './styles'\r\n\r\nconst UserChat = ({ userChat, loadingPosts, search, listConversations, lastUpdate, updateStatus, userActive, posts, messagesNotRead, setIsShowConfirm, setDeleteUser, idConversation }) => {\r\n  const [isMenuOptions, setIsMenuOptions] = useState(false)\r\n\r\n  const createConversation = async (userId) => {\r\n    const isCreatedConversation = listConversations.contacts.some(conversation => conversation.user._id === userId)\r\n    if (!isCreatedConversation) {\r\n      const { data } = await api.post('/create/conversation', { userId })\r\n      await loadingPosts({ ...userChat, idConversation: data.idConversation })\r\n      if (userActive.hasOwnProperty('_id')) {\r\n        if (userActive._id === userId) return false\r\n        updateStatus(true)\r\n        return true\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClickList = async (idConversation) => {\r\n    if (!userActive.hasOwnProperty('_id')) {\r\n      await loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      return false\r\n    }\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      if (userActive._id.toString() === userChat._id.toString() && posts[idConversation]) {\r\n        return false\r\n      }\r\n      await loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      updateStatus(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserConversation\r\n      onClick={() => listConversations.contacts.length === 0\r\n        ? createConversation(userChat._id)\r\n        : listConversations.contacts.every(item => item.user._id === userChat._id\r\n          ? handleClickList(item.idConversation)\r\n          : createConversation(userChat._id))}\r\n      search={search}>\r\n      <div className=\"user-image\">\r\n        <img src={userChat.imageProfile ? userChat.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n      </div>\r\n      <div className=\"user-info\">\r\n        <div className=\"user-name\">\r\n          <h4>{userChat.name.length >= 18 ? userChat.name.substring(0, 18) + '...' : userChat.name}</h4>\r\n          <p>{userChat.username}</p>\r\n          {!search && !!messagesNotRead && <span className='messages-not-read'>\r\n            {messagesNotRead}\r\n          </span>}\r\n        </div>\r\n      </div>\r\n      {!search &&\r\n        <>\r\n          <div className=\"last-update\">\r\n            <span>{getHours(lastUpdate, 'list')}</span>\r\n          </div>\r\n          <div className=\"btn-user-options\"\r\n            onClick={() => setIsMenuOptions(!isMenuOptions)}\r\n            onMouseLeave={() => setIsMenuOptions(false)}>\r\n            <i className=\"fas fa-ellipsis-v\"></i>\r\n            {isMenuOptions && <ul className='user-options'>\r\n              <li onClick={() => {\r\n                setIsShowConfirm(true)\r\n                setDeleteUser({\r\n                  idUser: userChat._id,\r\n                  idConversation\r\n                })\r\n              }}>Excluir contato</li>\r\n            </ul>}\r\n          </div>\r\n        </>\r\n      }\r\n    </UserConversation>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations,\r\n  userActive: state.posts.userActive,\r\n  posts: state.posts.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingPosts, updateStatus })(UserChat)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerSearch = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  form{\r\n    width: 60%;\r\n    position: relative;\r\n    \r\n    input{\r\n      width: 100%;\r\n      padding: 5px 3px;\r\n      border-top-left-radius: 5px;\r\n      border-bottom-left-radius: 3px;\r\n      border-top-right-radius: 5px;\r\n      border-bottom-right-radius: 3px;\r\n      border: none;\r\n      outline: 0;\r\n    }\r\n    ul{\r\n      box-shadow: 1px 1px 5px #999;\r\n      width: 100%;\r\n      position: absolute;\r\n      z-index: 12;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from '../ListChat/UserChat'\r\nimport { searchUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ContainerSearch } from './styles'\r\n\r\nconst SearchUser = ({ searchUsers, searchUser }) => {\r\n  const [inputText, setInpuntText] = useState('')\r\n\r\n  const search = (e) => {\r\n    const input = e.target\r\n    searchUser(input.value)\r\n  }\r\n\r\n  return (\r\n    <ContainerSearch>\r\n      <form action=\"\">\r\n        <input type=\"text\"\r\n          placeholder='Pesquisar usuários'\r\n          name='input'\r\n          autoComplete='off'\r\n          onChange={search}\r\n        />\r\n        <ul>\r\n          {searchUsers.map(user => (\r\n            <UserChat\r\n              key={`search:${user._id}`}\r\n              search={true}\r\n              userChat={user}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </form>\r\n    </ContainerSearch>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  searchUsers: state.userInfo.serachUsers\r\n})\r\n\r\nexport default connect(mapStateToProps, { searchUser })(SearchUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ConatinerInfo = styled.header`\r\n  width:100%;\r\n  background: rgba(89, 125, 204, 0.8);\r\n  height: 70px;\r\n  border-bottom: 1px solid #bbb;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  justify-content: space-between;\r\n  \r\n  .user-logged > div, .user-conversation{\r\n    display: flex;\r\n    align-items:center;\r\n    color: #f2f2f2;\r\n    position: relative;\r\n    flex: 2;\r\n  }\r\n  .user-conversation{\r\n    flex: 2;\r\n  }\r\n  .user-logged > div{\r\n    justify-content: flex-end;\r\n    height: 100%;\r\n    i {\r\n      margin-right: 15px;\r\n      margin-left: 15px;\r\n    }\r\n  }\r\n  .user-logged{\r\n    position: relative;\r\n  }\r\n  .user-logged > div:hover{\r\n    cursor: pointer;\r\n    background: rgba(89, 125, 204, 0.5);\r\n  }\r\n  .user-img{\r\n    width: 60px;\r\n    img{\r\n      background: white;\r\n      ::selection{\r\n        background: transparent;\r\n      }\r\n      border-radius: 50%;\r\n      max-width:100%;\r\n    }\r\n  }\r\n  .user-img.conversation{\r\n    width: 40px;\r\n    float:right;\r\n  }\r\n  .user-info.logged{\r\n    margin-right: 10px;\r\n  }\r\n  .user-info.conversation{\r\n    margin-left: 10px;\r\n    p{\r\n      font-size: 14px;\r\n    }\r\n    .user-status{\r\n      position: relative;\r\n      margin-left: 4px;\r\n      &::before{\r\n        content: '';\r\n        position: relative;\r\n        top:3px;\r\n        right: 5px;\r\n        display: inline-block;\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        background: #4fdb66;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImage = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  left:0;\r\n  z-index: 15;\r\n\r\n  .close-preview{\r\n    color:white;\r\n    right: 250px;\r\n  }\r\n  .image-content{\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    figure{\r\n      margin-top: 50px;\r\n      img{\r\n        display: block;\r\n        width:100%;\r\n        max-width:400px;\r\n      }\r\n    }\r\n  }\r\n  .actions{\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    padding-top: 20px;\r\n\r\n    .btn{\r\n      height: 45px;\r\n      text-transform: uppercase;\r\n      font-weight: 600; \r\n      width: 100%;\r\n      border: 1px solid #aaa;\r\n      outline: none;\r\n      cursor: pointer;\r\n\r\n      &:first-child{\r\n        margin-right: 10px;\r\n        background: rgba(89, 125, 204, 0.8);\r\n        color: #f8f8f8;\r\n        &:hover{\r\n          background: rgba(89, 125, 204, 0.6);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gethours from '../../config/getHours'\r\nimport UserMenuConfig from './UserConfig'\r\nimport SearchUser from '../SearchUser'\r\nimport { updateImageProfile } from '../../reducers/userInfo/actionsCreators'\r\nimport { ConatinerInfo, PreviewImage } from './styles'\r\n\r\nconst InfoUser = ({ userInfo, userActive, status, updateImageProfile }) => {\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false)\r\n  const [fileImage, setFileImage] = useState(false)\r\n  const renderStatus = () => {\r\n    if (status.hasOwnProperty('_id')) {\r\n      return (\r\n        status.status ?\r\n          <small className='user-status'>\r\n            <b>Online</b>\r\n          </small>\r\n          :\r\n          <small style={{ fontSize: 11 }}>\r\n            <b>Visto por último {gethours(status.updatedAt)}</b>\r\n          </small>\r\n      )\r\n    }\r\n  }\r\n\r\n  const imageProfileUpdate = async () => {\r\n    if (fileImage) {\r\n      const data = new FormData()\r\n      data.append('imageProfile', fileImage)\r\n      updateImageProfile(data)\r\n      closeUpdateImage()\r\n    }\r\n  }\r\n\r\n  const closeUpdateImage = () => {\r\n    setFileImage(null)\r\n    setIsMenuVisible(false)\r\n  }\r\n\r\n  return (\r\n    <ConatinerInfo>\r\n      {fileImage && <PreviewImage>\r\n        <div className=\"close-preview\" onClick={closeUpdateImage}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </div>\r\n        <div className=\"image-content\">\r\n          <figure>\r\n            <img src={window.URL.createObjectURL(fileImage)} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className='btn' onClick={imageProfileUpdate}>Confirmar</button>\r\n          <button className='btn' onClick={closeUpdateImage}>Cancelar</button>\r\n        </div>\r\n      </PreviewImage>}\r\n\r\n      <div className=\"user-conversation\">\r\n        {userActive.hasOwnProperty('_id') &&\r\n          <>\r\n            <div className=\"user-img conversation\">\r\n              <img src={userActive.imageProfile ? userActive.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n            </div>\r\n            <div className=\"user-info conversation\">\r\n              {userActive && <h4>{userActive.name}</h4>}\r\n              {userActive && <p>{userActive.username}</p>}\r\n              {renderStatus()}\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n      <SearchUser />\r\n      <div className=\"user-logged\">\r\n        <div onClick={() => setTimeout(() => setIsMenuVisible(!isMenuVisible), 100)}>\r\n          <i className=\"fas fa-sort-down\"></i>\r\n          <div className=\"user-info logged\">\r\n            {userInfo.name && <h3>{userInfo.name}</h3>}\r\n            {userInfo.email && <p>{userInfo.email}</p>}\r\n          </div>\r\n          <div className=\"user-img logged\">\r\n            <img src={userInfo.imageProfile ? userInfo.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        {isMenuVisible &&\r\n          <UserMenuConfig\r\n            setFileImage={setFileImage}\r\n            setIsMenuVisible={setIsMenuVisible} />\r\n        }\r\n      </div>\r\n    </ConatinerInfo>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  status: state.listConversations.status,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateImageProfile })(InfoUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerMessage = styled.div`\r\n  clear: both;\r\n  position: ${props => props.preview ? 'static' : 'relative'};\r\n\r\n .warningMessage{\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 1em;\r\n    color: #888;\r\n    width: fit-content;\r\n    background: #C6C6D9;\r\n    height: 30px;\r\n    border-bottom: 1px solid #bbb;\r\n    display: block;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    margin: 0 auto;\r\n  } \r\n  ${props => props.preview && `\r\n    &:before{\r\n      content: '';\r\n      position:absolute;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: #f1f1f1;\r\n      z-index: 10;\r\n      top:0;\r\n      left: 0;\r\n      border-radius: 6px;\r\n    }      \r\n  `}\r\n\r\n  .content-message{\r\n    width: fit-content;\r\n    min-width:40px;\r\n    max-width: ${props => props.isImg ? '40%' : '60%'};\r\n    background: ${props => props.isIdUserLogged ? 'beige' : '#f8f8f8'};\r\n    margin-bottom: 5px;\r\n    border-radius: 6px;\r\n    padding: 5px 8px;\r\n    z-index: 2;\r\n    float: ${props => props.isIdUserLogged ? 'right' : 'left'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: ${props => props.preview ? 'static' : 'relative'};\r\n\r\n    &::after{\r\n      content: '';\r\n      position: absolute;\r\n      border-width: 10px;\r\n      border-color: beige transparent transparent transparent;\r\n      border-style: solid;\r\n      top:0;\r\n      right: -10px;\r\n      ${props => !props.isIdUserLogged && `\r\n        left: -10px;\r\n        right: inherit;\r\n        border-color: #f8f8f8 transparent transparent transparent;\r\n      `}\r\n    }\r\n\r\n    .content-img{\r\n      width: 100%;\r\n      overflow: hidden;\r\n      max-width: 100%;\r\n      max-height: 250px;\r\n    }\r\n    .content-img img{\r\n      width: 210px;\r\n      margin: 0 auto;\r\n      text-align: center;\r\n      display: block;\r\n      transition: transform 300ms ease-in-out;\r\n      ${props => props.preview && `\r\n        position: absolute;\r\n        min-width: 350px;\r\n        max-width: 700px;\r\n        width:100%;\r\n        max-height: 700px;\r\n        z-index: 11;\r\n        transform: translate(-50%, -50%);\r\n        left:50%;\r\n        top: 50%;\r\n      `}\r\n    }\r\n    div{\r\n      .hour{\r\n        position: relative;\r\n        width: 30px;\r\n        font-weight: 600;\r\n        color: #777;\r\n        float: right;\r\n        font-size: 11px;\r\n        right: -7px;\r\n        margin-top: 3px;\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport getHours from '../../../config/getHours'\r\nimport { ContainerMessage } from './styles'\r\n\r\nconst Message = ({ isIdUserLogged, message }) => {\r\n  const [isPreview, setIsPreview] = useState(false)\r\n\r\n  return (\r\n    <>\r\n      {isPreview && <div className=\"close-preview\" onClick={() => setIsPreview(false)}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>}\r\n      <ContainerMessage\r\n        // className='message'\r\n        isIdUserLogged={isIdUserLogged}\r\n        data-id-message={message._id}\r\n        data-js={!isIdUserLogged && `viewed:${message.viewed}`}\r\n        isImg={false}\r\n        preview={isPreview}>\r\n        {message &&\r\n          <div className=\"content-message\">\r\n            {message.imagePath && <div className=\"content-img\">\r\n              <img\r\n                onClick={() => setIsPreview(!isPreview)}\r\n                src={message.imagePath}\r\n                alt=\"\" />\r\n            </div>}\r\n            <div>\r\n              <p>{message.message}</p>\r\n              <span className='hour'>\r\n                {getHours(message.createdAt, 'posts')}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        }\r\n      </ContainerMessage>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerPosts = styled.main`\r\n  background: #d6d6c5;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 5px 15px;\r\n  overflow-y: auto;\r\n  position: relative;\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n    background: #F4F4F4;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 5px;\r\n    border-radius: 5px;\r\n    background:rgba(172, 167, 167, 0.8); \r\n  }\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport socket, { url } from '../../../config/socket.io'\r\nimport { newMessage, previousPosts } from '../../../reducers/posts/actionsCreators'\r\nimport Message from '../Message'\r\nimport { ContainerPosts } from './styles'\r\n\r\nlet scroll = {}\r\nlet idsMessages = {}\r\nlet page = 0\r\nconst Posts = ({ posts, userInfo, idConversation, containerChatRef, positionLine, messagesNotRead, pageActual, nextPage, previousPosts, totalPages }) => {\r\n  const [loadingMessages, setLoadingMessages] = useState(false)\r\n  const [isMessagesNotRead, setMessageWarning] = useState(false)\r\n\r\n  let socketnewMessage = io(url)\r\n  useEffect(() => {\r\n    if (!messagesNotRead) {\r\n      containerChatRef.current.scrollTop = containerChatRef.current.scrollHeight\r\n    } else {\r\n      let warningMessage = document.createElement('span')\r\n      warningMessage.textContent = 'Mensagen(s) não visualizada(s)'\r\n      warningMessage.classList.add('warningMessage')\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')[0]\r\n      let positionMessage = messages.getBoundingClientRect().top\r\n      containerChatRef.current.scrollTop = (positionMessage - positionLine) + 100\r\n      messages.insertAdjacentElement('afterbegin', warningMessage)\r\n    }\r\n    // if (scroll[idConversation]) {\r\n    //   containerChatRef.current.scrollTop = scroll[idConversation]\r\n    // }\r\n    socketnewMessage.on('newMessage', () => {\r\n      if (containerChatRef.current.scrollHeight - containerChatRef.current.scrollTop - 100 < 600) {\r\n        containerChatRef.current.scrollTop = containerChatRef.current.scrollHeight\r\n      }\r\n    })\r\n    initialConversation()\r\n  }, [idConversation])\r\n\r\n  const initialConversation = () => {\r\n    if (containerChatRef.current.scrollHeight === containerChatRef.current.clientHeight) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      if (messages) {\r\n        Object.keys(idsMessages).forEach(id => {\r\n          messages.forEach(async message => {\r\n            if (message.getBoundingClientRect().top < positionLine) {\r\n              socket.emit('registerMessageViewed', id)\r\n            }\r\n          })\r\n        })\r\n        idsMessages = {}\r\n      }\r\n    }\r\n  }\r\n  const registerIdsMessages = (message) => {\r\n    if (message.idUser.toString() !== userInfo._id && !message.viewed) {\r\n      idsMessages = {\r\n        ...idsMessages,\r\n        [message._id]: message._id\r\n      }\r\n    }\r\n  }\r\n\r\n  const postsPrevious = async (e) => {\r\n    if (e.currentTarget.scrollTop < 200) {\r\n      if (pageActual < totalPages && page !== pageActual) {\r\n        page = pageActual\r\n        await previousPosts(idConversation, nextPage)\r\n        return\r\n      }\r\n    }\r\n  }\r\n\r\n  const messagesViewed = async (e) => {\r\n    scroll = {\r\n      ...scroll,\r\n      [idConversation]: e.currentTarget.scrollTop\r\n    }\r\n    if (Object.keys(idsMessages).length > 0) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      messages.forEach(message => {\r\n        if (idsMessages[message.getAttribute('data-id-message')]) {\r\n          let id = idsMessages[message.getAttribute('data-id-message')]\r\n          if (message.getBoundingClientRect().top < positionLine) {\r\n            let { [id]: key, ...tail } = idsMessages\r\n            idsMessages = {\r\n              ...tail\r\n            }\r\n            socket.emit('registerMessageViewed', id)\r\n          }\r\n        }\r\n      })\r\n    }\r\n    await postsPrevious(e)\r\n  }\r\n\r\n  return (\r\n    <ContainerPosts ref={containerChatRef} onScroll={messagesViewed}>\r\n      {posts[idConversation].map(message => {\r\n        registerIdsMessages(message)\r\n        return (\r\n          <Message\r\n            key={message._id}\r\n            isIdUserLogged={message.idUser.toString() === userInfo._id}\r\n            message={message}\r\n          />\r\n        )\r\n      })}\r\n    </ContainerPosts>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  posts: state.posts.posts,\r\n  pageActual: state.posts.page,\r\n  totalPages: state.posts.totalPages,\r\n  nextPage: state.posts.nextPage,\r\n  messagesNotRead: state.posts.userActive.messagesNotRead\r\n})\r\n\r\nexport default connect(mapStateToProps, { newMessage, previousPosts })(Posts)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerSend = styled.div`\r\n  background: #ddd;\r\n  padding: 5px 15px;\r\n  width: 100%;\r\n  height: 90px;\r\n  display: flex;\r\n  padding-bottom:15px;\r\n  flex-wrap:wrap;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  .message-content{\r\n    textarea{\r\n      max-width: 400px;\r\n      resize: none;\r\n      overflow-x: hidden;\r\n      padding-left:12px;\r\n      padding-top:10px;\r\n      border-radius: 50px;\r\n      border: solid 1px #bbb;\r\n      outline:0;\r\n    }\r\n  }\r\n  .icons i{\r\n    font-size: 28px;\r\n    color: #3bb6e7;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .icons .fa-laugh{\r\n    color: #999;\r\n  }\r\n  .btn-send{\r\n    margin-left: 8px;\r\n    a{\r\n      border-radius: 20px;\r\n      text-decoration:none;\r\n      background: #aaa;\r\n      color: #f8f8f8;\r\n      font-size: 18px;\r\n      padding: 10px 40px;\r\n      display: block;\r\n      letter-spacing: 0.8px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImg = styled.figure`\r\n  position: absolute;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  padding: 15px 0;\r\n  left: 0;\r\n  background: #eee;\r\n  bottom: 100%;\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  .header{\r\n    .close{\r\n      position: absolute;\r\n      right: 50px;\r\n      top: 10px;\r\n      font-size: 28px;\r\n      cursor: pointer;\r\n      color: #444;\r\n    }\r\n\r\n    .image-name{\r\n      margin-bottom: 20px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .img-content{\r\n    max-width: 45%;\r\n    max-height: 380px;\r\n    img{\r\n      max-width: 80%;\r\n      max-height: 380px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Picker } from 'emoji-mart'\r\nimport { loadingConversations } from '../../../reducers/conversations/actionsCreators'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport api from '../../../config/api'\r\nimport { ContainerSend, PreviewImg } from './styles'\r\n\r\nconst SendMessage = ({ userActive, loadingConversations, containerChatRef }) => {\r\n  const [messageText, setMessageText] = useState('')\r\n  const [showEmoji, setShowEmoji] = useState(false)\r\n  const [fileImg, setFileImg] = useState(null)\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault()\r\n    if (messageText || fileImg) {\r\n      const data = new FormData()\r\n      data.append('userId', userActive._id)\r\n      data.append('message', messageText)\r\n      data.append('image', fileImg ? fileImg : '')\r\n      await api.post('conversation/message', data)\r\n      if (containerChatRef.current) {\r\n        containerChatRef.current.scrollTop = containerChatRef.current.scrollHeight\r\n      }\r\n      setMessageText('')\r\n      setFileImg(null)\r\n    }\r\n  }\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setMessageText(messageText + emoji)\r\n  }\r\n\r\n  return (\r\n    <ContainerSend>\r\n      {fileImg && <PreviewImg>\r\n        <div className=\"header\">\r\n          <div className=\"image-name\">\r\n            <p>{fileImg.name}</p>\r\n          </div>\r\n          <div className=\"close\" onClick={() => setFileImg(null)}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n        </div>\r\n        <div className=\"img-content\">\r\n          <img src={URL.createObjectURL(fileImg)} alt=\"\" />\r\n        </div>\r\n      </PreviewImg>}\r\n      <div className=\"message-content\">\r\n        {showEmoji && <Picker\r\n          onSelect={addEmoji}\r\n          set={'google'}\r\n          style={{ position: 'absolute', bottom: '80px', left: 0, zIndex: 20 }}\r\n        />}\r\n        <textarea\r\n          cols=\"50\"\r\n          rows=\"2\"\r\n          placeholder='Escreva uma mensagem'\r\n          value={messageText}\r\n          onChange={({ target }) => setMessageText(target.value)}\r\n        />\r\n      </div>\r\n      <input type=\"file\" name=\"\" id=\"#file\" hidden onChange={({ target: { files } }) => setFileImg(files[0])} />\r\n\r\n      <div className=\"icons\">\r\n        <i className=\"far fa-laugh\" onClick={() => setShowEmoji(!showEmoji)} />\r\n        <label htmlFor=\"#file\">\r\n          <i className=\"fas fa-image\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-send\">\r\n        <a href=\"/\" onClick={sendMessage}>Enviar</a>\r\n      </div>\r\n    </ContainerSend>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive,\r\n  listConversations: state.listConversations\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingConversations })(SendMessage)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  flex: 1 1 70%;\r\n  height: 90%;\r\n  display:flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  background-image: url('images/speech-bubble.svg');\r\n  background-repeat: no-repeat;\r\n  background-position-x: 70px;\r\n`\r\n\r\nexport const MessageViewed = styled.div`\r\n  max-width: 1060px;\r\n  height: 30px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom:90px;\r\n  overflow: unset\r\n`","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport Posts from './Posts'\r\nimport { newMessage, updateMessageRead } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport SendMessage from './SendMessage'\r\nimport { ContainerChat, MessageViewed } from './styles'\r\nimport socketMessageRead, { url } from '../../config/socket.io'\r\n\r\nlet positionLine\r\nconst Chat = ({ userActive, newMessage, loadingConversations, updateMessageRead }) => {\r\n  const containerChatRef = useRef()\r\n  const lineRef = useRef()\r\n\r\n  useEffect(() => {\r\n    positionLine = lineRef.current.getBoundingClientRect().top\r\n    const socket = io(url)\r\n    socket.on('newMessage', message => {\r\n      newMessage(message)\r\n      loadingConversations()\r\n    })\r\n    socketMessageRead.on('messageRead', message => {\r\n      updateMessageRead(message)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <ContainerChat>\r\n      {userActive.hasOwnProperty('_id') &&\r\n        <Posts\r\n          positionLine={positionLine}\r\n          idConversation={userActive.idConversation}\r\n          containerChatRef={containerChatRef}\r\n        />\r\n      }\r\n      <MessageViewed ref={lineRef} />\r\n      {userActive.hasOwnProperty('_id') &&\r\n        <SendMessage containerChatRef={containerChatRef}\r\n        />\r\n      }\r\n    </ContainerChat>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive\r\n})\r\nexport default connect(mapStateToProps, { newMessage, loadingConversations, updateMessageRead })(Chat)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  height: 120px;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 6;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #eee;\r\n\r\n  .close-modal{\r\n    position: absolute;\r\n    right: 10%;\r\n    top: 10px;\r\n    font-size: 26px;\r\n  }\r\n  .confirm-content{\r\n    padding-top:10px;\r\n    text-align:center;\r\n\r\n    h3{\r\n      letter-spacing: 0.7px;\r\n      margin-left: 5px;\r\n    }\r\n    i{\r\n      color: #eaf73b;\r\n      font-size: 26px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  .btn-actions{\r\n    margin-top: 20px;\r\n\r\n    .btn{\r\n      max-width: 160px;\r\n      width: 100%;\r\n      height: 30px;\r\n      text-transform: uppercase;\r\n      font-weight: 600;\r\n      border: 1px solid #aaa;\r\n      outline: 0;\r\n      cursor: pointer;\r\n      &:hover{\r\n        background: rgba(255, 255, 255, 0.6)\r\n      }\r\n    }\r\n    .btn.ok{\r\n      margin-left: 10px;\r\n      background: #7693D2;\r\n      color: #f8f8f8;\r\n      &:hover{\r\n        background: rgba(118, 147, 210, 0.8);\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { Container } from './styles'\r\n\r\nconst Confirm = ({ setIsShowConfirm, deleteConversation }) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"close-modal\" onClick={() => setIsShowConfirm(false)}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>\r\n      <div className=\"confirm-content\">\r\n        <h4>\r\n          <i className=\"fas fa-exclamation-triangle\"></i>\r\n          Deseja realmente excluir o contato? Todas as mensagens serão apagadas. <br />Deseja realmente continuar?\r\n        </h4>\r\n        <div className=\"btn-actions\">\r\n          <button className='btn cancel' onClick={() => setIsShowConfirm(false)}>\r\n            Cancelar\r\n          </button>\r\n          <button className='btn ok' onClick={() => deleteConversation()}>\r\n            Excluir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Confirm\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerList = styled.div`\r\n  flex: 1 1 25%;\r\n  background: #ffffef;\r\n  height: 90%;\r\n  overflow-y: auto;\r\n  border-left: solid 1px #bbb;\r\n  z-index: 5;\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from './UserChat'\r\nimport Confirm from '../Confirm'\r\nimport { cleanPosts } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport { ContainerList } from './styles'\r\n\r\nconst ListChat = ({ listConversations, cleanPosts, loadingConversations }) => {\r\n  const [isShowConfirm, setIsShowConfirm] = useState(false)\r\n  const [deleteUser, setDeleteUser] = useState({})\r\n\r\n  const deleteConversation = async () => {\r\n    await cleanPosts(deleteUser)\r\n    loadingConversations()\r\n    setIsShowConfirm(false)\r\n  }\r\n  return (\r\n    <>\r\n      {isShowConfirm && <Confirm\r\n        deleteConversation={deleteConversation}\r\n        setIsShowConfirm={setIsShowConfirm} />\r\n      }\r\n      <ContainerList>\r\n        <ul className=\"list-conversas\">\r\n          {listConversations.contacts.map(conversation => (\r\n            <UserChat\r\n              key={conversation.user._id}\r\n              userChat={conversation.user}\r\n              lastUpdate={conversation.updatedAt}\r\n              idConversation={conversation.idConversation}\r\n              messagesNotRead={conversation.messagesNotRead}\r\n              setDeleteUser={setDeleteUser}\r\n              setIsShowConfirm={setIsShowConfirm}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </ContainerList>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations\r\n})\r\n\r\nexport default connect(mapStateToProps, { cleanPosts, loadingConversations })(ListChat)\r\n","import styled from 'styled-components'\r\n\r\nexport const FormContainer = styled.form`\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n\r\n  .error{\r\n    color: red;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .group-input{\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n\r\n    &:before{\r\n      content: '*';\r\n      color: red;\r\n      position: absolute;\r\n      display: block;\r\n      left: -10px;\r\n    }\r\n  }\r\n  input{\r\n    width: 100%;\r\n    max-width: 350px;\r\n    padding: 8px 5px;\r\n  }\r\n  .btn-actions{\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    \r\n    .fa-arrow-left{\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .btn{\r\n    height: 45px;\r\n    text-transform: uppercase;\r\n    font-weight: 600; \r\n    width: 100%;\r\n    border: 1px solid #aaa;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n  }\r\n  .sign-in{\r\n    background: rgba(89, 125, 204, 0.8);\r\n    color: #f8f8f8;\r\n    &:hover{\r\n      background: rgba(89, 125, 204, 0.6);\r\n    }\r\n  }\r\n  .sign-up{\r\n    &:hover{\r\n      background: rgba(0, 0, 0, 0.1);\r\n      color: #444;\r\n    }\r\n  }\r\n\r\n`","import React from 'react'\r\nimport { FormContainer } from './styles'\r\n\r\nconst Form = ({ submit, signUp, setIsSignIn, messageError }) => {\r\n  return (\r\n    <FormContainer onSubmit={submit}>\r\n      <span className='error'>{messageError}</span>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"text\" name='name' placeholder='Digite seu nome completo' />\r\n      </div>}\r\n      <div className=\"group-input\">\r\n        <input type=\"email\" name='email' placeholder='Digite seu email' />\r\n      </div>\r\n      <div className=\"group-input\">\r\n        <input type=\"password\" name='password' placeholder='Digite sua senha' />\r\n      </div>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"password\" name='confirmPassword' placeholder='Confirme sua senha' />\r\n      </div>}\r\n      <div className=\"btn-actions\">\r\n        <button\r\n          onClick={() => signUp ? setIsSignIn(true) : setIsSignIn(false)}\r\n          className='btn sign-up'\r\n          type='button'>\r\n          {signUp\r\n            ? <span><i className=\"fas fa-arrow-left\" />Voltar</span>\r\n            : 'Cadastre-se'}\r\n        </button>\r\n        <button className='btn sign-in'>{signUp ? 'Cadastre-se' : 'Login'}</button>\r\n      </div>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignIn = ({ loginUser, setIsSignIn, messageError, setMessageError }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault()\r\n    const { email, password } = e.target\r\n    if (!email.value || !password.value) {\r\n      setMessageError('Preencha os campos corretamente!')\r\n      return false\r\n    }\r\n\r\n    await loginUser(email.value, password.value)\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <Form submit={login} setIsSignIn={setIsSignIn} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignIn)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignUp = ({ setIsSignIn, messageError, setMessageError, loginUser }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n  const register = async (e) => {\r\n    e.preventDefault()\r\n    const { name, email, password, confirmPassword } = e.target\r\n    if (!name.value || !email.value || !password.value || !confirmPassword.value) {\r\n      setMessageError('Todos os campos são obrigatórios!')\r\n      return false\r\n    }\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      setMessageError('Senhas diferentes!')\r\n      return false\r\n    }\r\n    try {\r\n      await api.post('auth/register', {\r\n        name: name.value,\r\n        email: email.value,\r\n        password: password.value\r\n      })\r\n      await loginUser(email.value, password.value)\r\n      window.location.reload()\r\n    } catch (error) {\r\n      setMessageError('Ocorreu um erro ao tentar se cadastrar!')\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Form submit={register} setIsSignIn={setIsSignIn} signUp={true} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignUp)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.section`\r\n  background: #ddd;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  header{\r\n    text-align:center;\r\n\r\n    .logo{\r\n      font-size: 7.5em;\r\n      color: rgba(89, 125, 204, 0.8);\r\n      p{\r\n        font-size: 20px;\r\n      }\r\n    }\r\n    .login{\r\n      color: #444;\r\n      font-style: italic;\r\n      font-size: 1.4em;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport { Container } from './styles'\r\nconst Auth = () => {\r\n  const [isSignIn, setIsSignIn] = useState(true)\r\n  const [messageError, setMessageError] = useState('')\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div className=\"logo\">\r\n          <i className=\"fas fa-comments\"></i>\r\n          <p>Chat</p>\r\n        </div>\r\n        <div className=\"login\">\r\n          <h1>{isSignIn ? 'Login' : 'Cadastro'}</h1>\r\n        </div>\r\n      </header>\r\n      {isSignIn\r\n        ? <SignIn\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />\r\n        : <SignUp\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  max-width: 1060px;\r\n  width: 100%;\r\n  height: 78vh;\r\n  border: 1px solid #bbb;\r\n  margin: 40px auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  @media (max-height:670px){\r\n    height: 85vh\r\n  }\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateStatus } from '../../reducers/conversations/actionsCreators'\r\nimport { loginUser, getInfoUserLogged } from '../../reducers/userInfo/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport InfoUser from '../../components/InfoUser'\r\nimport Posts from '../../components/Chat'\r\nimport ListChat from '../../components/ListChat'\r\nimport Auth from '../../components/Auth'\r\nimport { ContainerChat } from './styles'\r\nimport socket from '../../config/socket.io'\r\nlet timer\r\n\r\nconst Chat = ({ userInfo, loadingConversations, loginUser, userActive, updateStatus, getInfoUserLogged }) => {\r\n  const [isLogged, setIsLogged] = useState(null)\r\n  const [isInitialStatusUpdate, setIsInitialStatusUpdate] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getUserInfo = async () => {\r\n      const token = JSON.parse(localStorage.getItem('@chat@'))\r\n      if (token) {\r\n        setIsLogged(true)\r\n        getInfoUserLogged()\r\n        loadingConversations()\r\n      } else {\r\n        setIsLogged(false)\r\n      }\r\n    }\r\n    getUserInfo()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      clearInterval(timer)\r\n      timer = setInterval(() => {\r\n        socket.emit('verifyStatus', userActive._id)\r\n      }, 3000)\r\n    }\r\n  }, [userActive])\r\n\r\n  useEffect(() => {\r\n    if (!isInitialStatusUpdate) {\r\n      updateStatus()\r\n      setIsInitialStatusUpdate(true)\r\n    }\r\n  }, [userActive])\r\n\r\n  window.addEventListener('beforeunload', function () {\r\n    socket.emit('off', userInfo.user._id)\r\n    return ''\r\n  })\r\n\r\n  return (\r\n    <ContainerChat>\r\n      {isLogged === false && <Auth />}\r\n\r\n      {isLogged && <>\r\n        {/* info user and search users */}\r\n        <InfoUser socket={socket} />\r\n        {/* Component message */}\r\n        <Posts />\r\n        {/* Component list users */}\r\n        <ListChat />\r\n      </>}\r\n    </ContainerChat>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateStatus, loadingConversations, loginUser, getInfoUserLogged })(Chat)\r\n","import React from 'react';\nimport Chat from './pages/Chat'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chat />\n    </div>\n  );\n}\n\nexport default App\n","import { LOGIN_USER, SEARCH_USER, UPDATE_IMAGE_PROFILE } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  serachUsers: []\r\n}\r\n\r\nconst userInfo = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case SEARCH_USER:\r\n      return {\r\n        ...state,\r\n        serachUsers: action.payload\r\n      }\r\n    case UPDATE_IMAGE_PROFILE:\r\n      return {\r\n        ...state,\r\n        imageProfile: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userInfo","import { LOADING_POSTS, NEW_MESSAGE, CLEAN_POSTS_USER, MESSAGE_READ, PREVIOUS_POSTS } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  posts: {},\r\n  userActive: {}\r\n}\r\n\r\nconst loadingPosts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_POSTS: {\r\n      const { userActive, posts } = action.payload\r\n      return {\r\n        ...state,\r\n        ...posts,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: posts.posts\r\n        },\r\n        userActive: userActive\r\n      }\r\n    }\r\n    case PREVIOUS_POSTS: {\r\n      const { posts } = action.payload\r\n      return {\r\n        ...state,\r\n        ...action.payload.posts,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: [...posts.posts, ...state.posts[posts.idConversation]]\r\n        },\r\n      }\r\n    }\r\n    case NEW_MESSAGE: {\r\n      const { conversation } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [conversation]: state.posts[conversation]\r\n            ? state.posts[conversation].concat(action.payload)\r\n            : [action.payload]\r\n        }\r\n      }\r\n    }\r\n    case CLEAN_POSTS_USER: {\r\n      const { [action.payload]: id, ...tall } = state.posts\r\n      return {\r\n        posts: {\r\n          ...tall\r\n        },\r\n        userActive: {}\r\n      }\r\n    }\r\n    case MESSAGE_READ: {\r\n      const { _id, conversation } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [conversation]: state.posts[conversation].map(message => message._id === _id\r\n            ? { ...action.payload }\r\n            : message)\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default loadingPosts","import { LOADING_CONVERSATIONS, STATUS, UPDATE_MESSAGES_NOT_READ } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  status: {}\r\n}\r\nconst conversations = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      }\r\n    case STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      }\r\n    case UPDATE_MESSAGES_NOT_READ:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.idConversation === action.payload.idConversation\r\n          ? { ...contact, messagesNotRead: action.payload.numberMessages }\r\n          : contact)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default conversations","import { compose, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from '../reducers'\r\n\r\nconst logger = () => {\r\n  return window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n}\r\nlet compo\r\nif (logger()) {\r\n  compo = compose(applyMiddleware(thunk), logger())\r\n} else {\r\n  compo = compose(applyMiddleware(thunk))\r\n}\r\n\r\nexport default createStore(reducers, {}, compo)","import { combineReducers } from 'redux'\r\nimport userInfo from './userInfo'\r\nimport posts from './posts'\r\nimport listConversations from './conversations'\r\n\r\nexport default combineReducers({\r\n  userInfo,\r\n  posts,\r\n  listConversations\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport './index.css';\nimport store from './store'\nimport 'normalize.css'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}