{"version":3,"sources":["reducers/userInfo/actionsCreators.js","config/socket.io.js","config/api.js","reducers/conversations/actionsCreators.js","config/getHours.js","components/InfoUser/UserConfig/styles.js","components/InfoUser/UserConfig/index.js","reducers/posts/actionsCreators.js","components/ListChat/UserChat/styles.js","components/ListChat/UserChat/index.js","components/SearchUser/styles.js","components/SearchUser/index.js","components/InfoUser/styles.js","components/InfoUser/index.js","components/Chat/Message/styles.js","components/Chat/Message/index.js","components/Chat/Posts/styles.js","components/Chat/Posts/index.js","components/Chat/SendMessage/styles.js","components/Chat/SendMessage/index.js","components/Chat/styles.js","components/Chat/index.js","components/Confirm/styles.js","components/Confirm/index.js","components/ListChat/styles.js","components/ListChat/index.js","components/Form/styles.js","components/Form/index.js","components/Auth/SignIn/index.js","components/Auth/SignUp/index.js","components/Auth/styles.js","components/Auth/index.js","pages/Chat/styles.js","pages/Chat/index.js","App.js","reducers/userInfo/index.js","reducers/posts/index.js","reducers/conversations/index.js","store/index.js","reducers/index.js","index.js"],"names":["timer","url","socket","io","token","JSON","parse","localStorage","getItem","api","axios","create","baseURL","headers","hasOwnProperty","STATUS","loadingConversations","dispatch","a","get","data","type","payload","updateStatus","cleanStatus","on","status","loginUser","email","password","post","setItem","stringify","searchUser","query","time","place","hour","Date","getHours","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","ConfigList","styled","ul","MenuConfig","setFileImage","setShowInpurtUpdateName","configRef","useRef","useEffect","current","focus","ref","onClick","id","hidden","onChange","files","target","htmlFor","removeItem","window","location","reload","newMessage","mensagem","UserConversation","li","connect","state","listConversations","userActive","posts","loadingPosts","userChatActive","idConversation","messages","_id","userChat","search","lastUpdate","messagesNotRead","setIsShowConfirm","setDeleteUser","setShowList","useState","isMenuOptions","setIsMenuOptions","createConversation","userId","console","log","contacts","some","conversation","user","handleClickList","toString","length","every","item","className","src","imageProfile","alt","name","substring","username","onMouseLeave","idUser","ContainerSearch","div","searchUsers","userInfo","serachUsers","showList","inputRef","action","onFocus","onBlur","value","placeholder","autoComplete","input","map","key","ConatinerInfo","header","PreviewImage","Actions","ModalUpdateName","updateImageProfile","image","put","newImage","updateNameUser","newName","isMenuVisible","setIsMenuVisible","showInputUpdateName","fileImage","isTyping","setIsTyping","info","clearTimeout","setTimeout","imageProfileUpdate","FormData","append","closeUpdateImage","URL","createObjectURL","onSubmit","e","preventDefault","defaultValue","style","fontSize","gethours","updatedAt","renderStatus","ContainerMessage","props","isImg","isIdUserLogged","preview","Message","message","setUrlPreviewImage","data-id-message","data-js","viewed","imagePath","createdAt","ContainerPosts","main","idsMessages","page","pageActual","totalPages","nextPage","previousPosts","containerChatRef","positionLine","setLoadingMessages","socketnewMessage","scrollTop","opacity","setWarningMessageNotRead","initialConversation","scrollHeight","scroll","document","querySelectorAll","positionMessage","getBoundingClientRect","top","warningMessage","createElement","textContent","classList","add","insertAdjacentElement","createElementWarningMessage","clientHeight","Object","keys","forEach","emit","postsPrevious","firstElement","firstChild","childNodes","messagesViewed","getAttribute","tail","currentTarget","onScroll","TransitionGroup","from","to","registerIdsMessages","CSSTransition","timeout","classNames","ContainerSend","PreviewImg","figure","messageText","setMessageText","showEmoji","setShowEmoji","fileImg","setFileImg","textareaRef","sendMessage","trim","messageWarning","querySelector","remove","onSelect","emoji","native","set","position","bottom","left","zIndex","height","cols","rows","onKeyUp","keyCode","ContainerChat","MessageViewed","updateMessageRead","numberMessages","urlPreviewImage","loadingMessages","lineRef","socketMessageRead","renderContainerPosts","in","unmountOnExit","loading","color","Container","Confirm","deleteConversation","ContainerList","section","cleanPosts","delete","isShowConfirm","deleteUser","FormContainer","form","signUp","Form","submit","setIsSignIn","messageError","setMessageError","login","register","confirmPassword","Auth","isSignIn","getInfoUserLogged","clearInterval","setInterval","isLogged","setIsLogged","isInitialStatusUpdate","setIsInitialStatusUpdate","isShowLoader","setIsShowLoader","getUserInfo","addEventListener","App","initialState","concat","tall","compo","conversations","contact","combineReducers","logger","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","createStore","reducers","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.7434d654.chunk.js","sourcesContent":["import api from '../../config/api'\r\nimport io from 'socket.io-client'\r\nimport { url } from '../../config/socket.io'\r\nexport const LOGIN_USER = 'user:LOGIN_USER'\r\nexport const SEARCH_USER = 'user:SEARCH_USER'\r\nexport const UPDATE_IMAGE_PROFILE = 'user:UPDATE_IMAGE_PROFILE'\r\nexport const UPDATE_NAME_USER = 'user:UPDATE_NAME_USER'\r\n\r\nconst socket = io(url)\r\nlet timer\r\nexport const loginUser = (email, password) => async dispatch => {\r\n  let data = { data: '' }\r\n  data = await api.post(`/auth/sign-in`, {\r\n    email,\r\n    password\r\n  })\r\n  localStorage.setItem('@chat@', JSON.stringify({ token: data.data.token }))\r\n\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: data.data\r\n  })\r\n}\r\n\r\nexport const getInfoUserLogged = () => async dispatch => {\r\n  const user = await api.get('/user')\r\n  clearInterval(timer)\r\n  timer = setInterval(() => {\r\n    socket.emit('online', user.data._id)\r\n  }, 2000)\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: user.data\r\n  })\r\n}\r\n\r\nexport const searchUser = (query) => async dispatch => {\r\n  let data\r\n  if (query !== '') {\r\n    data = await api.get(`/users/${query}`)\r\n  }\r\n\r\n  dispatch({\r\n    type: SEARCH_USER,\r\n    payload: data ? data.data : []\r\n  })\r\n}\r\n\r\nexport const updateNameUser = (name) => async dispatch => {\r\n  const { data: { newName } } = await api.put('/user', { name })\r\n  dispatch({\r\n    type: UPDATE_NAME_USER,\r\n    payload: newName\r\n  })\r\n}\r\n\r\nexport const updateImageProfile = (image) => async dispatch => {\r\n  const { data: { newImage } } = await api.put('users/imageProfile', image)\r\n  dispatch({\r\n    type: UPDATE_IMAGE_PROFILE,\r\n    payload: newImage\r\n  })\r\n}","import io from 'socket.io-client'\r\nexport const url = 'https://api-chat-back.herokuapp.com/'\r\n// export const url = 'http://localhost:3333'\r\nconst socket = io(url)\r\n\r\nexport default socket\r\n","import axios from 'axios'\r\nimport { url } from './socket.io'\r\nconst token = JSON.parse(localStorage.getItem('@chat@'))\r\nlet api\r\nif (token) {\r\n  api = axios.create({\r\n    baseURL: url,\r\n    headers: {\r\n      'Authorization': `Bearer ${token.hasOwnProperty('token') ? token.token : ''}`,\r\n    },\r\n  })\r\n} else {\r\n  api = axios.create({\r\n    baseURL: url,\r\n  })\r\n}\r\n\r\n\r\nexport default api","import api from '../../config/api'\r\nimport socket from '../../config/socket.io'\r\n\r\nexport const LOADING_CONVERSATIONS = 'conversations:LOADING_CONVERSATIONS'\r\nexport const UPDATE_MESSAGES_NOT_READ = 'conversations:UPDATE_MESSAGES_NOT_READ'\r\nexport const STATUS = 'convertation:USER_STATUS'\r\n\r\nexport const loadingConversations = () => async  dispatch => {\r\n  const { data } = await api.get('/conversations')\r\n\r\n  dispatch({\r\n    type: LOADING_CONVERSATIONS,\r\n    payload: data\r\n  })\r\n}\r\n\r\nexport const updateStatus = (cleanStatus) => dispatch => {\r\n  if (cleanStatus) {\r\n    dispatch({\r\n      type: STATUS,\r\n      payload: {}\r\n    })\r\n  } else {\r\n    socket.on('status', status => {\r\n      dispatch({\r\n        type: STATUS,\r\n        payload: status\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n","export default function (time, place) {\r\n  let hour = new Date(time).getHours()\r\n  let minutes = new Date(time).getMinutes()\r\n\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes\r\n  hour = hour < 10 ? `0${hour}` : hour\r\n\r\n  let day = new Date(time).getDate()\r\n  let month = new Date(time).getMonth()\r\n  let year = new Date(time).getFullYear()\r\n  if (place === 'posts') {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if (day === new Date().getDate()) {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if ((new Date().getDate() - day) > 1 || new Date().getMonth() + 1 > month + 1) {\r\n    // if(new Date().getMonth() - month)\r\n    return `${day < 10 ? `0${day}` : day}/${month < 10 ? `${month + 1}` : month}/${year}`\r\n  }\r\n  if ((new Date().getDate() - day) === 1 && place === 'list') {\r\n    return `Ontem`\r\n  } else {\r\n    return `Ontem ${hour}:${minutes}`\r\n  }\r\n\r\n  // else {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // let hours = (timer / 1000 / 60 / 60)\r\n  // if (hours < 24) {\r\n  //   return `${hour}:${minutes}`\r\n  // } else if (hours > 24 && hours < 48) {\r\n  //   return `${place === 'list' ? 'ontem' : `${hour}:${minutes}`}`\r\n  // } else if (hours > 48) {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // return `${hour}:${minutes}`\r\n}","import styled from 'styled-components'\r\n\r\nexport const ConfigList = styled.ul`\r\n  width: 170px;\r\n  background: #f1f1f1;\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 0px;\r\n  border: solid 1px #bbb;\r\n  color: #666;\r\n  list-style-type: none;\r\n  z-index: 14;\r\n  li{\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    height: 30px;\r\n    border-bottom: 1px solid #bbb;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n\r\n    label{\r\n      width: 100%;\r\n      display: inline-block;\r\n      padding-top: 5px;\r\n      height: 100%;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &:hover{\r\n      background: #ddd;\r\n    }\r\n  }\r\n`","import React, { useRef, useEffect } from 'react'\r\nimport { ConfigList } from './styles'\r\n\r\nconst MenuConfig = ({ setFileImage, setShowInpurtUpdateName }) => {\r\n  const configRef = useRef()\r\n  useEffect(() => { configRef.current.focus() }, [])\r\n  const logout = () => {\r\n    localStorage.removeItem('@chat@')\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ConfigList ref={configRef}>\r\n        <li onClick={() => setShowInpurtUpdateName(true)}>Alterar nome do perfil</li>\r\n        <li>\r\n          <input\r\n            type=\"file\"\r\n            id=\"#file\" hidden\r\n            onChange={({ target: { files } }) => setFileImage(files[0])} />\r\n          <label htmlFor=\"#file\">\r\n            Alterar imagem\r\n        </label></li>\r\n        <li onClick={logout}>Logout</li>\r\n      </ConfigList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MenuConfig\r\n","import api from '../../config/api'\r\nimport { UPDATE_MESSAGES_NOT_READ } from '../conversations/actionsCreators'\r\nexport const LOADING_POSTS = 'posts:LOADING_POSTS'\r\nexport const PREVIOUS_POSTS = 'posts:PREVIOUS_POSTS'\r\nexport const CLEAN_POSTS_USER = 'posts:CLEAN_POSTS_USER'\r\nexport const NEW_MESSAGE = 'posts:NEW_MESSAGE'\r\nexport const MESSAGE_READ = 'posts:MESSAGE_READ'\r\n\r\n\r\nexport const loadingPosts = (userChatActive) => async dispatch => {\r\n  let messages\r\n  if (userChatActive.idConversation) {\r\n    messages = await api.get(`conversation/messages/${userChatActive.idConversation}/1`)\r\n  }\r\n  dispatch({\r\n    type: LOADING_POSTS,\r\n    payload: {\r\n      // posts: messages ? messages.data : { messages: [], _id: userChatActive.idConversation },\r\n      posts: messages ? messages.data : { messages: [], _id: userChatActive.idConversation },\r\n      userActive: userChatActive,\r\n    }\r\n  })\r\n}\r\n\r\nexport const previousPosts = (idConversation, page) => async dispatch => {\r\n  const messages = await api.get(`conversation/messages/${idConversation}/${page}`)\r\n  dispatch({\r\n    type: PREVIOUS_POSTS,\r\n    payload: {\r\n      posts: messages.data\r\n    }\r\n  })\r\n}\r\n\r\nexport const newMessage = (mensagem) => async dispatch => {\r\n  dispatch({\r\n    type: NEW_MESSAGE,\r\n    payload: mensagem\r\n  })\r\n}\r\n\r\nexport const cleanPosts = ({ idConversation, idUser }) => async dispatch => {\r\n  console.log(idConversation, idUser)\r\n  await api.delete(`conversation/${idConversation}/${idUser}`)\r\n  dispatch({\r\n    type: CLEAN_POSTS_USER,\r\n    payload: idConversation\r\n  })\r\n}\r\n\r\nexport const updateMessageRead = ({ message, messagesNotRead }) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_MESSAGES_NOT_READ,\r\n    payload: {\r\n      numberMessages: messagesNotRead,\r\n      idConversation: message.conversation\r\n    }\r\n  })\r\n  dispatch({\r\n    type: MESSAGE_READ,\r\n    payload: message\r\n  })\r\n}","import styled from 'styled-components'\r\n\r\nexport const UserConversation = styled.li`\r\n  align-items:center;\r\n  background: #eee;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n  display: flex;\r\n  padding: 2px 5px;\r\n  height: 60px;\r\n  transition: background 200ms linear;\r\n  position: relative;\r\n  width: 100%;\r\n  &:hover{\r\n    background: #ddd;\r\n  }  \r\n  &:hover .btn-user-options{\r\n    display: block;\r\n  }\r\n\r\n  .user-image{\r\n    width: 40px;\r\n    img{\r\n      border-radius: 50%;\r\n      width: 100%;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  .user-info{\r\n    margin-left: 10px;\r\n    color: #666;\r\n    width: 70%;\r\n    letter-spacing: 0.6px;\r\n\r\n    p{\r\n     font-size: 12px; \r\n    }\r\n  }\r\n  .messages-not-read{\r\n    position: absolute;\r\n    background:rgba(89, 125, 204, 0.9);\r\n    width: 22px;\r\n    height: 22px;\r\n    max-height: 25px;\r\n    font-size: 14px;\r\n    padding-top: 3px ;\r\n    border-radius: 50%;\r\n    color: #F8f8f8;\r\n    left:25px;\r\n    text-align: center;\r\n    bottom: 1px;\r\n  }\r\n  .last-update{\r\n    position: absolute;\r\n    right: 10px;\r\n    top:6px;\r\n    font-size: 13px;\r\n    color: #777;\r\n    z-index: 8;\r\n  }\r\n  .btn-user-options{\r\n    position: absolute;\r\n    right: 10px;\r\n    bottom: 7px;\r\n    display: none;\r\n    z-index: 14;\r\n    width: 60px;\r\n  \r\n    i{\r\n      margin-left: 15px;\r\n      color: #888;\r\n      border-radius: 50%;\r\n      padding: 6px 12px;\r\n      transition: background 200ms ease-in;\r\n      &:hover{\r\n        background: rgba(0, 0, 0, 0.1);\r\n      }\r\n    }\r\n    .user-options{\r\n      width:160px;\r\n      position: absolute;\r\n      right: 28px;\r\n      background: #EEEEEE;\r\n      border-radius: 4px;\r\n      border: solid 1px #bbb;\r\n      z-index: 15;\r\n    }\r\n    li{\r\n      padding: 8px 5px 8px 10px;\r\n      border-bottom: 1px solid #bbb;\r\n    }\r\n  }\r\n\r\n  .add-chat a{\r\n    display: block;\r\n    text-decoration: none;\r\n    background: #7693D2;\r\n    color: #f8f8f8;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    padding: 3px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    width: 150px;\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport getHours from '../../../config/getHours'\r\nimport { loadingPosts } from '../../../reducers/posts/actionsCreators'\r\nimport { updateStatus } from '../../../reducers/conversations/actionsCreators'\r\nimport { UserConversation } from './styles'\r\n\r\nconst UserChat = ({ userChat, loadingPosts, search, listConversations, lastUpdate, updateStatus, userActive, posts, messagesNotRead, setIsShowConfirm, setDeleteUser, idConversation, setShowList }) => {\r\n  const [isMenuOptions, setIsMenuOptions] = useState(false)\r\n\r\n  const createConversation = async (userId) => {\r\n    console.log('teste')\r\n    const isCreatedConversation = listConversations.contacts.some(conversation => conversation.user._id === userId)\r\n    if (!isCreatedConversation) {\r\n      const { data } = await api.post('/create/conversation', { userId })\r\n      await loadingPosts({ ...userChat, idConversation: data.idConversation })\r\n      if (userActive.hasOwnProperty('_id')) {\r\n        if (userActive._id === userId) return false\r\n        updateStatus(true)\r\n        return true\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClickList = async (idConversation) => {\r\n    if (!userActive.hasOwnProperty('_id')) {\r\n      await loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      return false\r\n    }\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      if (userActive._id.toString() === userChat._id.toString() && posts[idConversation]) {\r\n        return false\r\n      }\r\n      await loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      updateStatus(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserConversation\r\n      onClick={() => {\r\n        listConversations.contacts.length === 0\r\n          ? createConversation(userChat._id)\r\n          : listConversations.contacts.every(item => item.user._id === userChat._id\r\n            ? handleClickList(item.idConversation)\r\n            : createConversation(userChat._id))\r\n        search && setShowList(false)\r\n      }}>\r\n      <div className=\"user-image\">\r\n        <img src={userChat.imageProfile ? userChat.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n      </div>\r\n      <div className=\"user-info\">\r\n        <div className=\"user-name\">\r\n          <h4>{userChat.name.length >= 18 ? userChat.name.substring(0, 18) + '...' : userChat.name}</h4>\r\n          <p>{userChat.username}</p>\r\n          {!search && !!messagesNotRead && <span className='messages-not-read'>\r\n            {messagesNotRead}\r\n          </span>}\r\n        </div>\r\n      </div>\r\n      {!search &&\r\n        <>\r\n          <div className=\"last-update\">\r\n            <span>{getHours(lastUpdate, 'list')}</span>\r\n          </div>\r\n          <div className=\"btn-user-options\"\r\n            onClick={() => setIsMenuOptions(!isMenuOptions)}\r\n            onMouseLeave={() => setIsMenuOptions(false)}>\r\n            <i className=\"fas fa-ellipsis-v\"></i>\r\n            {isMenuOptions && <ul className='user-options'>\r\n              <li onClick={() => {\r\n                setIsShowConfirm(true)\r\n                setDeleteUser({\r\n                  idUser: userChat._id,\r\n                  idConversation\r\n                })\r\n              }}>Excluir mensagens</li>\r\n            </ul>}\r\n          </div>\r\n        </>\r\n      }\r\n    </UserConversation>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations,\r\n  userActive: state.posts.userActive,\r\n  posts: state.posts.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingPosts, updateStatus })(UserChat)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerSearch = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  form{\r\n    width: 60%;\r\n    position: relative;\r\n    \r\n    input{\r\n      width: 100%;\r\n      padding: 5px 3px;\r\n      border-top-left-radius: 5px;\r\n      border-bottom-left-radius: 3px;\r\n      border-top-right-radius: 5px;\r\n      border-bottom-right-radius: 3px;\r\n      border: none;\r\n      outline: 0;\r\n    }\r\n    ul{\r\n      box-shadow: 1px 1px 5px #999;\r\n      width: 100%;\r\n      position: absolute;\r\n      z-index: 12;\r\n    }\r\n  }\r\n`","import React, { useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from '../ListChat/UserChat'\r\nimport { searchUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ContainerSearch } from './styles'\r\n\r\nconst SearchUser = ({ searchUsers, searchUser }) => {\r\n  const [showList, setShowList] = useState(false)\r\n  const inputRef = useRef()\r\n\r\n  const search = () => {\r\n    const input = inputRef.current.value\r\n    searchUser(input)\r\n  }\r\n\r\n  return (\r\n    <ContainerSearch>\r\n      <form action=\"\">\r\n        <input type=\"text\"\r\n          ref={inputRef}\r\n          className='input-search'\r\n          onFocus={() => setShowList(true)}\r\n          onBlur={() => inputRef.current.value = ''}\r\n          placeholder='Pesquisar usuários'\r\n          name='input'\r\n          autoComplete='off'\r\n          onChange={search}\r\n        />\r\n        {showList && <ul>\r\n          {searchUsers.map(user => (\r\n            <UserChat\r\n              key={`search:${user._id}`}\r\n              search={true}\r\n              userChat={user}\r\n              setShowList={setShowList}\r\n            />\r\n          ))}\r\n        </ul>}\r\n      </form>\r\n    </ContainerSearch>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  searchUsers: state.userInfo.serachUsers\r\n})\r\n\r\nexport default connect(mapStateToProps, { searchUser })(SearchUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ConatinerInfo = styled.header`\r\n  width:100%;\r\n  background: rgba(89, 125, 204, 0.8);\r\n  height: 70px;\r\n  border-bottom: 1px solid #bbb;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  justify-content: space-between;\r\n  \r\n  .user-logged > div, .user-conversation{\r\n    display: flex;\r\n    align-items:center;\r\n    color: #f2f2f2;\r\n    position: relative;\r\n    flex: 2;\r\n  }\r\n  .user-conversation{\r\n    flex: 2;\r\n  }\r\n  .user-logged > div{\r\n    justify-content: flex-end;\r\n    height: 100%;\r\n    i {\r\n      margin-right: 15px;\r\n      margin-left: 15px;\r\n    }\r\n  }\r\n  .user-logged{\r\n    position: relative;\r\n  }\r\n  .user-logged > div:hover{\r\n    cursor: pointer;\r\n    background: rgba(89, 125, 204, 0.5);\r\n  }\r\n  .user-img{\r\n    width: 60px;\r\n    img{\r\n      background: white;\r\n      ::selection{\r\n        background: transparent;\r\n      }\r\n      border-radius: 50%;\r\n      max-width:100%;\r\n    }\r\n  }\r\n  .user-img.conversation{\r\n    width: 40px;\r\n    float:right;\r\n  }\r\n  .user-info.logged{\r\n    margin-right: 10px;\r\n  }\r\n  .user-info.conversation{\r\n    margin-left: 10px;\r\n    p{\r\n      font-size: 14px;\r\n    }\r\n    .user-status{\r\n      position: relative;\r\n      margin-left: 4px;\r\n      letter-spacing: 0.6px;\r\n      &::before{\r\n        content: '';\r\n        position: relative;\r\n        top:3px;\r\n        right: 5px;\r\n        display: inline-block;\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        background: #4fdb66;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImage = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  left:0;\r\n  z-index: 15;\r\n\r\n  .close-preview{\r\n    color:white;\r\n    right: 250px;\r\n  }\r\n  .image-content{\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    figure{\r\n      margin-top: 50px;\r\n      img{\r\n        display: block;\r\n        width:100%;\r\n        max-width:400px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Actions = styled.div`\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    padding-top: 20px;\r\n\r\n    .btn{\r\n      height: 40px;\r\n      text-transform: uppercase;\r\n      font-weight: 600; \r\n      width: 100%;\r\n      border: 1px solid #aaa;\r\n      outline: none;\r\n      cursor: pointer;\r\n\r\n      &:first-child{\r\n        margin-right: 10px;\r\n        background: rgba(89, 125, 204, 0.8);\r\n        color: #f8f8f8;\r\n        &:hover{\r\n          background: rgba(89, 125, 204, 0.6);\r\n        }\r\n      }\r\n    }\r\n`\r\n\r\nexport const ModalUpdateName = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  z-index: 20;\r\n  top: 0;\r\n  left: 0;\r\n  form{\r\n    max-width: 350px;\r\n    width: 100%;\r\n    margin: 250px auto;\r\n     \r\n    .form-group input{\r\n      width: 100%;\r\n      /* height: 35px; */\r\n      padding: 8px 5px;\r\n    }\r\n\r\n    .action{\r\n      \r\n    }\r\n  }\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gethours from '../../config/getHours'\r\nimport UserMenuConfig from './UserConfig'\r\nimport SearchUser from '../SearchUser'\r\nimport socket from '../../config/socket.io'\r\nimport { updateImageProfile, updateNameUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ConatinerInfo, PreviewImage, ModalUpdateName, Actions } from './styles'\r\n\r\nlet timer\r\nconst InfoUser = ({ userInfo, userActive, status, updateImageProfile, updateNameUser }) => {\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false)\r\n  const [showInputUpdateName, setShowInpurtUpdateName] = useState(false)\r\n  const [fileImage, setFileImage] = useState(false)\r\n  const [isTyping, setIsTyping] = useState(false)\r\n\r\n  useEffect(() => {\r\n    userActive._id && socket.on('typing', info => {\r\n      if (info.idUser === userActive._id && info.idConversation === userActive.idConversation) {\r\n        clearTimeout(timer)\r\n        setIsTyping(true)\r\n        timer = setTimeout(() => {\r\n          setIsTyping(false)\r\n        }, 1000)\r\n      }\r\n    })\r\n  }, [userActive._id])\r\n\r\n  const renderStatus = () => {\r\n    if (status.hasOwnProperty('_id')) {\r\n      return (\r\n        status.status ?\r\n          <small className='user-status'>\r\n            <b>{isTyping ? 'Digitando...' : 'Online'}</b>\r\n          </small>\r\n          :\r\n          <small style={{ fontSize: 11 }}>\r\n            <b>Visto por último {gethours(status.updatedAt)}</b>\r\n          </small>\r\n      )\r\n    }\r\n  }\r\n\r\n  const imageProfileUpdate = async () => {\r\n    if (fileImage) {\r\n      const data = new FormData()\r\n      data.append('imageProfile', fileImage)\r\n      updateImageProfile(data)\r\n      closeUpdateImage()\r\n    }\r\n  }\r\n\r\n  const closeUpdateImage = () => {\r\n    setFileImage(null)\r\n    setIsMenuVisible(false)\r\n  }\r\n\r\n  const updateName = (e) => {\r\n    e.preventDefault()\r\n    const name = e.target.newName.value\r\n    if (name !== '') {\r\n      updateNameUser(name)\r\n      setShowInpurtUpdateName(false)\r\n      setIsMenuVisible(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ConatinerInfo className='header-info'>\r\n      {fileImage && <PreviewImage>\r\n        <div className=\"close-preview\" onClick={closeUpdateImage}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </div>\r\n        <div className=\"image-content\">\r\n          <figure>\r\n            <img src={window.URL.createObjectURL(fileImage)} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n        <Actions>\r\n          <button className='btn' onClick={imageProfileUpdate}>Confirmar</button>\r\n          <button className='btn' onClick={closeUpdateImage}>Cancelar</button>\r\n        </Actions>\r\n      </PreviewImage>}\r\n      {showInputUpdateName && <ModalUpdateName>\r\n        <form action=\"\" onSubmit={updateName}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"newName\"\r\n              defaultValue={userInfo.name}\r\n              placeholder='Digite um novo nome para o perfil' />\r\n          </div>\r\n          <Actions>\r\n            <button className='btn'>Alterar</button>\r\n            <button className='btn' onClick={() => setShowInpurtUpdateName(false)}>Cancelar</button>\r\n          </Actions>\r\n        </form>\r\n      </ModalUpdateName>}\r\n\r\n      <div className=\"user-conversation\">\r\n        {userActive.hasOwnProperty('_id') &&\r\n          <>\r\n            <div className=\"user-img conversation\">\r\n              <img src={userActive.imageProfile ? userActive.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n            </div>\r\n            <div className=\"user-info conversation\">\r\n              {userActive && <h4>{userActive.name}</h4>}\r\n              {userActive && <p>{userActive.username}</p>}\r\n              {renderStatus()}\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n      <SearchUser />\r\n      <div className=\"user-logged\">\r\n        <div onClick={() => setTimeout(() => setIsMenuVisible(!isMenuVisible), 100)}>\r\n          <i className=\"fas fa-sort-down\"></i>\r\n          <div className=\"user-info logged\">\r\n            {userInfo.name && <h3>{userInfo.name}</h3>}\r\n            {userInfo.email && <p>{userInfo.email}</p>}\r\n          </div>\r\n          <div className=\"user-img logged\">\r\n            <img src={userInfo.imageProfile ? userInfo.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        {isMenuVisible &&\r\n          <UserMenuConfig\r\n            setFileImage={setFileImage}\r\n            setIsMenuVisible={setIsMenuVisible}\r\n            setShowInpurtUpdateName={setShowInpurtUpdateName} />\r\n        }\r\n      </div>\r\n    </ConatinerInfo>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  status: state.listConversations.status,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateImageProfile, updateNameUser })(InfoUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerMessage = styled.div`\r\n  clear: both;\r\n  position: relative;\r\n\r\n .warningMessage{\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    color: #888;\r\n    width: fit-content;\r\n    background: #dcdcdc;\r\n    border-bottom: 1px solid #bbb;\r\n    display: block;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    margin: 0 auto;\r\n  } \r\n\r\n  .content-message{\r\n    width: fit-content;\r\n    min-width:40px;\r\n    max-width: ${props => props.isImg ? '40%' : '60%'};\r\n    background: ${props => props.isIdUserLogged ? 'beige' : '#f8f8f8'};\r\n    margin-bottom: 5px;\r\n    border-radius: 6px;\r\n    padding: 5px 8px;\r\n    z-index: 2;\r\n    float: ${props => props.isIdUserLogged ? 'right' : 'left'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-shadow: 0 0 15px #aaa;\r\n    position: ${props => props.preview ? 'static' : 'relative'};\r\n\r\n    &::after{\r\n      content: '';\r\n      position: absolute;\r\n      border-width: 10px;\r\n      border-color: beige transparent transparent transparent;\r\n      border-style: solid;\r\n      top:0;\r\n      right: -10px;\r\n      ${props => !props.isIdUserLogged && `\r\n        left: -10px;\r\n        right: inherit;\r\n        border-color: #f8f8f8 transparent transparent transparent;\r\n      `}\r\n    }\r\n\r\n    .content-img{\r\n      width: 100%;\r\n      overflow: hidden;\r\n      max-width: 100%;\r\n      max-height: 250px;\r\n      cursor: pointer;\r\n    }\r\n    .content-img img{\r\n      width: 210px;\r\n      margin: 0 auto;\r\n      text-align: center;\r\n      display: block;\r\n      transition: transform 300ms ease-in-out;\r\n    }\r\n    div{\r\n      .hour{\r\n        position: relative;\r\n        width: 30px;\r\n        font-weight: 600;\r\n        color: #777;\r\n        float: right;\r\n        font-size: 11px;\r\n        right: -7px;\r\n        margin-top: 3px;\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport getHours from '../../../config/getHours'\r\nimport { ContainerMessage } from './styles'\r\n\r\nconst Message = ({ isIdUserLogged, message, setUrlPreviewImage }) => {\r\n\r\n  return (\r\n    <ContainerMessage\r\n      isIdUserLogged={isIdUserLogged}\r\n      data-id-message={message._id}\r\n      data-js={!isIdUserLogged && `viewed:${message.viewed}`}\r\n      isImg={false}>\r\n      {message &&\r\n        <div className=\"content-message\">\r\n          {message.imagePath && <div className=\"content-img\">\r\n            <img\r\n              onClick={() => setUrlPreviewImage(message.imagePath)}\r\n              src={message.imagePath}\r\n              alt=\"\" />\r\n          </div>}\r\n          <div>\r\n            <p>{message.message}</p>\r\n            <span className='hour'>\r\n              {getHours(message.createdAt, 'posts')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </ContainerMessage>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerPosts = styled.main`\r\n  background: #d6d6c5;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 5px 15px;\r\n  overflow-y: auto;\r\n  position: relative;\r\n  opacity: 0;\r\n  transition: opacity 50ms linear;\r\n  flex: 5;\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n    background: #F4F4F4;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 5px;\r\n    border-radius: 5px;\r\n    background:rgba(172, 167, 167, 0.8); \r\n  }\r\n\r\n  .messages-enter {\r\n    opacity: 0;\r\n    position: absolute;\r\n    transform: translateX(-40px);\r\n  }\r\n  .messages-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 300ms ease-in;\r\n    transform: translateX(0%);\r\n    transition: transform 300ms ease-in;\r\n    position: relative;\r\n  }\r\n  .messages-exit {\r\n    /* opacity: 1; */\r\n  }\r\n  .messages-exit-active {\r\n    /* opacity: 0; */\r\n    /* transition: opacity 200ms ease-out; */\r\n  }\r\n`","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\r\nimport socket, { url } from '../../../config/socket.io'\r\nimport { newMessage, previousPosts } from '../../../reducers/posts/actionsCreators'\r\nimport Message from '../Message'\r\nimport { ContainerPosts } from './styles'\r\n\r\nlet idsMessages = {}\r\nlet page = 0\r\n\r\nconst Posts = ({ posts, userInfo, idConversation, containerChatRef, positionLine, messagesNotRead, pageActual, nextPage, previousPosts, totalPages, setUrlPreviewImage, setLoadingMessages }) => {\r\n  let socketnewMessage = io(url)\r\n  useEffect(() => {\r\n    page = 0\r\n    containerChatRef.current.scrollTop = 0\r\n    containerChatRef.current.style.opacity = 0\r\n    if (!messagesNotRead) {\r\n      containerChatRef.current.scrollTop += 99999\r\n      containerChatRef.current.style.opacity = 1\r\n      initialConversation()\r\n    } else {\r\n      containerChatRef.current.scrollTop = 0\r\n      setWarningMessageNotRead(true)\r\n    }\r\n\r\n    containerChatRef.current.style.opacity = 1\r\n    initialConversation()\r\n  }, [idConversation])\r\n\r\n  useEffect(() => {\r\n    socketnewMessage.on('newMessage', () => {\r\n      initialConversation()\r\n      if (containerChatRef.current.scrollHeight - containerChatRef.current.scrollTop - 100 < 650) {\r\n        containerChatRef.current.scrollTop = 99999\r\n      } else {\r\n        setWarningMessageNotRead(false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const createElementWarningMessage = (messages) => {\r\n    let warningMessage = document.createElement('span')\r\n    warningMessage.textContent = 'Mensagen(s) não visualizada(s)'\r\n    warningMessage.classList.add('warningMessage')\r\n    messages.insertAdjacentElement('afterbegin', warningMessage)\r\n    return warningMessage\r\n  }\r\n\r\n  const setWarningMessageNotRead = (scroll) => {\r\n    const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')[0]\r\n    if (messages) {\r\n      let positionMessage = messages.getBoundingClientRect().top\r\n      containerChatRef.current.style.opacity = 1\r\n      createElementWarningMessage(messages)\r\n      if (scroll) containerChatRef.current.scrollTop = (positionMessage - positionLine) + 100\r\n    }\r\n  }\r\n\r\n  const initialConversation = () => {\r\n    if (containerChatRef.current.scrollHeight === containerChatRef.current.clientHeight) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      if (messages) {\r\n        Object.keys(idsMessages).forEach(id => {\r\n          messages.forEach(async message => {\r\n            if (message.getBoundingClientRect().top < positionLine) {\r\n              socket.emit('registerMessageViewed', id)\r\n            }\r\n          })\r\n        })\r\n        idsMessages = {}\r\n      }\r\n      containerChatRef.current.style.opacity = 1\r\n\r\n    }\r\n  }\r\n  const registerIdsMessages = (message) => {\r\n    let isUserContact = message.from.toString() !== userInfo._id\r\n      ? true : message.to.toString() !== userInfo._id\r\n        ? true : false\r\n\r\n    if (isUserContact && !message.viewed) {\r\n      idsMessages = {\r\n        ...idsMessages,\r\n        [message._id]: message._id\r\n      }\r\n    }\r\n  }\r\n\r\n  const postsPrevious = async (e) => {\r\n    if (pageActual < totalPages && page !== pageActual) {\r\n      let firstElement = containerChatRef.current.firstChild.childNodes[4]\r\n      page = pageActual\r\n      setLoadingMessages(true)\r\n      await previousPosts(idConversation, nextPage)\r\n      setTimeout(() => {\r\n        setLoadingMessages(false)\r\n      }, 200)\r\n      containerChatRef.current.scrollTop = firstElement.getBoundingClientRect().top\r\n      return\r\n    }\r\n    if (pageActual === totalPages) page = 0\r\n  }\r\n\r\n  const messagesViewed = async (e) => {\r\n    if (Object.keys(idsMessages).length > 0) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      messages.forEach(message => {\r\n        if (idsMessages[message.getAttribute('data-id-message')]) {\r\n          let id = idsMessages[message.getAttribute('data-id-message')]\r\n          if (message.getBoundingClientRect().top < positionLine) {\r\n            let { [id]: key, ...tail } = idsMessages\r\n            idsMessages = { ...tail }\r\n            socket.emit('registerMessageViewed', id)\r\n          }\r\n        }\r\n      })\r\n    }\r\n    if (e.currentTarget.scrollTop < 200) {\r\n      await postsPrevious(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ContainerPosts ref={containerChatRef} onScroll={messagesViewed}>\r\n      <TransitionGroup >\r\n        {posts[idConversation].map(message => {\r\n          registerIdsMessages(message)\r\n          return (\r\n            <CSSTransition\r\n              key={message._id}\r\n              timeout={400}\r\n              classNames='messages'\r\n            >\r\n              <Message\r\n                setUrlPreviewImage={setUrlPreviewImage}\r\n                isIdUserLogged={message.from.toString() === userInfo._id}\r\n                message={message}\r\n              />\r\n            </CSSTransition>\r\n          )\r\n        })}\r\n      </TransitionGroup>\r\n    </ContainerPosts>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  posts: state.posts.posts,\r\n  pageActual: state.posts.page,\r\n  totalPages: state.posts.totalPages,\r\n  nextPage: state.posts.nextPage,\r\n  messagesNotRead: state.posts.userActive.messagesNotRead\r\n})\r\n\r\nexport default connect(mapStateToProps, { newMessage, previousPosts })(Posts)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerSend = styled.div`\r\n  background: #ddd;\r\n  padding: 8px 15px;\r\n  width: 100%;\r\n  display: flex;\r\n  max-height: 80px;\r\n  flex-wrap:wrap;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  @media (max-height: 700px) {\r\n    max-height: 100px;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .message-content{\r\n    div.close-picker{\r\n      width: 100%;\r\n      height: 1000%;\r\n      background: transparent;\r\n      position: absolute;\r\n      top:-900%;\r\n      left:0;\r\n      z-index: 0;\r\n    }\r\n    textarea{\r\n      max-width: 500px;\r\n      resize: none;\r\n      overflow-x: hidden;\r\n      padding-left:12px;\r\n      padding-top:10px;\r\n      border-radius: 50px;\r\n      border: solid 1px #bbb;\r\n      outline:0;\r\n      @media (max-width: 900px) {\r\n        max-width: 320px;\r\n      }\r\n    }\r\n  }\r\n  .icons i{\r\n    font-size: 28px;\r\n    color: #3bb6e7;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .icons .fa-laugh{\r\n    color: #999;\r\n  }\r\n  .btn-send{\r\n    margin-left: 8px;\r\n    button{\r\n      border-radius: 20px;\r\n      text-decoration:none;\r\n      background: #aaa;\r\n      color: #f8f8f8;\r\n      font-size: 18px;\r\n      padding: 10px 40px;\r\n      display: block;\r\n      letter-spacing: 0.8px;\r\n      font-weight: 600;\r\n      border:none;\r\n      outline: none;\r\n\r\n      &:active{\r\n        transition: background 200ms ease;\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImg = styled.figure`\r\n  position: absolute;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  padding: 15px 0;\r\n  left: 0;\r\n  background: #eee;\r\n  bottom: 100%;\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  .header{\r\n    .close{\r\n      position: absolute;\r\n      right: 50px;\r\n      top: 10px;\r\n      font-size: 28px;\r\n      cursor: pointer;\r\n      color: #444;\r\n    }\r\n\r\n    .image-name{\r\n      margin-bottom: 20px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .img-content{\r\n    max-width: 45%;\r\n    max-height: 380px;\r\n    img{\r\n      max-width: 80%;\r\n      max-height: 380px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`","import React, { useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Picker } from 'emoji-mart'\r\nimport socket from '../../../config/socket.io'\r\nimport { loadingConversations } from '../../../reducers/conversations/actionsCreators'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport api from '../../../config/api'\r\nimport { ContainerSend, PreviewImg } from './styles'\r\n\r\nconst SendMessage = ({ userActive, userInfo, containerChatRef }) => {\r\n  const [messageText, setMessageText] = useState('')\r\n  const [showEmoji, setShowEmoji] = useState(false)\r\n  const [fileImg, setFileImg] = useState(null)\r\n  const textareaRef = useRef()\r\n\r\n  const sendMessage = async () => {\r\n    if (messageText.trim() !== '' || fileImg) {\r\n      const data = new FormData()\r\n      data.append('userId', userActive._id)\r\n      data.append('message', messageText)\r\n      data.append('image', fileImg ? fileImg : '')\r\n      await api.post('conversation/message', data)\r\n      if (containerChatRef.current) {\r\n        containerChatRef.current.scrollTop = containerChatRef.current.scrollHeight\r\n      }\r\n      setMessageText('')\r\n      setFileImg(null)\r\n      let messageWarning = document.querySelector('.warningMessage')\r\n      if (messageWarning) {\r\n        messageWarning.remove()\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChangeTextArea = (e) => {\r\n    setMessageText(e.target.value)\r\n    socket.emit('writing', {\r\n      idUser: userInfo._id,\r\n      idConversation: userActive.idConversation\r\n    })\r\n  }\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setMessageText(messageText + emoji)\r\n  }\r\n\r\n  return (\r\n    <ContainerSend>\r\n      {fileImg && <PreviewImg>\r\n        <div className=\"header\">\r\n          <div className=\"image-name\">\r\n            <p>{fileImg.name}</p>\r\n          </div>\r\n          <div className=\"close\" onClick={() => setFileImg(null)}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n        </div>\r\n        <div className=\"img-content\">\r\n          <img src={URL.createObjectURL(fileImg)} alt=\"\" />\r\n        </div>\r\n      </PreviewImg>}\r\n      <div className=\"message-content\">\r\n        {showEmoji &&\r\n          <>\r\n            <div className='close-picker' onClick={() => {\r\n              textareaRef.current.focus()\r\n              setShowEmoji(false)\r\n            }\r\n            } />\r\n            <Picker\r\n              onSelect={addEmoji}\r\n              set={'google'}\r\n              style={{ position: 'absolute', bottom: '65px', left: 0, zIndex: 20, height: '' }}\r\n            />\r\n          </>\r\n        }\r\n        <textarea\r\n          cols=\"50\"\r\n          rows=\"2\"\r\n          ref={textareaRef}\r\n          placeholder='Escreva uma mensagem'\r\n          value={messageText}\r\n          onChange={onChangeTextArea}\r\n          onKeyUp={(e) => {\r\n\r\n            if (e.keyCode === 13) {\r\n              sendMessage()\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <input type=\"file\"\r\n        id=\"#file\"\r\n        hidden\r\n        onChange={({ target: { files } }) => setFileImg(files[0])}\r\n      />\r\n\r\n      <div className=\"icons\">\r\n        <i className=\"far fa-laugh\"\r\n          onClick={() => {\r\n            setShowEmoji(!showEmoji)\r\n          }} />\r\n        <label htmlFor=\"#file\">\r\n          <i className=\"fas fa-image\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-send\">\r\n        <button onClick={sendMessage}>Enviar</button>\r\n      </div>\r\n    </ContainerSend>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive,\r\n  listConversations: state.listConversations,\r\n  userInfo: state.userInfo\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingConversations })(SendMessage)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  flex: 1 1 70%;\r\n  height: 91%;\r\n  display:flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  background-image: url('images/speech-bubble.svg');\r\n  background-size: 60%;\r\n  background-repeat: no-repeat;\r\n  background-position-x: 150px;\r\n  background-position-y: 60px;\r\n  @media (max-height: 700px) {\r\n    background-position-y: 0px;\r\n  }\r\n  .loader-mensagens{\r\n    width: 100%;\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    text-align: center;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    z-index: 15;\r\n  }\r\n`\r\n\r\nexport const MessageViewed = styled.div`\r\n  max-width: 1060px;\r\n  height: 30px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom:75px;\r\n  overflow: unset\r\n`","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport { PulseLoader } from 'react-spinners'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Posts from './Posts'\r\nimport { newMessage, updateMessageRead } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport SendMessage from './SendMessage'\r\nimport { ContainerChat, MessageViewed } from './styles'\r\nimport socketMessageRead, { url } from '../../config/socket.io'\r\n\r\nlet positionLine\r\nconst Chat = ({ userActive, newMessage, loadingConversations, updateMessageRead }) => {\r\n  const [urlPreviewImage, setUrlPreviewImage] = useState(\"\")\r\n  const [loadingMessages, setLoadingMessages] = useState(false)\r\n  const containerChatRef = useRef()\r\n  const lineRef = useRef()\r\n\r\n  useEffect(() => {\r\n    positionLine = lineRef.current.getBoundingClientRect().top\r\n    const socket = io(url)\r\n    socket.on('newMessage', async message => {\r\n      await newMessage(message)\r\n      setTimeout(() => loadingConversations(), 200)\r\n    })\r\n    socketMessageRead.on('messageRead', message => {\r\n      setTimeout(() => updateMessageRead(message), 300)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    renderContainerPosts()\r\n  }, [userActive.idConversation])\r\n\r\n  const renderContainerPosts = () => {\r\n    return (\r\n      <Posts\r\n        positionLine={positionLine}\r\n        idConversation={userActive.idConversation}\r\n        containerChatRef={containerChatRef}\r\n        setUrlPreviewImage={setUrlPreviewImage}\r\n        setLoadingMessages={setLoadingMessages}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={!!urlPreviewImage}\r\n        timeout={300}\r\n        classNames='preview'\r\n        unmountOnExit\r\n      >\r\n        <div className=\"preview-image\">\r\n          <div className=\"close-preview\" onClick={() => setUrlPreviewImage(false)}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n          <figure>\r\n            <img src={urlPreviewImage} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n      </CSSTransition>\r\n      <ContainerChat>\r\n        <div className=\"loader-mensagens\">\r\n          <PulseLoader\r\n            loading={loadingMessages}\r\n            color='#7693d2'\r\n          />\r\n        </div>\r\n        {userActive.hasOwnProperty('_id') && renderContainerPosts()\r\n\r\n        }\r\n        <MessageViewed ref={lineRef} />\r\n        {userActive.hasOwnProperty('_id')\r\n          && <SendMessage containerChatRef={containerChatRef}\r\n          />\r\n        }\r\n      </ContainerChat>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive\r\n})\r\nexport default connect(mapStateToProps, { newMessage, loadingConversations, updateMessageRead })(Chat)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  height: 120px;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 6;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #eee;\r\n\r\n  .close-modal{\r\n    position: absolute;\r\n    right: 10%;\r\n    top: 10px;\r\n    font-size: 26px;\r\n  }\r\n  .confirm-content{\r\n    padding-top:10px;\r\n    text-align:center;\r\n\r\n    h3{\r\n      letter-spacing: 0.7px;\r\n      margin-left: 5px;\r\n    }\r\n    i{\r\n      color: #eaf73b;\r\n      font-size: 26px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  .btn-actions{\r\n    margin-top: 20px;\r\n\r\n    .btn{\r\n      max-width: 160px;\r\n      width: 100%;\r\n      height: 30px;\r\n      text-transform: uppercase;\r\n      font-weight: 600;\r\n      border: 1px solid #aaa;\r\n      outline: 0;\r\n      cursor: pointer;\r\n      &:hover{\r\n        background: rgba(255, 255, 255, 0.6)\r\n      }\r\n    }\r\n    .btn.ok{\r\n      margin-left: 10px;\r\n      background: #7693D2;\r\n      color: #f8f8f8;\r\n      &:hover{\r\n        background: rgba(118, 147, 210, 0.8);\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { Container } from './styles'\r\n\r\nconst Confirm = ({ setIsShowConfirm, deleteConversation }) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"close-modal\" onClick={() => setIsShowConfirm(false)}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>\r\n      <div className=\"confirm-content\">\r\n        <h4>\r\n          <i className=\"fas fa-exclamation-triangle\"></i>\r\n          Tem certeza disso? Isso apagará todas as mensagens.<br />Deseja realmente continuar?\r\n        </h4>\r\n        <div className=\"btn-actions\">\r\n          <button className='btn cancel' onClick={() => setIsShowConfirm(false)}>\r\n            Cancelar\r\n          </button>\r\n          <button className='btn ok' onClick={() => deleteConversation()}>\r\n            Excluir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Confirm\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerList = styled.section`\r\nposition: relative;\r\nflex: 1 1 25%;\r\n@media (max-width: 930px) {\r\n  /* min-width: 500px; */\r\n  /* flex: 0;    */\r\n}\r\n.content{\r\n  z-index: 5;\r\n  position: relative;\r\n  height: 100%;\r\n  background: #ffffef;\r\n  /* height: 90%; */\r\n  overflow-y: auto;\r\n  border-left: solid 1px #bbb;\r\n    /* @media (max-width: 930px) {\r\n      transform: translateX(110%);\r\n      height: 100%;\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n    } */\r\n    .add-user{\r\n      text-align: center;\r\n      margin-top: 50px;\r\n      color: #555;\r\n      font-style: italic;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from './UserChat'\r\nimport Confirm from '../Confirm'\r\nimport { cleanPosts } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport { searchUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ContainerList } from './styles'\r\n\r\nconst ListChat = ({ listConversations, cleanPosts, loadingConversations, searchUser }) => {\r\n  const [isShowConfirm, setIsShowConfirm] = useState(false)\r\n  const [deleteUser, setDeleteUser] = useState({})\r\n\r\n  const deleteConversation = async () => {\r\n    await cleanPosts(deleteUser)\r\n    loadingConversations()\r\n    setIsShowConfirm(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isShowConfirm &&\r\n        <Confirm\r\n          deleteConversation={deleteConversation}\r\n          setIsShowConfirm={setIsShowConfirm} />\r\n      }\r\n      <ContainerList>\r\n        <div className=\"content\">\r\n          {!listConversations.contacts.length ?\r\n            <div className='add-user'>\r\n              Sua lista de conversas está vazia<br />\r\n            </div>\r\n            :\r\n            <ul className=\"list-conversas\">\r\n              {listConversations.contacts.map(conversation => (\r\n                <UserChat\r\n                  key={conversation.user._id}\r\n                  userChat={conversation.user}\r\n                  lastUpdate={conversation.updatedAt}\r\n                  idConversation={conversation.idConversation}\r\n                  messagesNotRead={conversation.messagesNotRead}\r\n                  setDeleteUser={setDeleteUser}\r\n                  setIsShowConfirm={setIsShowConfirm}\r\n                />\r\n              ))}\r\n            </ul>\r\n          }\r\n        </div>\r\n      </ContainerList>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations\r\n})\r\n\r\nexport default connect(mapStateToProps, { cleanPosts, loadingConversations, searchUser })(ListChat)\r\n","import styled from 'styled-components'\r\n\r\nexport const FormContainer = styled.form`\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n\r\n  .error{\r\n    color: red;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .group-input{\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n\r\n    ${props => props.signUp && `\r\n      &:before{\r\n        content: '*';\r\n        color: red;\r\n        position: absolute;\r\n        display: block;\r\n        left: -10px;\r\n      }\r\n    `}\r\n  }\r\n  input{\r\n    width: 100%;\r\n    max-width: 350px;\r\n    padding: 8px 5px;\r\n  }\r\n  .btn-actions{\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    \r\n    .fa-arrow-left{\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .btn{\r\n    height: 45px;\r\n    text-transform: uppercase;\r\n    font-weight: 600; \r\n    width: 100%;\r\n    border: 1px solid #aaa;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n  }\r\n  .sign-in{\r\n    background: rgba(89, 125, 204, 0.8);\r\n    color: #f8f8f8;\r\n    &:hover{\r\n      background: rgba(89, 125, 204, 0.6);\r\n    }\r\n  }\r\n  .sign-up{\r\n    &:hover{\r\n      background: rgba(0, 0, 0, 0.1);\r\n      color: #444;\r\n    }\r\n  }\r\n\r\n`","import React from 'react'\r\nimport { FormContainer } from './styles'\r\n\r\nconst Form = ({ submit, signUp, setIsSignIn, messageError }) => {\r\n  return (\r\n    <FormContainer onSubmit={submit} signUp={signUp}>\r\n      <span className='error'>{messageError}</span>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"text\" name='name' placeholder='Digite seu nome completo' />\r\n      </div>}\r\n      <div className=\"group-input\">\r\n        <input type=\"email\" name='email' placeholder='Digite seu email' />\r\n      </div>\r\n      <div className=\"group-input\">\r\n        <input type=\"password\" name='password' placeholder='Digite sua senha' />\r\n      </div>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"password\" name='confirmPassword' placeholder='Confirme sua senha' />\r\n      </div>}\r\n      <div className=\"btn-actions\">\r\n        <button\r\n          onClick={() => signUp ? setIsSignIn(true) : setIsSignIn(false)}\r\n          className='btn sign-up'\r\n          type='button'>\r\n          {signUp\r\n            ? <span><i className=\"fas fa-arrow-left\" />Voltar</span>\r\n            : 'Cadastre-se'}\r\n        </button>\r\n        <button className='btn sign-in'>{signUp ? 'Cadastre-se' : 'Login'}</button>\r\n      </div>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignIn = ({ loginUser, setIsSignIn, messageError, setMessageError }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault()\r\n    const { email, password } = e.target\r\n    if (!email.value || !password.value) {\r\n      setMessageError('Preencha os campos corretamente!')\r\n      return false\r\n    }\r\n\r\n    await loginUser(email.value, password.value)\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <Form submit={login} setIsSignIn={setIsSignIn} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignIn)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignUp = ({ setIsSignIn, messageError, setMessageError, loginUser }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n  const register = async (e) => {\r\n    e.preventDefault()\r\n    const { name, email, password, confirmPassword } = e.target\r\n    if (!name.value || !email.value || !password.value || !confirmPassword.value) {\r\n      setMessageError('Todos os campos são obrigatórios!')\r\n      return false\r\n    }\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      setMessageError('Senhas diferentes!')\r\n      return false\r\n    }\r\n    try {\r\n      await api.post('auth/register', {\r\n        name: name.value,\r\n        email: email.value,\r\n        password: password.value\r\n      })\r\n      await loginUser(email.value, password.value)\r\n      window.location.reload()\r\n    } catch (error) {\r\n      setMessageError('Ocorreu um erro ao tentar se cadastrar!')\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Form submit={register} setIsSignIn={setIsSignIn} signUp={true} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignUp)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.section`\r\n  background: #ddd;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  header{\r\n    text-align:center;\r\n\r\n    .logo{\r\n      font-size: 7.5em;\r\n      color: rgba(89, 125, 204, 0.8);\r\n      p{\r\n        font-size: 20px;\r\n      }\r\n    }\r\n    .login{\r\n      color: #444;\r\n      font-style: italic;\r\n      font-size: 1.4em;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport { Container } from './styles'\r\nconst Auth = () => {\r\n  const [isSignIn, setIsSignIn] = useState(true)\r\n  const [messageError, setMessageError] = useState('')\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div className=\"logo\">\r\n          <i className=\"fas fa-comments\"></i>\r\n          <p>Chat</p>\r\n        </div>\r\n        <div className=\"login\">\r\n          <h1>{isSignIn ? 'Login' : 'Cadastro'}</h1>\r\n        </div>\r\n      </header>\r\n      {isSignIn\r\n        ? <SignIn\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />\r\n        : <SignUp\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  max-width: 1160px;\r\n  min-width: 1000px;\r\n  width: 100%;\r\n  height: 88vh;\r\n  border: 1px solid #bbb;\r\n  margin: 40px auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  box-shadow: 0 0 10px #666; \r\n\r\n  .preview-image{\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #f8f8f8;\r\n    z-index: 10;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    figure{\r\n      width: 100%;\r\n      img{\r\n        margin: 20px auto;\r\n        display: block;\r\n        max-width: 70%;\r\n        max-height: 500px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .loader{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n.preview-enter {\r\n  opacity: 0;\r\n}\r\n.preview-enter-active {\r\n  opacity: 1;\r\n  transition: opacity 400ms ease-in;\r\n}\r\n.preview-exit {\r\n  opacity: 1;\r\n}\r\n.preview-exit-active {\r\n  opacity: 0;\r\n  transition: opacity 200ms ease-out;\r\n}\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PulseLoader } from 'react-spinners'\r\nimport { updateStatus } from '../../reducers/conversations/actionsCreators'\r\nimport { loginUser, getInfoUserLogged } from '../../reducers/userInfo/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport InfoUser from '../../components/InfoUser'\r\nimport Posts from '../../components/Chat'\r\nimport ListChat from '../../components/ListChat'\r\nimport Auth from '../../components/Auth'\r\nimport { ContainerChat } from './styles'\r\nimport socket from '../../config/socket.io'\r\nlet timer\r\n\r\nconst Chat = ({ userInfo, loadingConversations, userActive, updateStatus, getInfoUserLogged }) => {\r\n  const [isLogged, setIsLogged] = useState(null)\r\n  const [isInitialStatusUpdate, setIsInitialStatusUpdate] = useState(false)\r\n  const [isShowLoader, setIsShowLoader] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const getUserInfo = async () => {\r\n      const token = JSON.parse(localStorage.getItem('@chat@'))\r\n      if (token) {\r\n        setIsLogged(true)\r\n        await getInfoUserLogged()\r\n        await loadingConversations()\r\n        setTimeout(() => setIsShowLoader(false), 500)\r\n      } else {\r\n        setIsLogged(false)\r\n      }\r\n    }\r\n    getUserInfo()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      clearInterval(timer)\r\n      timer = setInterval(() => {\r\n        socket.emit('verifyStatus', userActive._id)\r\n      }, 3000)\r\n    }\r\n  }, [userActive])\r\n\r\n  useEffect(() => {\r\n    if (!isInitialStatusUpdate) {\r\n      updateStatus()\r\n      setIsInitialStatusUpdate(true)\r\n    }\r\n  }, [userActive])\r\n\r\n  userInfo._id && window.addEventListener('beforeunload', function () {\r\n    socket.emit('off', userInfo._id)\r\n    return ''\r\n  })\r\n\r\n  return (\r\n    <ContainerChat>\r\n      {isLogged === false && <Auth />}\r\n\r\n      {isLogged && <>\r\n        {/* info user and search users */}\r\n        {isShowLoader\r\n          ? <div className=\"loader\">\r\n            <PulseLoader\r\n              color='rgba(89, 125, 204, 0.8)'\r\n            />\r\n          </div>\r\n          : <>\r\n            <InfoUser socket={socket} />\r\n            {/* Component message */}\r\n            <Posts />\r\n            {/* Component list users */}\r\n            <ListChat /></>\r\n        }\r\n      </>}\r\n    </ContainerChat>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateStatus, loadingConversations, loginUser, getInfoUserLogged })(Chat)\r\n","import React from 'react';\r\nimport Chat from './pages/Chat'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import { LOGIN_USER, SEARCH_USER, UPDATE_IMAGE_PROFILE, UPDATE_NAME_USER } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  serachUsers: []\r\n}\r\n\r\nconst userInfo = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case SEARCH_USER:\r\n      return {\r\n        ...state,\r\n        serachUsers: action.payload\r\n      }\r\n    case UPDATE_IMAGE_PROFILE:\r\n      return {\r\n        ...state,\r\n        imageProfile: action.payload\r\n      }\r\n    case UPDATE_NAME_USER:\r\n      return {\r\n        ...state,\r\n        name: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userInfo","import { LOADING_POSTS, NEW_MESSAGE, CLEAN_POSTS_USER, MESSAGE_READ, PREVIOUS_POSTS } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  posts: {},\r\n  userActive: {}\r\n}\r\n\r\nconst loadingPosts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_POSTS: {\r\n      const { userActive, posts } = action.payload\r\n      return {\r\n        ...state,\r\n        ...posts,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: posts.posts\r\n        },\r\n        userActive: userActive\r\n      }\r\n    }\r\n    case PREVIOUS_POSTS: {\r\n      const { posts } = action.payload\r\n      return {\r\n        ...state,\r\n        ...action.payload.posts,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: [...posts.posts, ...state.posts[posts.idConversation]]\r\n        },\r\n      }\r\n    }\r\n    case NEW_MESSAGE: {\r\n      const { conversation } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [conversation]: state.posts[conversation]\r\n            ? state.posts[conversation].concat(action.payload)\r\n            : [action.payload]\r\n        }\r\n      }\r\n    }\r\n    case CLEAN_POSTS_USER: {\r\n      const { [action.payload]: id, ...tall } = state.posts\r\n      return {\r\n        posts: {\r\n          ...tall\r\n        },\r\n        userActive: {}\r\n      }\r\n    }\r\n    case MESSAGE_READ: {\r\n      const { _id, conversation } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [conversation]: state.posts[conversation].map(message => message._id === _id\r\n            ? { ...action.payload }\r\n            : message)\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default loadingPosts","import { LOADING_CONVERSATIONS, STATUS, UPDATE_MESSAGES_NOT_READ } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  status: {}\r\n}\r\nconst conversations = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      }\r\n    case STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      }\r\n    case UPDATE_MESSAGES_NOT_READ:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.idConversation === action.payload.idConversation\r\n          ? { ...contact, messagesNotRead: action.payload.numberMessages }\r\n          : contact)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default conversations","import { compose, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from '../reducers'\r\n\r\nconst logger = () => {\r\n  return window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n}\r\nlet compo\r\nif (logger()) {\r\n  compo = compose(applyMiddleware(thunk), logger())\r\n} else {\r\n  compo = compose(applyMiddleware(thunk))\r\n}\r\n\r\nexport default createStore(reducers, {}, compo)","import { combineReducers } from 'redux'\r\nimport userInfo from './userInfo'\r\nimport posts from './posts'\r\nimport listConversations from './conversations'\r\n\r\nexport default combineReducers({\r\n  userInfo,\r\n  posts,\r\n  listConversations\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport './index.css';\nimport store from './store'\nimport 'normalize.css'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}