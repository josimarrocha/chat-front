{"version":3,"sources":["reducers/userInfo/actionsCreators.js","config/socket.io.js","config/api.js","reducers/conversations/actionsCreators.js","config/getHours.js","components/InfoUser/UserConfig/styles.js","components/InfoUser/UserConfig/index.js","components/ListChat/UserChat/styles.js","components/ListChat/UserChat/index.js","reducers/posts/actionsCreators.js","components/SearchUser/styles.js","components/SearchUser/index.js","components/InfoUser/styles.js","components/InfoUser/index.js","components/Chat/Message/styles.js","components/Chat/Message/index.js","components/Chat/Posts/styles.js","components/Chat/Posts/index.js","components/Chat/SendMessage/styles.js","components/Chat/SendMessage/index.js","components/Chat/styles.js","components/Chat/index.js","components/Confirm/styles.js","components/Confirm/index.js","components/ListChat/styles.js","components/ListChat/index.js","components/Form/styles.js","components/Form/index.js","components/Auth/SignIn/index.js","components/Auth/SignUp/index.js","components/Auth/styles.js","components/Auth/index.js","pages/Chat/styles.js","pages/Chat/index.js","App.js","reducers/userInfo/index.js","reducers/posts/index.js","reducers/conversations/index.js","store/index.js","reducers/index.js","serviceWorker.js","index.js"],"names":["timer","url","socket","io","token","JSON","parse","localStorage","getItem","api","axios","create","baseURL","headers","hasOwnProperty","LOADING_CONVERSATIONS","STATUS","loadingConversations","dispatch","a","get","data","setItem","stringify","type","payload","contacts","updateStatus","cleanStatus","on","status","LOGIN_USER","loginUser","email","password","post","searchUser","query","time","place","hour","Date","getHours","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","ConfigList","styled","ul","MenuConfig","setFileImage","setShowInpurtUpdateName","isMenuVisible","setIsMenuVisible","configRef","useRef","useEffect","current","focus","id","hidden","onChange","files","target","ref","tabIndex","onBlur","onClick","htmlFor","removeItem","window","location","reload","UserConversation","li","connect","state","listConversations","userActive","posts","loadingPosts","userChatActive","idConversation","messages","_id","changeUserActive","userChat","search","lastUpdate","messagesNotRead","setIsShowConfirm","setDeleteUser","setShowList","useState","isMenuOptions","setIsMenuOptions","createConversation","userId","some","conversation","user","length","every","item","toString","handleClickList","className","src","imageProfile","alt","name","substring","username","onMouseLeave","idUser","ContainerSearch","div","searchUsers","userInfo","serachUsers","showList","inputRef","action","onFocus","value","placeholder","autoComplete","input","map","key","ConatinerInfo","header","PreviewImage","Actions","ModalUpdateName","updateImageProfile","image","put","newImage","updateNameUser","newName","showInputUpdateName","fileImage","isTyping","setIsTyping","info","clearTimeout","setTimeout","imageProfileUpdate","FormData","append","closeUpdateImage","URL","createObjectURL","onSubmit","e","preventDefault","defaultValue","style","fontSize","gethours","updatedAt","renderStatus","ContainerMessage","props","isImg","isIdUserLogged","preview","Message","message","setUrlPreviewImage","data-id-message","data-js","viewed","imagePath","createdAt","ContainerPosts","main","idsMessages","page","newMessage","mensagem","previousPosts","containerChatRef","positionLine","setLoadingMessages","loadingMessages","socketnewMessage","opacity","scrollTop","setWarningMessageNotRead","initialConversation","scrollHeight","scroll","document","querySelectorAll","positionMessage","getBoundingClientRect","top","warningMessage","createElement","textContent","classList","add","insertAdjacentElement","createElementWarningMessage","bottom","clientHeight","Object","keys","forEach","emit","postsPrevious","totalPages","pageActual","nextPage","messagesViewed","getAttribute","tail","currentTarget","firstElement","childNodes","onScroll","from","to","registerIdsMessages","ContainerSend","PreviewImg","figure","messageText","setMessageText","showEmoji","setShowEmoji","fileImg","setFileImg","textareaRef","sendMessage","trim","messageWarning","querySelector","remove","onSelect","emoji","native","set","position","left","zIndex","height","cols","rows","onKeyUp","keyCode","ContainerChat","LineScroll","porps","updateMessageRead","numberMessages","urlPreviewImage","lineRefTop","lineRefBottom","socketMessageRead","error","renderContainerPosts","CSSTransition","in","timeout","classNames","unmountOnExit","loading","color","Container","Confirm","deleteConversation","ContainerList","section","cleanPosts","delete","isShowConfirm","deleteUser","FormContainer","form","signUp","Form","submit","setIsSignIn","messageError","setMessageError","login","register","confirmPassword","Auth","isSignIn","getInfoUserLogged","clearInterval","setInterval","isLogged","setIsLogged","isInitialStatusUpdate","setIsInitialStatusUpdate","isShowLoader","setIsShowLoader","getUserInfo","addEventListener","App","initialState","concat","tall","compo","conversations","contact","combineReducers","logger","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","createStore","reducers","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","store","getElementById","process","href","origin","fetch","response","contentType","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.671e7eb6.chunk.js","sourcesContent":["import api from '../../config/api'\r\nimport io from 'socket.io-client'\r\nimport { url } from '../../config/socket.io'\r\nexport const LOGIN_USER = 'user:LOGIN_USER'\r\nexport const SEARCH_USER = 'user:SEARCH_USER'\r\nexport const UPDATE_IMAGE_PROFILE = 'user:UPDATE_IMAGE_PROFILE'\r\nexport const UPDATE_NAME_USER = 'user:UPDATE_NAME_USER'\r\n\r\nconst socket = io(url)\r\nlet timer\r\nexport const loginUser = (email, password) => async dispatch => {\r\n  let data = { data: '' }\r\n  data = await api.post(`/auth/sign-in`, {\r\n    email,\r\n    password\r\n  })\r\n  localStorage.setItem('@chat@', JSON.stringify({ token: data.data.token }))\r\n\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: data.data\r\n  })\r\n}\r\n\r\nexport const getInfoUserLogged = () => async dispatch => {\r\n  try {\r\n    const user = await api.get('/user')\r\n    localStorage.setItem('userInfo', JSON.stringify(user.data))\r\n    clearInterval(timer)\r\n    timer = setInterval(() => {\r\n      socket.emit('online', user.data._id)\r\n    }, 2000)\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: user.data\r\n    })\r\n  } catch (error) {\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'))\r\n    dispatch({\r\n      type: LOGIN_USER,\r\n      payload: userInfo\r\n    })\r\n  }\r\n}\r\n\r\nexport const searchUser = (query) => async dispatch => {\r\n  let data\r\n  if (query !== '') {\r\n    data = await api.get(`/users/${query}`)\r\n  }\r\n\r\n  dispatch({\r\n    type: SEARCH_USER,\r\n    payload: data ? data.data : []\r\n  })\r\n}\r\n\r\nexport const updateNameUser = (name) => async dispatch => {\r\n  const { data: { newName } } = await api.put('/user', { name })\r\n  dispatch({\r\n    type: UPDATE_NAME_USER,\r\n    payload: newName\r\n  })\r\n}\r\n\r\nexport const updateImageProfile = (image) => async dispatch => {\r\n  const { data: { newImage } } = await api.put('users/imageProfile', image)\r\n  dispatch({\r\n    type: UPDATE_IMAGE_PROFILE,\r\n    payload: newImage\r\n  })\r\n}","import io from 'socket.io-client'\r\nexport const url = 'https://api-chat-back.herokuapp.com/'\r\n// export const url = 'http://localhost:3333'\r\nconst socket = io(url)\r\n\r\nexport default socket\r\n","import axios from 'axios'\r\nimport { url } from './socket.io'\r\nconst token = JSON.parse(localStorage.getItem('@chat@'))\r\nlet api\r\nif (token) {\r\n  api = axios.create({\r\n    baseURL: url,\r\n    headers: {\r\n      'Authorization': `Bearer ${token.hasOwnProperty('token') ? token.token : ''}`,\r\n    },\r\n  })\r\n} else {\r\n  api = axios.create({\r\n    baseURL: url,\r\n  })\r\n}\r\n\r\n\r\nexport default api","import api from '../../config/api'\r\nimport socket from '../../config/socket.io'\r\n\r\nexport const LOADING_CONVERSATIONS = 'conversations:LOADING_CONVERSATIONS'\r\nexport const UPDATE_MESSAGES_NOT_READ = 'conversations:UPDATE_MESSAGES_NOT_READ'\r\nexport const STATUS = 'convertation:USER_STATUS'\r\n\r\nexport const loadingConversations = () => async  dispatch => {\r\n  try {\r\n    const { data } = await api.get('/conversations')\r\n    localStorage.setItem('contacts', JSON.stringify(data))\r\n    dispatch({\r\n      type: LOADING_CONVERSATIONS,\r\n      payload: data\r\n    })\r\n  } catch (error) {\r\n    const contacts = JSON.parse(localStorage.getItem('contacts'))\r\n    dispatch({\r\n      type: LOADING_CONVERSATIONS,\r\n      payload: contacts\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateStatus = (cleanStatus) => dispatch => {\r\n  if (cleanStatus) {\r\n    dispatch({\r\n      type: STATUS,\r\n      payload: {}\r\n    })\r\n  } else {\r\n    socket.on('status', status => {\r\n      dispatch({\r\n        type: STATUS,\r\n        payload: status\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n","export default function (time, place) {\r\n  let hour = new Date(time).getHours()\r\n  let minutes = new Date(time).getMinutes()\r\n\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes\r\n  hour = hour < 10 ? `0${hour}` : hour\r\n\r\n  let day = new Date(time).getDate()\r\n  let month = new Date(time).getMonth()\r\n  let year = new Date(time).getFullYear()\r\n  if (place === 'posts') {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if (day === new Date().getDate()) {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if ((new Date().getDate() - day) > 1 || new Date().getMonth() + 1 > month + 1) {\r\n    // if(new Date().getMonth() - month)\r\n    return `${day < 10 ? `0${day}` : day}/${month < 10 ? `${month + 1}` : month}/${year}`\r\n  }\r\n  if ((new Date().getDate() - day) === 1 && place === 'list') {\r\n    return `Ontem`\r\n  } else {\r\n    return `Ontem ${hour}:${minutes}`\r\n  }\r\n\r\n  // else {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // let hours = (timer / 1000 / 60 / 60)\r\n  // if (hours < 24) {\r\n  //   return `${hour}:${minutes}`\r\n  // } else if (hours > 24 && hours < 48) {\r\n  //   return `${place === 'list' ? 'ontem' : `${hour}:${minutes}`}`\r\n  // } else if (hours > 48) {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // return `${hour}:${minutes}`\r\n}","import styled from 'styled-components'\r\n\r\nexport const ConfigList = styled.ul`\r\n  width: 170px;\r\n  background: #f1f1f1;\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 0px;\r\n  border: solid 1px #bbb;\r\n  color: #666;\r\n  list-style-type: none;\r\n  z-index: 14;\r\n  outline: 0;\r\n  li{\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    height: 30px;\r\n    border-bottom: 1px solid #bbb;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n\r\n    label{\r\n      width: 100%;\r\n      display: inline-block;\r\n      padding-top: 5px;\r\n      height: 100%;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &:hover{\r\n      background: #ddd;\r\n    }\r\n  }\r\n`","import React, { useRef, useEffect } from 'react'\r\nimport { ConfigList } from './styles'\r\n\r\nconst MenuConfig = ({ setFileImage, setShowInpurtUpdateName, isMenuVisible, setIsMenuVisible }) => {\r\n  const configRef = useRef()\r\n  useEffect(() => { configRef.current && configRef.current.focus() }, [isMenuVisible])\r\n  const logout = () => {\r\n    localStorage.removeItem('@chat@')\r\n    window.location.reload()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"file\"\r\n        id=\"#fileUser\" hidden\r\n        onChange={({ target: { files } }) => setFileImage(files[0])} />\r\n      {isMenuVisible &&\r\n        <ConfigList ref={configRef} tabIndex={0} onBlur={() => setIsMenuVisible(false)}>\r\n          <li onClick={() => setShowInpurtUpdateName(true)}>Alterar nome do perfil</li>\r\n          <li>\r\n            <label htmlFor=\"#fileUser\">\r\n              Alterar imagem\r\n        </label></li>\r\n          <li onClick={logout}>Logout</li>\r\n        </ConfigList>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MenuConfig\r\n","import styled from 'styled-components'\r\n\r\nexport const UserConversation = styled.li`\r\n  align-items:center;\r\n  background: #eee;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n  display: flex;\r\n  padding: 2px 5px;\r\n  height: 60px;\r\n  transition: background 200ms linear;\r\n  position: relative;\r\n  width: 100%;\r\n  &:hover{\r\n    background: #ddd;\r\n  }  \r\n  &:hover .btn-user-options{\r\n    display: block;\r\n  }\r\n\r\n  .user-image{\r\n    width: 40px;\r\n    img{\r\n      border-radius: 50%;\r\n      width: 100%;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  .user-info{\r\n    margin-left: 10px;\r\n    color: #666;\r\n    width: 70%;\r\n    letter-spacing: 0.6px;\r\n\r\n    p{\r\n     font-size: 12px; \r\n    }\r\n  }\r\n  .messages-not-read{\r\n    position: absolute;\r\n    background:rgba(89, 125, 204, 0.9);\r\n    width: 22px;\r\n    height: 22px;\r\n    max-height: 25px;\r\n    font-size: 14px;\r\n    padding-top: 3px ;\r\n    border-radius: 50%;\r\n    color: #F8f8f8;\r\n    left:25px;\r\n    text-align: center;\r\n    bottom: 1px;\r\n  }\r\n  .last-update{\r\n    position: absolute;\r\n    right: 10px;\r\n    top:6px;\r\n    font-size: 13px;\r\n    color: #777;\r\n    z-index: 8;\r\n  }\r\n  .btn-user-options{\r\n    position: absolute;\r\n    right: 10px;\r\n    bottom: 7px;\r\n    display: none;\r\n    z-index: 14;\r\n    width: 60px;\r\n  \r\n    i{\r\n      margin-left: 15px;\r\n      color: #888;\r\n      border-radius: 50%;\r\n      padding: 6px 12px;\r\n      transition: background 200ms ease-in;\r\n      &:hover{\r\n        background: rgba(0, 0, 0, 0.1);\r\n      }\r\n    }\r\n    .user-options{\r\n      width:160px;\r\n      position: absolute;\r\n      right: 28px;\r\n      background: #EEEEEE;\r\n      border-radius: 4px;\r\n      border: solid 1px #bbb;\r\n      z-index: 15;\r\n    }\r\n    li{\r\n      padding: 8px 5px 8px 10px;\r\n      border-bottom: 1px solid #bbb;\r\n    }\r\n  }\r\n\r\n  .add-chat a{\r\n    display: block;\r\n    text-decoration: none;\r\n    background: #7693D2;\r\n    color: #f8f8f8;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    padding: 3px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    width: 150px;\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport getHours from '../../../config/getHours'\r\nimport { loadingPosts, changeUserActive } from '../../../reducers/posts/actionsCreators'\r\nimport { updateStatus } from '../../../reducers/conversations/actionsCreators'\r\nimport { UserConversation } from './styles'\r\n\r\nconst UserChat = ({ userChat, loadingPosts, search, listConversations, lastUpdate, updateStatus, userActive, posts, messagesNotRead, setIsShowConfirm, setDeleteUser, idConversation, setShowList, changeUserActive }) => {\r\n  const [isMenuOptions, setIsMenuOptions] = useState(false)\r\n\r\n  const createConversation = async (userId) => {\r\n    const isCreatedConversation = listConversations.contacts.some(conversation => conversation.user._id === userId)\r\n    if (!isCreatedConversation) {\r\n      const { data } = await api.post('/create/conversation', { userId })\r\n      await loadingPosts({ ...userChat, idConversation: data.idConversation })\r\n      if (userActive.hasOwnProperty('_id')) {\r\n        if (userActive._id === userId) return false\r\n        updateStatus(true)\r\n        return true\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClickList = (idConversation) => {\r\n    if (!userActive.hasOwnProperty('_id')) {\r\n      loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      return false\r\n    }\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      if (userActive._id.toString() === userChat._id.toString()) {\r\n        return false\r\n      }\r\n      if (posts[idConversation]) {\r\n        changeUserActive({ ...userChat, idConversation, messagesNotRead })\r\n        return\r\n      }\r\n      loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      updateStatus(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserConversation\r\n      onClick={() => {\r\n        listConversations.contacts.length === 0\r\n          ? createConversation(userChat._id)\r\n          : listConversations.contacts.every(item => item.user._id === userChat._id\r\n            ? handleClickList(item.idConversation)\r\n            : createConversation(userChat._id))\r\n        search && setShowList(false)\r\n      }}>\r\n      <div className=\"user-image\">\r\n        <img src={userChat.imageProfile ? userChat.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n      </div>\r\n      <div className=\"user-info\">\r\n        <div className=\"user-name\">\r\n          <h4>{userChat.name.length >= 18 ? userChat.name.substring(0, 18) + '...' : userChat.name}</h4>\r\n          <p>{userChat.username}</p>\r\n          {!search && !!messagesNotRead && <span className='messages-not-read'>\r\n            {messagesNotRead}\r\n          </span>}\r\n        </div>\r\n      </div>\r\n      {!search &&\r\n        <>\r\n          <div className=\"last-update\">\r\n            <span>{getHours(lastUpdate, 'list')}</span>\r\n          </div>\r\n          <div className=\"btn-user-options\"\r\n            onClick={() => setIsMenuOptions(!isMenuOptions)}\r\n            onMouseLeave={() => setIsMenuOptions(false)}>\r\n            <i className=\"fas fa-ellipsis-v\"></i>\r\n            {isMenuOptions && <ul className='user-options'>\r\n              <li onClick={() => {\r\n                setIsShowConfirm(true)\r\n                setDeleteUser({\r\n                  idUser: userChat._id,\r\n                  idConversation\r\n                })\r\n              }}>Excluir mensagens</li>\r\n            </ul>}\r\n          </div>\r\n        </>\r\n      }\r\n    </UserConversation>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations,\r\n  userActive: state.posts.userActive,\r\n  posts: state.posts.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingPosts, updateStatus, changeUserActive })(UserChat)\r\n","import api from '../../config/api'\r\nimport { UPDATE_MESSAGES_NOT_READ, STATUS } from '../conversations/actionsCreators'\r\nexport const LOADING_POSTS = 'posts:LOADING_POSTS'\r\nexport const PREVIOUS_POSTS = 'posts:PREVIOUS_POSTS'\r\nexport const CLEAN_POSTS_USER = 'posts:CLEAN_POSTS_USER'\r\nexport const NEW_MESSAGE = 'posts:NEW_MESSAGE'\r\nexport const MESSAGE_READ = 'posts:MESSAGE_READ'\r\nexport const CHANGE_USER_ACTIVE = 'posts:CHANGE_USER_ACTIVE'\r\n\r\nexport const loadingPosts = (userChatActive) => async dispatch => {\r\n  const posts = JSON.parse(localStorage.getItem('posts'))\r\n  try {\r\n    let messages\r\n    if (userChatActive.idConversation) {\r\n      messages = await api.get(`conversation/messages/${userChatActive.idConversation}/1`)\r\n    }\r\n    localStorage.setItem('posts', JSON.stringify({\r\n      ...posts,\r\n      [messages.data.idConversation]: messages.data\r\n    }))\r\n    dispatch({\r\n      type: LOADING_POSTS,\r\n      payload: {\r\n        posts: messages ? messages.data : { messages: [], _id: userChatActive.idConversation },\r\n        userActive: userChatActive,\r\n      }\r\n    })\r\n  } catch (error) {\r\n    if (posts[userChatActive.idConversation])\r\n      dispatch({\r\n        type: LOADING_POSTS,\r\n        payload: {\r\n          posts: posts[userChatActive.idConversation],\r\n          userActive: userChatActive,\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport const changeUserActive = (userActive) => dispatch => {\r\n  dispatch({\r\n    type: STATUS,\r\n    payload: {}\r\n  })\r\n  dispatch({\r\n    type: CHANGE_USER_ACTIVE,\r\n    payload: userActive\r\n  })\r\n}\r\n\r\nexport const previousPosts = (idConversation, page) => async dispatch => {\r\n  try {\r\n    const messages = await api.get(`conversation/messages/${idConversation}/${page}`)\r\n    dispatch({\r\n      type: PREVIOUS_POSTS,\r\n      payload: {\r\n        posts: messages.data\r\n      }\r\n    })\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\nexport const newMessage = (mensagem) => async dispatch => {\r\n  dispatch({\r\n    type: NEW_MESSAGE,\r\n    payload: mensagem\r\n  })\r\n}\r\n\r\nexport const cleanPosts = ({ idConversation, idUser }) => async dispatch => {\r\n  await api.delete(`conversation/${idConversation}/${idUser}`)\r\n  dispatch({\r\n    type: CLEAN_POSTS_USER,\r\n    payload: idConversation\r\n  })\r\n}\r\n\r\nexport const updateMessageRead = ({ message, messagesNotRead }) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_MESSAGES_NOT_READ,\r\n    payload: {\r\n      numberMessages: messagesNotRead,\r\n      idConversation: message.conversation\r\n    }\r\n  })\r\n  dispatch({\r\n    type: MESSAGE_READ,\r\n    payload: message\r\n  })\r\n}","import styled from 'styled-components'\r\n\r\nexport const ContainerSearch = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  form{\r\n    width: 60%;\r\n    position: relative;\r\n    \r\n    input{\r\n      width: 100%;\r\n      padding: 5px 3px;\r\n      border-top-left-radius: 5px;\r\n      border-bottom-left-radius: 3px;\r\n      border-top-right-radius: 5px;\r\n      border-bottom-right-radius: 3px;\r\n      border: none;\r\n      outline: 0;\r\n    }\r\n    ul{\r\n      box-shadow: 1px 1px 5px #999;\r\n      width: 100%;\r\n      position: absolute;\r\n      z-index: 12;\r\n    }\r\n  }\r\n`","import React, { useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from '../ListChat/UserChat'\r\nimport { searchUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ContainerSearch } from './styles'\r\n\r\nconst SearchUser = ({ searchUsers, searchUser }) => {\r\n  const [showList, setShowList] = useState(false)\r\n  const inputRef = useRef()\r\n\r\n  const search = () => {\r\n    const input = inputRef.current.value\r\n    searchUser(input)\r\n  }\r\n\r\n  return (\r\n    <ContainerSearch>\r\n      <form action=\"\">\r\n        <input type=\"text\"\r\n          ref={inputRef}\r\n          className='input-search'\r\n          onFocus={() => setShowList(true)}\r\n          onBlur={() => inputRef.current.value = ''}\r\n          placeholder='Pesquisar usuários'\r\n          name='input'\r\n          autoComplete='off'\r\n          onChange={search}\r\n        />\r\n        {showList && <ul>\r\n          {searchUsers.map(user => (\r\n            <UserChat\r\n              key={`search:${user._id}`}\r\n              search={true}\r\n              userChat={user}\r\n              setShowList={setShowList}\r\n            />\r\n          ))}\r\n        </ul>}\r\n      </form>\r\n    </ContainerSearch>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  searchUsers: state.userInfo.serachUsers\r\n})\r\n\r\nexport default connect(mapStateToProps, { searchUser })(SearchUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ConatinerInfo = styled.header`\r\n  width:100%;\r\n  background: rgba(89, 125, 204, 0.8);\r\n  height: 70px;\r\n  border-bottom: 1px solid #bbb;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  justify-content: space-between;\r\n  \r\n  .user-logged > div, .user-conversation{\r\n    display: flex;\r\n    align-items:center;\r\n    color: #f2f2f2;\r\n    position: relative;\r\n    flex: 2;\r\n  }\r\n  .user-conversation{\r\n    flex: 2;\r\n  }\r\n  .user-logged > div{\r\n    justify-content: flex-end;\r\n    height: 100%;\r\n    i {\r\n      margin-right: 15px;\r\n      margin-left: 15px;\r\n    }\r\n  }\r\n  .user-logged{\r\n    position: relative;\r\n  }\r\n  .user-logged > div:hover{\r\n    cursor: pointer;\r\n    background: rgba(89, 125, 204, 0.5);\r\n  }\r\n  .user-img{\r\n    width: 60px;\r\n    img{\r\n      background: white;\r\n      ::selection{\r\n        background: transparent;\r\n      }\r\n      border-radius: 50%;\r\n      max-width:100%;\r\n    }\r\n  }\r\n  .user-img.conversation{\r\n    width: 40px;\r\n    float:right;\r\n  }\r\n  .user-info.logged{\r\n    margin-right: 10px;\r\n  }\r\n  .user-info.conversation{\r\n    margin-left: 10px;\r\n    p{\r\n      font-size: 14px;\r\n    }\r\n    .user-status{\r\n      position: relative;\r\n      margin-left: 4px;\r\n      letter-spacing: 0.6px;\r\n      &::before{\r\n        content: '';\r\n        position: relative;\r\n        top:3px;\r\n        right: 5px;\r\n        display: inline-block;\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        background: #4fdb66;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImage = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  left:0;\r\n  z-index: 15;\r\n\r\n  .close-preview{\r\n    color:white;\r\n    right: 250px;\r\n  }\r\n  .image-content{\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    figure{\r\n      margin-top: 50px;\r\n      img{\r\n        display: block;\r\n        width:100%;\r\n        max-width:400px;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const Actions = styled.div`\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    padding-top: 20px;\r\n\r\n    .btn{\r\n      height: 40px;\r\n      text-transform: uppercase;\r\n      font-weight: 600; \r\n      width: 100%;\r\n      border: 1px solid #aaa;\r\n      outline: none;\r\n      cursor: pointer;\r\n\r\n      &:first-child{\r\n        margin-right: 10px;\r\n        background: rgba(89, 125, 204, 0.8);\r\n        color: #f8f8f8;\r\n        &:hover{\r\n          background: rgba(89, 125, 204, 0.6);\r\n        }\r\n      }\r\n    }\r\n`\r\n\r\nexport const ModalUpdateName = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  z-index: 20;\r\n  top: 0;\r\n  left: 0;\r\n  form{\r\n    max-width: 350px;\r\n    width: 100%;\r\n    margin: 250px auto;\r\n     \r\n    .form-group input{\r\n      width: 100%;\r\n      /* height: 35px; */\r\n      padding: 8px 5px;\r\n    }\r\n\r\n    .action{\r\n      \r\n    }\r\n  }\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gethours from '../../config/getHours'\r\nimport UserMenuConfig from './UserConfig'\r\nimport SearchUser from '../SearchUser'\r\nimport socket from '../../config/socket.io'\r\nimport { updateImageProfile, updateNameUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ConatinerInfo, PreviewImage, ModalUpdateName, Actions } from './styles'\r\n\r\nlet timer\r\nconst InfoUser = ({ userInfo, userActive, status, updateImageProfile, updateNameUser }) => {\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false)\r\n  const [showInputUpdateName, setShowInpurtUpdateName] = useState(false)\r\n  const [fileImage, setFileImage] = useState(false)\r\n  const [isTyping, setIsTyping] = useState(false)\r\n\r\n  useEffect(() => {\r\n    userActive._id && socket.on('typing', info => {\r\n      if (info.idUser === userActive._id && info.idConversation === userActive.idConversation) {\r\n        clearTimeout(timer)\r\n        setIsTyping(true)\r\n        timer = setTimeout(() => {\r\n          setIsTyping(false)\r\n        }, 1000)\r\n      }\r\n    })\r\n  }, [userActive._id])\r\n\r\n  const renderStatus = () => {\r\n    if (status.hasOwnProperty('_id')) {\r\n      return (\r\n        status.status ?\r\n          <small className='user-status'>\r\n            <b>{isTyping ? 'Digitando...' : 'Online'}</b>\r\n          </small>\r\n          :\r\n          <small style={{ fontSize: 11 }}>\r\n            <b>Visto por último {gethours(status.updatedAt)}</b>\r\n          </small>\r\n      )\r\n    }\r\n  }\r\n\r\n  const imageProfileUpdate = async () => {\r\n    if (fileImage) {\r\n      const data = new FormData()\r\n      data.append('imageProfile', fileImage)\r\n      updateImageProfile(data)\r\n      closeUpdateImage()\r\n    }\r\n  }\r\n\r\n  const closeUpdateImage = () => {\r\n    setFileImage(null)\r\n    setIsMenuVisible(false)\r\n  }\r\n\r\n  const updateName = (e) => {\r\n    e.preventDefault()\r\n    const name = e.target.newName.value\r\n    if (name !== '') {\r\n      updateNameUser(name)\r\n      setShowInpurtUpdateName(false)\r\n      setIsMenuVisible(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ConatinerInfo className='header-info'>\r\n      {fileImage && <PreviewImage>\r\n        <div className=\"close-preview\" onClick={closeUpdateImage}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </div>\r\n        <div className=\"image-content\">\r\n          <figure>\r\n            <img src={window.URL.createObjectURL(fileImage)} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n        <Actions>\r\n          <button className='btn' onClick={imageProfileUpdate}>Confirmar</button>\r\n          <button className='btn' onClick={closeUpdateImage}>Cancelar</button>\r\n        </Actions>\r\n      </PreviewImage>}\r\n      {showInputUpdateName && <ModalUpdateName>\r\n        <form action=\"\" onSubmit={updateName}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"newName\"\r\n              defaultValue={userInfo.name}\r\n              placeholder='Digite um novo nome para o perfil' />\r\n          </div>\r\n          <Actions>\r\n            <button className='btn'>Alterar</button>\r\n            <button className='btn' onClick={() => setShowInpurtUpdateName(false)}>Cancelar</button>\r\n          </Actions>\r\n        </form>\r\n      </ModalUpdateName>}\r\n\r\n      <div className=\"user-conversation\">\r\n        {userActive.hasOwnProperty('_id') &&\r\n          <>\r\n            <div className=\"user-img conversation\">\r\n              <img src={userActive.imageProfile ? userActive.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n            </div>\r\n            <div className=\"user-info conversation\">\r\n              {userActive && <h4>{userActive.name}</h4>}\r\n              {userActive && <p>{userActive.username}</p>}\r\n              {renderStatus()}\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n      <SearchUser />\r\n      <div className=\"user-logged\">\r\n        <div onClick={() => setTimeout(() => setIsMenuVisible(!isMenuVisible), 100)}>\r\n          <i className=\"fas fa-sort-down\"></i>\r\n          <div className=\"user-info logged\">\r\n            {userInfo.name && <h3>{userInfo.name}</h3>}\r\n            {userInfo.email && <p>{userInfo.email}</p>}\r\n          </div>\r\n          <div className=\"user-img logged\">\r\n            <img src={userInfo.imageProfile ? userInfo.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        <UserMenuConfig\r\n          setFileImage={setFileImage}\r\n          setIsMenuVisible={setIsMenuVisible}\r\n          isMenuVisible={isMenuVisible}\r\n          setShowInpurtUpdateName={setShowInpurtUpdateName}\r\n        />\r\n      </div>\r\n    </ConatinerInfo>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  status: state.listConversations.status,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateImageProfile, updateNameUser })(InfoUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerMessage = styled.div`\r\n  clear: both;\r\n  position: relative;\r\n\r\n .warningMessage{\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    color: #888;\r\n    width: fit-content;\r\n    background: #dcdcdc;\r\n    border-bottom: 1px solid #bbb;\r\n    display: block;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    margin: 0 auto;\r\n  } \r\n\r\n  .content-message{\r\n    width: fit-content;\r\n    min-width:40px;\r\n    max-width: ${props => props.isImg ? '40%' : '60%'};\r\n    background: ${props => props.isIdUserLogged ? 'beige' : '#f8f8f8'};\r\n    margin-bottom: 5px;\r\n    border-radius: 6px;\r\n    padding: 5px 8px;\r\n    z-index: 2;\r\n    float: ${props => props.isIdUserLogged ? 'right' : 'left'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    box-shadow: 0 0 15px #aaa;\r\n    position: ${props => props.preview ? 'static' : 'relative'};\r\n\r\n    &::after{\r\n      content: '';\r\n      position: absolute;\r\n      border-width: 10px;\r\n      border-color: beige transparent transparent transparent;\r\n      border-style: solid;\r\n      top:0;\r\n      right: -10px;\r\n      ${props => !props.isIdUserLogged && `\r\n        left: -10px;\r\n        right: inherit;\r\n        border-color: #f8f8f8 transparent transparent transparent;\r\n      `}\r\n    }\r\n\r\n    .content-img{\r\n      width: 100%;\r\n      overflow: hidden;\r\n      max-width: 100%;\r\n      max-height: 250px;\r\n      cursor: pointer;\r\n    }\r\n    .content-img img{\r\n      width: 210px;\r\n      margin: 0 auto;\r\n      text-align: center;\r\n      display: block;\r\n      transition: transform 300ms ease-in-out;\r\n    }\r\n    div{\r\n      .hour{\r\n        position: relative;\r\n        width: 30px;\r\n        font-weight: 600;\r\n        color: #777;\r\n        float: right;\r\n        font-size: 11px;\r\n        right: -7px;\r\n        margin-top: 3px;\r\n      }\r\n    }\r\n  }\r\n  \r\n`","import React from 'react'\r\nimport getHours from '../../../config/getHours'\r\nimport { ContainerMessage } from './styles'\r\n\r\nconst Message = ({ isIdUserLogged, message, setUrlPreviewImage }) => {\r\n\r\n  return (\r\n    <ContainerMessage\r\n      isIdUserLogged={isIdUserLogged}\r\n      data-id-message={message._id}\r\n      data-js={!isIdUserLogged && `viewed:${message.viewed}`}\r\n      isImg={false}>\r\n      {message &&\r\n        <div className=\"content-message\">\r\n          {message.imagePath && <div className=\"content-img\">\r\n            <img\r\n              onClick={() => setUrlPreviewImage(message.imagePath)}\r\n              src={message.imagePath}\r\n              alt=\"\" />\r\n          </div>}\r\n          <div>\r\n            <p>{message.message}</p>\r\n            <span className='hour'>\r\n              {getHours(message.createdAt, 'posts')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </ContainerMessage>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerPosts = styled.main`\r\n  background: #d6d6c5;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 5px 15px;\r\n  overflow-y: auto;\r\n  position: relative;\r\n  opacity: 0;\r\n  transition: opacity 50ms linear;\r\n  flex: 5;\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n    background: #F4F4F4;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 5px;\r\n    border-radius: 5px;\r\n    background:rgba(172, 167, 167, 0.8); \r\n  }\r\n`","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport socket, { url } from '../../../config/socket.io'\r\nimport { newMessage, previousPosts } from '../../../reducers/posts/actionsCreators'\r\nimport Message from '../Message'\r\nimport { ContainerPosts } from './styles'\r\n\r\nlet idsMessages = {}\r\nlet page = 0\r\n\r\nconst Posts = ({ posts, userInfo, idConversation, containerChatRef, positionLine, messagesNotRead, previousPosts, setUrlPreviewImage, setLoadingMessages, newMessage, loadingMessages }) => {\r\n  let socketnewMessage = io(url)\r\n  useEffect(() => {\r\n    page = 0\r\n    containerChatRef.current.style.opacity = 0\r\n    containerChatRef.current.scrollTop = 0\r\n    if (!messagesNotRead) {\r\n      containerChatRef.current.scrollTop += 99999\r\n      containerChatRef.current.style.opacity = 1\r\n      initialConversation()\r\n    } else {\r\n      containerChatRef.current.scrollTop = 0\r\n      setWarningMessageNotRead(true)\r\n    }\r\n\r\n    containerChatRef.current.style.opacity = 1\r\n    initialConversation()\r\n  }, [idConversation])\r\n\r\n  useEffect(() => {\r\n    socketnewMessage.on('newMessage', async (message) => {\r\n      await newMessage(message)\r\n      initialConversation()\r\n      if (containerChatRef.current.scrollHeight - containerChatRef.current.scrollTop - 100 < 650) {\r\n        containerChatRef.current.scrollTop = 99999\r\n      } else {\r\n        setWarningMessageNotRead(false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const createElementWarningMessage = (messages) => {\r\n    let warningMessage = document.createElement('span')\r\n    warningMessage.textContent = 'Mensagen(s) não visualizada(s)'\r\n    warningMessage.classList.add('warningMessage')\r\n    messages.insertAdjacentElement('afterbegin', warningMessage)\r\n  }\r\n\r\n  const setWarningMessageNotRead = (scroll) => {\r\n    const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')[0]\r\n    if (messages) {\r\n      let positionMessage = messages.getBoundingClientRect().top\r\n      containerChatRef.current.style.opacity = 1\r\n      createElementWarningMessage(messages)\r\n      if (scroll) containerChatRef.current.scrollTop = (positionMessage - positionLine.bottom) + 100\r\n    }\r\n  }\r\n\r\n  const initialConversation = () => {\r\n    if (containerChatRef.current.scrollHeight === containerChatRef.current.clientHeight) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      if (messages) {\r\n        Object.keys(idsMessages).forEach(id => {\r\n          messages.forEach(async message => {\r\n            if (message.getBoundingClientRect().top < positionLine.bottom) {\r\n              socket.emit('registerMessageViewed', id)\r\n            }\r\n          })\r\n        })\r\n        idsMessages = {}\r\n      }\r\n      containerChatRef.current.style.opacity = 1\r\n    }\r\n  }\r\n\r\n  const registerIdsMessages = (message) => {\r\n    let isUserContact = message.from.toString() !== userInfo._id\r\n      ? true : message.to.toString() !== userInfo._id\r\n        ? true : false\r\n\r\n    if (isUserContact && !message.viewed) {\r\n      idsMessages = {\r\n        ...idsMessages,\r\n        [message._id]: message._id\r\n      }\r\n    }\r\n  }\r\n  const postsPrevious = async (e) => {\r\n    const { totalPages, page: pageActual, nextPage } = posts[idConversation]\r\n    if (pageActual < totalPages && page !== pageActual) {\r\n      page = pageActual\r\n      setLoadingMessages(true)\r\n      await previousPosts(idConversation, nextPage)\r\n      setTimeout(() => {\r\n        setLoadingMessages(false)\r\n      }, 500)\r\n      return\r\n    }\r\n    if (pageActual === totalPages) page = 0\r\n  }\r\n\r\n  const messagesViewed = async (e) => {\r\n    if (Object.keys(idsMessages).length > 0) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      messages.forEach(message => {\r\n        if (idsMessages[message.getAttribute('data-id-message')]) {\r\n          let id = idsMessages[message.getAttribute('data-id-message')]\r\n          if (message.getBoundingClientRect().top < positionLine.bottom) {\r\n            let { [id]: key, ...tail } = idsMessages\r\n            idsMessages = { ...tail }\r\n            socket.emit('registerMessageViewed', id)\r\n          }\r\n        }\r\n      })\r\n    }\r\n    if (e.currentTarget.scrollTop < 150) {\r\n      let firstElement = containerChatRef.current.childNodes[1]\r\n      await postsPrevious(e)\r\n      if (loadingMessages) {\r\n        containerChatRef.current.scrollTop = positionLine.top + firstElement.getBoundingClientRect().top\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ContainerPosts ref={containerChatRef} onScroll={messagesViewed}>\r\n      {posts[idConversation].posts.map(message => {\r\n        registerIdsMessages(message)\r\n        return (\r\n          <Message\r\n            key={message._id}\r\n            setUrlPreviewImage={setUrlPreviewImage}\r\n            isIdUserLogged={message.from.toString() === userInfo._id}\r\n            message={message}\r\n          />\r\n        )\r\n      })}\r\n    </ContainerPosts>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  posts: state.posts.posts,\r\n  messagesNotRead: state.posts.userActive.messagesNotRead\r\n})\r\n\r\nexport default connect(mapStateToProps, { newMessage, previousPosts })(Posts)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerSend = styled.div`\r\n  background: #ddd;\r\n  padding: 8px 15px;\r\n  width: 100%;\r\n  display: flex;\r\n  max-height: 80px;\r\n  flex-wrap:wrap;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  @media (max-height: 700px) {\r\n    max-height: 100px;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .message-content{\r\n    div.close-picker{\r\n      width: 100%;\r\n      height: 1000%;\r\n      background: transparent;\r\n      position: absolute;\r\n      top:-900%;\r\n      left:0;\r\n      z-index: 0;\r\n    }\r\n    textarea{\r\n      max-width: 500px;\r\n      resize: none;\r\n      overflow-x: hidden;\r\n      padding-left:12px;\r\n      padding-top:10px;\r\n      border-radius: 50px;\r\n      border: solid 1px #bbb;\r\n      outline:0;\r\n      @media (max-width: 900px) {\r\n        max-width: 320px;\r\n      }\r\n    }\r\n  }\r\n  .icons i{\r\n    font-size: 28px;\r\n    color: #3bb6e7;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .icons .fa-laugh{\r\n    color: #999;\r\n  }\r\n  .btn-send{\r\n    margin-left: 8px;\r\n    button{\r\n      border-radius: 20px;\r\n      text-decoration:none;\r\n      background: #aaa;\r\n      color: #f8f8f8;\r\n      font-size: 18px;\r\n      padding: 10px 40px;\r\n      display: block;\r\n      letter-spacing: 0.8px;\r\n      font-weight: 600;\r\n      border:none;\r\n      outline: none;\r\n\r\n      &:active{\r\n        transition: background 200ms ease;\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImg = styled.figure`\r\n  position: absolute;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  padding: 15px 0;\r\n  left: 0;\r\n  background: #eee;\r\n  bottom: 100%;\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  .header{\r\n    .close{\r\n      position: absolute;\r\n      right: 50px;\r\n      top: 10px;\r\n      font-size: 28px;\r\n      cursor: pointer;\r\n      color: #444;\r\n    }\r\n\r\n    .image-name{\r\n      margin-bottom: 20px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .img-content{\r\n    max-width: 45%;\r\n    max-height: 380px;\r\n    img{\r\n      max-width: 80%;\r\n      max-height: 380px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`","import React, { useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Picker } from 'emoji-mart'\r\nimport socket from '../../../config/socket.io'\r\nimport { loadingConversations } from '../../../reducers/conversations/actionsCreators'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport api from '../../../config/api'\r\nimport { ContainerSend, PreviewImg } from './styles'\r\n\r\nconst SendMessage = ({ userActive, userInfo, containerChatRef }) => {\r\n  const [messageText, setMessageText] = useState('')\r\n  const [showEmoji, setShowEmoji] = useState(false)\r\n  const [fileImg, setFileImg] = useState(null)\r\n  const textareaRef = useRef()\r\n\r\n  const sendMessage = async () => {\r\n    if (messageText.trim() !== '' || fileImg) {\r\n      const data = new FormData()\r\n      data.append('userId', userActive._id)\r\n      data.append('message', messageText)\r\n      data.append('image', fileImg ? fileImg : '')\r\n      await api.post('conversation/message', data)\r\n      if (containerChatRef.current) {\r\n        containerChatRef.current.scrollTop = containerChatRef.current.scrollHeight\r\n      }\r\n      setMessageText('')\r\n      setFileImg(null)\r\n      let messageWarning = document.querySelector('.warningMessage')\r\n      if (messageWarning) {\r\n        messageWarning.remove()\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChangeTextArea = (e) => {\r\n    setMessageText(e.target.value)\r\n    socket.emit('writing', {\r\n      idUser: userInfo._id,\r\n      idConversation: userActive.idConversation\r\n    })\r\n  }\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setMessageText(messageText + emoji)\r\n  }\r\n\r\n  return (\r\n    <ContainerSend>\r\n      {fileImg && <PreviewImg>\r\n        <div className=\"header\">\r\n          <div className=\"image-name\">\r\n            <p>{fileImg.name}</p>\r\n          </div>\r\n          <div className=\"close\" onClick={() => setFileImg(null)}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n        </div>\r\n        <div className=\"img-content\">\r\n          <img src={URL.createObjectURL(fileImg)} alt=\"\" />\r\n        </div>\r\n      </PreviewImg>}\r\n      <div className=\"message-content\">\r\n        {showEmoji &&\r\n          <>\r\n            <div className='close-picker' onClick={() => {\r\n              textareaRef.current.focus()\r\n              setShowEmoji(false)\r\n            }} />\r\n            <Picker\r\n              onSelect={addEmoji}\r\n              set={'google'}\r\n              style={{ position: 'absolute', bottom: '65px', left: 0, zIndex: 20, height: '' }}\r\n            />\r\n          </>\r\n        }\r\n        <textarea\r\n          cols=\"50\"\r\n          rows=\"2\"\r\n          ref={textareaRef}\r\n          placeholder='Escreva uma mensagem'\r\n          value={messageText}\r\n          onChange={onChangeTextArea}\r\n          onKeyUp={(e) => {\r\n            if (e.keyCode === 13) {\r\n              sendMessage()\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <input type=\"file\"\r\n        id=\"#file\"\r\n        hidden\r\n        onChange={({ target: { files } }) => setFileImg(files[0])}\r\n      />\r\n\r\n      <div className=\"icons\">\r\n        <i className=\"far fa-laugh\"\r\n          onClick={() => {\r\n            setShowEmoji(!showEmoji)\r\n          }} />\r\n        <label htmlFor=\"#file\">\r\n          <i className=\"fas fa-image\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-send\">\r\n        <button onClick={sendMessage}>Enviar</button>\r\n      </div>\r\n    </ContainerSend>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive,\r\n  listConversations: state.listConversations,\r\n  userInfo: state.userInfo\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingConversations })(SendMessage)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  flex: 1 1 70%;\r\n  height: 91%;\r\n  display:flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  background-image: url('images/speech-bubble.svg');\r\n  background-size: 60%;\r\n  background-repeat: no-repeat;\r\n  background-position-x: 150px;\r\n  background-position-y: 60px;\r\n  @media (max-height: 700px) {\r\n    background-position-y: 0px;\r\n  }\r\n  .loader-mensagens{\r\n    width: 100%;\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    text-align: center;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    z-index: 15;\r\n  }\r\n`\r\n\r\nexport const LineScroll = styled.div`\r\n  max-width: 1060px;\r\n  height: 30px;\r\n  width: 100%;\r\n  position: absolute;\r\n  ${porps => porps.top ? `\r\n    top: 0px;\r\n  `: `\r\n    bottom:75px;\r\n  `\r\n  }\r\n  overflow: unset\r\n`","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport { PulseLoader } from 'react-spinners'\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport Posts from './Posts'\r\nimport { updateMessageRead } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport SendMessage from './SendMessage'\r\nimport { ContainerChat, LineScroll } from './styles'\r\nimport socketMessageRead, { url } from '../../config/socket.io'\r\n\r\nlet positionLine = {}\r\nconst Chat = ({ userActive, loadingConversations, updateMessageRead }) => {\r\n  const [urlPreviewImage, setUrlPreviewImage] = useState(\"\")\r\n  const [loadingMessages, setLoadingMessages] = useState(false)\r\n  const containerChatRef = useRef()\r\n  const lineRefTop = useRef()\r\n  const lineRefBottom = useRef()\r\n\r\n  useEffect(() => {\r\n    positionLine = {\r\n      top: lineRefTop.current.getBoundingClientRect().bottom,\r\n      bottom: lineRefBottom.current.getBoundingClientRect().top\r\n    }\r\n    try {\r\n      const socket = io(url)\r\n      socket.on('newMessage', async () => {\r\n        setTimeout(() => loadingConversations(), 200)\r\n      })\r\n      socketMessageRead.on('messageRead', message => {\r\n        setTimeout(() => updateMessageRead(message), 300)\r\n      })\r\n    } catch (error) {\r\n\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    renderContainerPosts()\r\n  }, [userActive.idConversation])\r\n\r\n  const renderContainerPosts = () => {\r\n    return (\r\n      <Posts\r\n        positionLine={positionLine}\r\n        idConversation={userActive.idConversation}\r\n        containerChatRef={containerChatRef}\r\n        setUrlPreviewImage={setUrlPreviewImage}\r\n        setLoadingMessages={setLoadingMessages}\r\n        loadingMessages={loadingMessages}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CSSTransition\r\n        in={!!urlPreviewImage}\r\n        timeout={300}\r\n        classNames='preview'\r\n        unmountOnExit\r\n      >\r\n        <div className=\"preview-image\">\r\n          <div className=\"close-preview\" onClick={() => setUrlPreviewImage(false)}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n          <figure>\r\n            {urlPreviewImage && <img src={urlPreviewImage} alt=\"\" />}\r\n          </figure>\r\n        </div>\r\n      </CSSTransition>\r\n      <ContainerChat>\r\n        <div className=\"loader-mensagens\">\r\n          <PulseLoader\r\n            loading={loadingMessages}\r\n            color='#7693d2'\r\n          />\r\n        </div>\r\n        {userActive.hasOwnProperty('_id') && renderContainerPosts()}\r\n        <LineScroll ref={lineRefTop} top={true} />\r\n        <LineScroll ref={lineRefBottom} />\r\n        {userActive.hasOwnProperty('_id')\r\n          && <SendMessage containerChatRef={containerChatRef}\r\n          />\r\n        }\r\n      </ContainerChat>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive\r\n})\r\nexport default connect(mapStateToProps, { loadingConversations, updateMessageRead })(Chat)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  height: 120px;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 6;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #eee;\r\n\r\n  .close-modal{\r\n    position: absolute;\r\n    right: 10%;\r\n    top: 10px;\r\n    font-size: 26px;\r\n  }\r\n  .confirm-content{\r\n    padding-top:10px;\r\n    text-align:center;\r\n\r\n    h3{\r\n      letter-spacing: 0.7px;\r\n      margin-left: 5px;\r\n    }\r\n    i{\r\n      color: #eaf73b;\r\n      font-size: 26px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  .btn-actions{\r\n    margin-top: 20px;\r\n\r\n    .btn{\r\n      max-width: 160px;\r\n      width: 100%;\r\n      height: 30px;\r\n      text-transform: uppercase;\r\n      font-weight: 600;\r\n      border: 1px solid #aaa;\r\n      outline: 0;\r\n      cursor: pointer;\r\n      &:hover{\r\n        background: rgba(255, 255, 255, 0.6)\r\n      }\r\n    }\r\n    .btn.ok{\r\n      margin-left: 10px;\r\n      background: #7693D2;\r\n      color: #f8f8f8;\r\n      &:hover{\r\n        background: rgba(118, 147, 210, 0.8);\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { Container } from './styles'\r\n\r\nconst Confirm = ({ setIsShowConfirm, deleteConversation }) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"close-modal\" onClick={() => setIsShowConfirm(false)}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>\r\n      <div className=\"confirm-content\">\r\n        <h4>\r\n          <i className=\"fas fa-exclamation-triangle\"></i>\r\n          Tem certeza disso? Isso apagará todas as mensagens.<br />Deseja realmente continuar?\r\n        </h4>\r\n        <div className=\"btn-actions\">\r\n          <button className='btn cancel' onClick={() => setIsShowConfirm(false)}>\r\n            Cancelar\r\n          </button>\r\n          <button className='btn ok' onClick={() => deleteConversation()}>\r\n            Excluir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Confirm\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerList = styled.section`\r\nposition: relative;\r\nflex: 1 1 25%;\r\n@media (max-width: 930px) {\r\n  /* min-width: 500px; */\r\n  /* flex: 0;    */\r\n}\r\n.content{\r\n  z-index: 5;\r\n  position: relative;\r\n  height: 100%;\r\n  background: #ffffef;\r\n  /* height: 90%; */\r\n  overflow-y: auto;\r\n  border-left: solid 1px #bbb;\r\n    /* @media (max-width: 930px) {\r\n      transform: translateX(110%);\r\n      height: 100%;\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n    } */\r\n    .add-user{\r\n      text-align: center;\r\n      margin-top: 50px;\r\n      color: #555;\r\n      font-style: italic;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from './UserChat'\r\nimport Confirm from '../Confirm'\r\nimport { cleanPosts } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport { searchUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ContainerList } from './styles'\r\n\r\nconst ListChat = ({ listConversations, cleanPosts, loadingConversations, searchUser }) => {\r\n  const [isShowConfirm, setIsShowConfirm] = useState(false)\r\n  const [deleteUser, setDeleteUser] = useState({})\r\n\r\n  const deleteConversation = async () => {\r\n    await cleanPosts(deleteUser)\r\n    loadingConversations()\r\n    setIsShowConfirm(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isShowConfirm &&\r\n        <Confirm\r\n          deleteConversation={deleteConversation}\r\n          setIsShowConfirm={setIsShowConfirm} />\r\n      }\r\n      <ContainerList>\r\n        <div className=\"content\">\r\n          {!listConversations.contacts.length ?\r\n            <div className='add-user'>\r\n              Sua lista de conversas está vazia<br />\r\n            </div>\r\n            :\r\n            <ul className=\"list-conversas\">\r\n              {listConversations.contacts.map(conversation => (\r\n                <UserChat\r\n                  key={conversation.user._id}\r\n                  userChat={conversation.user}\r\n                  lastUpdate={conversation.updatedAt}\r\n                  idConversation={conversation.idConversation}\r\n                  messagesNotRead={conversation.messagesNotRead}\r\n                  setDeleteUser={setDeleteUser}\r\n                  setIsShowConfirm={setIsShowConfirm}\r\n                />\r\n              ))}\r\n            </ul>\r\n          }\r\n        </div>\r\n      </ContainerList>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations\r\n})\r\n\r\nexport default connect(mapStateToProps, { cleanPosts, loadingConversations, searchUser })(ListChat)\r\n","import styled from 'styled-components'\r\n\r\nexport const FormContainer = styled.form`\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n\r\n  .error{\r\n    color: red;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .group-input{\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n\r\n    ${props => props.signUp && `\r\n      &:before{\r\n        content: '*';\r\n        color: red;\r\n        position: absolute;\r\n        display: block;\r\n        left: -10px;\r\n      }\r\n    `}\r\n  }\r\n  input{\r\n    width: 100%;\r\n    max-width: 350px;\r\n    padding: 8px 5px;\r\n  }\r\n  .btn-actions{\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    \r\n    .fa-arrow-left{\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .btn{\r\n    height: 45px;\r\n    text-transform: uppercase;\r\n    font-weight: 600; \r\n    width: 100%;\r\n    border: 1px solid #aaa;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n  }\r\n  .sign-in{\r\n    background: rgba(89, 125, 204, 0.8);\r\n    color: #f8f8f8;\r\n    &:hover{\r\n      background: rgba(89, 125, 204, 0.6);\r\n    }\r\n  }\r\n  .sign-up{\r\n    &:hover{\r\n      background: rgba(0, 0, 0, 0.1);\r\n      color: #444;\r\n    }\r\n  }\r\n\r\n`","import React from 'react'\r\nimport { FormContainer } from './styles'\r\n\r\nconst Form = ({ submit, signUp, setIsSignIn, messageError }) => {\r\n  return (\r\n    <FormContainer onSubmit={submit} signUp={signUp}>\r\n      <span className='error'>{messageError}</span>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"text\" name='name' placeholder='Digite seu nome completo' />\r\n      </div>}\r\n      <div className=\"group-input\">\r\n        <input type=\"email\" name='email' placeholder='Digite seu email' />\r\n      </div>\r\n      <div className=\"group-input\">\r\n        <input type=\"password\" name='password' placeholder='Digite sua senha' />\r\n      </div>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"password\" name='confirmPassword' placeholder='Confirme sua senha' />\r\n      </div>}\r\n      <div className=\"btn-actions\">\r\n        <button\r\n          onClick={() => signUp ? setIsSignIn(true) : setIsSignIn(false)}\r\n          className='btn sign-up'\r\n          type='button'>\r\n          {signUp\r\n            ? <span><i className=\"fas fa-arrow-left\" />Voltar</span>\r\n            : 'Cadastre-se'}\r\n        </button>\r\n        <button className='btn sign-in'>{signUp ? 'Cadastre-se' : 'Login'}</button>\r\n      </div>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignIn = ({ loginUser, setIsSignIn, messageError, setMessageError }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault()\r\n    const { email, password } = e.target\r\n    if (!email.value || !password.value) {\r\n      setMessageError('Preencha os campos corretamente!')\r\n      return false\r\n    }\r\n\r\n    await loginUser(email.value, password.value)\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <Form submit={login} setIsSignIn={setIsSignIn} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignIn)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignUp = ({ setIsSignIn, messageError, setMessageError, loginUser }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n  const register = async (e) => {\r\n    e.preventDefault()\r\n    const { name, email, password, confirmPassword } = e.target\r\n    if (!name.value || !email.value || !password.value || !confirmPassword.value) {\r\n      setMessageError('Todos os campos são obrigatórios!')\r\n      return false\r\n    }\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      setMessageError('Senhas diferentes!')\r\n      return false\r\n    }\r\n    try {\r\n      await api.post('auth/register', {\r\n        name: name.value,\r\n        email: email.value,\r\n        password: password.value\r\n      })\r\n      await loginUser(email.value, password.value)\r\n      window.location.reload()\r\n    } catch (error) {\r\n      setMessageError('Ocorreu um erro ao tentar se cadastrar!')\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Form submit={register} setIsSignIn={setIsSignIn} signUp={true} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignUp)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.section`\r\n  background: #ddd;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  header{\r\n    text-align:center;\r\n\r\n    .logo{\r\n      font-size: 7.5em;\r\n      color: rgba(89, 125, 204, 0.8);\r\n      p{\r\n        font-size: 20px;\r\n      }\r\n    }\r\n    .login{\r\n      color: #444;\r\n      font-style: italic;\r\n      font-size: 1.4em;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport { Container } from './styles'\r\nconst Auth = () => {\r\n  const [isSignIn, setIsSignIn] = useState(true)\r\n  const [messageError, setMessageError] = useState('')\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div className=\"logo\">\r\n          <i className=\"fas fa-comments\"></i>\r\n          <p>Chat</p>\r\n        </div>\r\n        <div className=\"login\">\r\n          <h1>{isSignIn ? 'Login' : 'Cadastro'}</h1>\r\n        </div>\r\n      </header>\r\n      {isSignIn\r\n        ? <SignIn\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />\r\n        : <SignUp\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  max-width: 1160px;\r\n  min-width: 1000px;\r\n  width: 100%;\r\n  height: 88vh;\r\n  border: 1px solid #bbb;\r\n  margin: 40px auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  position: relative;\r\n  box-shadow: 0 0 10px #666; \r\n\r\n  .preview-image{\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #f8f8f8;\r\n    z-index: 10;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    figure{\r\n      width: 100%;\r\n      img{\r\n        margin: 20px auto;\r\n        display: block;\r\n        max-width: 70%;\r\n        max-height: 500px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .loader{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n.preview-enter {\r\n  opacity: 0;\r\n}\r\n.preview-enter-active {\r\n  opacity: 1;\r\n  transition: opacity 400ms ease-in;\r\n}\r\n.preview-exit {\r\n  opacity: 1;\r\n}\r\n.preview-exit-active {\r\n  opacity: 0;\r\n  transition: opacity 200ms ease-out;\r\n}\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { PulseLoader } from 'react-spinners'\r\nimport { updateStatus } from '../../reducers/conversations/actionsCreators'\r\nimport { loginUser, getInfoUserLogged } from '../../reducers/userInfo/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport InfoUser from '../../components/InfoUser'\r\nimport Posts from '../../components/Chat'\r\nimport ListChat from '../../components/ListChat'\r\nimport Auth from '../../components/Auth'\r\nimport { ContainerChat } from './styles'\r\nimport socket from '../../config/socket.io'\r\nlet timer\r\n\r\nconst Chat = ({ userInfo, loadingConversations, userActive, updateStatus, getInfoUserLogged }) => {\r\n  const [isLogged, setIsLogged] = useState(null)\r\n  const [isInitialStatusUpdate, setIsInitialStatusUpdate] = useState(false)\r\n  const [isShowLoader, setIsShowLoader] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const getUserInfo = async () => {\r\n      const token = JSON.parse(localStorage.getItem('@chat@'))\r\n      if (token) {\r\n        setIsLogged(true)\r\n        await getInfoUserLogged()\r\n        await loadingConversations()\r\n        setTimeout(() => setIsShowLoader(false), 500)\r\n      } else {\r\n        setIsLogged(false)\r\n      }\r\n    }\r\n    getUserInfo()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      clearInterval(timer)\r\n      timer = setInterval(() => {\r\n        socket.emit('verifyStatus', userActive._id)\r\n      }, 3000)\r\n    }\r\n  }, [userActive])\r\n\r\n  useEffect(() => {\r\n    if (!isInitialStatusUpdate) {\r\n      updateStatus()\r\n      setIsInitialStatusUpdate(true)\r\n    }\r\n  }, [userActive])\r\n\r\n  userInfo._id && window.addEventListener('beforeunload', function () {\r\n    socket.emit('off', userInfo._id)\r\n    return ''\r\n  })\r\n\r\n  return (\r\n    <ContainerChat>\r\n      {isLogged === false && <Auth />}\r\n\r\n      {isLogged &&\r\n        <>\r\n          {isShowLoader\r\n            ? <div className=\"loader\">\r\n              <PulseLoader\r\n                color='rgba(89, 125, 204, 0.8)'\r\n              />\r\n            </div>\r\n            : <>\r\n              {/* info user and search users */}\r\n              <InfoUser socket={socket} />\r\n              {/* Component message */}\r\n              <Posts />\r\n              {/* Component list users */}\r\n              <ListChat />\r\n            </>\r\n          }\r\n        </>}\r\n    </ContainerChat>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateStatus, loadingConversations, loginUser, getInfoUserLogged })(Chat)\r\n","import React from 'react';\r\nimport Chat from './pages/Chat'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","import { LOGIN_USER, SEARCH_USER, UPDATE_IMAGE_PROFILE, UPDATE_NAME_USER } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  serachUsers: []\r\n}\r\n\r\nconst userInfo = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case SEARCH_USER:\r\n      return {\r\n        ...state,\r\n        serachUsers: action.payload\r\n      }\r\n    case UPDATE_IMAGE_PROFILE:\r\n      return {\r\n        ...state,\r\n        imageProfile: action.payload\r\n      }\r\n    case UPDATE_NAME_USER:\r\n      return {\r\n        ...state,\r\n        name: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userInfo","import { LOADING_POSTS, NEW_MESSAGE, CLEAN_POSTS_USER, MESSAGE_READ, PREVIOUS_POSTS, CHANGE_USER_ACTIVE } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  posts: {},\r\n  userActive: {}\r\n}\r\n\r\nconst loadingPosts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_POSTS: {\r\n      const { userActive, posts } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: posts\r\n        },\r\n        userActive: userActive\r\n      }\r\n    }\r\n    case CHANGE_USER_ACTIVE:\r\n      return {\r\n        ...state,\r\n        userActive: action.payload\r\n      }\r\n    case PREVIOUS_POSTS: {\r\n      const { posts } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: {\r\n            ...state.posts[posts.idConversation],\r\n            ...posts,\r\n            posts: [...posts.posts, ...state.posts[posts.idConversation].posts]\r\n          }\r\n        },\r\n      }\r\n    }\r\n    case NEW_MESSAGE: {\r\n      const { conversation } = action.payload\r\n      if (state.posts[conversation]) {\r\n        return {\r\n          ...state,\r\n          posts: {\r\n            ...state.posts,\r\n            [conversation]: {\r\n              ...state.posts[conversation],\r\n              posts: state.posts[conversation].hasOwnProperty('posts') &&\r\n                state.posts[conversation].posts.concat(action.payload)\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return state\r\n    }\r\n    case CLEAN_POSTS_USER: {\r\n      const { [action.payload]: id, ...tall } = state.posts\r\n      return {\r\n        posts: {\r\n          ...tall\r\n        },\r\n        userActive: {}\r\n      }\r\n    }\r\n    case MESSAGE_READ: {\r\n      const { _id, conversation } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [conversation]: {\r\n            ...state.posts[conversation],\r\n            posts: state.posts[conversation].posts.map(message => message._id === _id\r\n              ? { ...action.payload }\r\n              : message)\r\n          }\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default loadingPosts","import { LOADING_CONVERSATIONS, STATUS, UPDATE_MESSAGES_NOT_READ } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  status: {}\r\n}\r\nconst conversations = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      }\r\n    case STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      }\r\n    case UPDATE_MESSAGES_NOT_READ:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.idConversation === action.payload.idConversation\r\n          ? { ...contact, messagesNotRead: action.payload.numberMessages }\r\n          : contact)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default conversations","import { compose, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from '../reducers'\r\n\r\nconst logger = () => {\r\n  return window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n}\r\nlet compo\r\nif (logger()) {\r\n  compo = compose(applyMiddleware(thunk), logger())\r\n} else {\r\n  compo = compose(applyMiddleware(thunk))\r\n}\r\n\r\nexport default createStore(reducers, {}, compo)","import { combineReducers } from 'redux'\r\nimport userInfo from './userInfo'\r\nimport posts from './posts'\r\nimport listConversations from './conversations'\r\n\r\nexport default combineReducers({\r\n  userInfo,\r\n  posts,\r\n  listConversations\r\n})","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport './index.css';\nimport store from './store'\nimport 'normalize.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}