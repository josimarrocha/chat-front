{"version":3,"sources":["reducers/userInfo/actionsCreators.js","config/socket.io.js","config/api.js","reducers/conversations/actionsCreators.js","config/getHours.js","components/InfoUser/UserConfig/styles.js","components/InfoUser/UserConfig/index.js","reducers/posts/actionsCreators.js","components/ListChat/UserChat/styles.js","components/ListChat/UserChat/index.js","components/SearchUser/styles.js","components/SearchUser/index.js","components/InfoUser/styles.js","components/InfoUser/index.js","components/Chat/Message/styles.js","components/Chat/Message/index.js","components/Chat/Posts/styles.js","components/Chat/Posts/index.js","components/Chat/SendMessage/styles.js","components/Chat/SendMessage/index.js","components/Chat/styles.js","components/Chat/index.js","components/Confirm/styles.js","components/Confirm/index.js","components/ListChat/styles.js","components/ListChat/index.js","components/Form/styles.js","components/Form/index.js","components/Auth/SignIn/index.js","components/Auth/SignUp/index.js","components/Auth/styles.js","components/Auth/index.js","pages/Chat/styles.js","pages/Chat/index.js","App.js","reducers/userInfo/index.js","reducers/posts/index.js","reducers/conversations/index.js","store/index.js","reducers/index.js","index.js"],"names":["timer","url","socket","io","token","JSON","parse","localStorage","getItem","api","axios","create","baseURL","headers","hasOwnProperty","STATUS","loadingConversations","dispatch","a","get","data","type","payload","updateStatus","cleanStatus","on","status","loginUser","email","password","post","setItem","stringify","time","place","hour","Date","getHours","minutes","getMinutes","day","getDate","month","getMonth","year","getFullYear","ConfigList","styled","ul","MenuConfig","setFileImage","configRef","useRef","useEffect","current","focus","ref","id","hidden","onChange","files","target","htmlFor","onClick","removeItem","window","location","reload","newMessage","mensagem","UserConversation","li","connect","state","listConversations","userActive","posts","loadingPosts","userChatActive","idConversation","messages","_id","userChat","search","lastUpdate","messagesNotRead","setIsShowConfirm","setDeleteUser","setShowList","useState","isMenuOptions","setIsMenuOptions","createConversation","userId","console","log","contacts","some","conversation","user","handleClickList","toString","length","every","item","className","src","imageProfile","alt","name","substring","username","onMouseLeave","idUser","ContainerSearch","div","searchUsers","userInfo","serachUsers","searchUser","query","showList","inputRef","action","onFocus","onBlur","value","placeholder","autoComplete","input","map","key","ConatinerInfo","header","PreviewImage","updateImageProfile","image","put","newImage","isMenuVisible","setIsMenuVisible","fileImage","isTyping","setIsTyping","info","clearTimeout","setTimeout","imageProfileUpdate","FormData","append","closeUpdateImage","URL","createObjectURL","style","fontSize","gethours","updatedAt","renderStatus","ContainerMessage","props","isImg","isIdUserLogged","preview","Message","message","setUrlPreviewImage","data-id-message","data-js","viewed","imagePath","createdAt","ContainerPosts","main","idsMessages","page","pageActual","totalPages","nextPage","previousPosts","containerChatRef","positionLine","setLoadingMessages","socketnewMessage","opacity","scrollTop","setWarningMessageNotRead","initialConversation","scrollHeight","scroll","document","querySelectorAll","positionMessage","getBoundingClientRect","top","warningMessage","createElement","textContent","classList","add","insertAdjacentElement","createElementWarningMessage","clientHeight","Object","keys","forEach","emit","postsPrevious","e","currentTarget","messagesViewed","getAttribute","tail","onScroll","from","to","registerIdsMessages","ContainerSend","PreviewImg","figure","messageText","setMessageText","showEmoji","setShowEmoji","fileImg","setFileImg","textareaRef","sendMessage","messageWarning","querySelector","remove","onSelect","emoji","native","set","position","bottom","left","zIndex","height","cols","rows","onKeyUp","keyCode","ContainerChat","MessageViewed","updateMessageRead","numberMessages","urlPreviewImage","loadingMessages","lineRef","socketMessageRead","renderContainerPosts","loading","color","Container","Confirm","deleteConversation","ContainerList","section","cleanPosts","delete","isShowConfirm","deleteUser","FormContainer","form","signUp","Form","submit","setIsSignIn","messageError","onSubmit","setMessageError","login","preventDefault","register","confirmPassword","Auth","isSignIn","getInfoUserLogged","clearInterval","setInterval","isLogged","setIsLogged","isInitialStatusUpdate","setIsInitialStatusUpdate","getUserInfo","addEventListener","App","initialState","concat","tall","compo","conversations","contact","combineReducers","logger","__REDUX_DEVTOOLS_EXTENSION__","compose","applyMiddleware","thunk","createStore","reducers","ReactDOM","render","store","getElementById"],"mappings":"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","file":"static/js/main.39be5edc.chunk.js","sourcesContent":["import api from '../../config/api'\r\nimport io from 'socket.io-client'\r\nimport { url } from '../../config/socket.io'\r\nexport const LOGIN_USER = 'user:LOGIN_USER'\r\nexport const SEARCH_USER = 'user:SEARCH_USER'\r\nexport const UPDATE_IMAGE_PROFILE = 'user:UPDATE_IMAGE_PROFILE'\r\n\r\nconst socket = io(url)\r\nlet timer\r\nexport const loginUser = (email, password) => async dispatch => {\r\n  let data = { data: '' }\r\n  data = await api.post(`/auth/sign-in`, {\r\n    email,\r\n    password\r\n  })\r\n  localStorage.setItem('@chat@', JSON.stringify({ token: data.data.token }))\r\n\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: data.data\r\n  })\r\n}\r\n\r\nexport const getInfoUserLogged = () => async dispatch => {\r\n  const user = await api.get('/user')\r\n  clearInterval(timer)\r\n  timer = setInterval(() => {\r\n    socket.emit('online', user.data._id)\r\n  }, 2000)\r\n  dispatch({\r\n    type: LOGIN_USER,\r\n    payload: user.data\r\n  })\r\n}\r\n\r\nexport const searchUser = (query) => async dispatch => {\r\n  let data\r\n  if (query !== '') {\r\n    data = await api.get(`/users/${query}`)\r\n  }\r\n\r\n  dispatch({\r\n    type: SEARCH_USER,\r\n    payload: data ? data.data : []\r\n  })\r\n}\r\n\r\nexport const updateImageProfile = (image) => async dispatch => {\r\n  const { data: { newImage } } = await api.put('users/imageProfile', image)\r\n  dispatch({\r\n    type: UPDATE_IMAGE_PROFILE,\r\n    payload: newImage\r\n  })\r\n}","import io from 'socket.io-client'\r\nexport const url = 'https://api-chat-back.herokuapp.com/'\r\n// export const url = 'http://localhost:3333'\r\nconst socket = io(url)\r\n\r\nexport default socket\r\n","import axios from 'axios'\r\nimport { url } from './socket.io'\r\nconst token = JSON.parse(localStorage.getItem('@chat@'))\r\nlet api\r\nif (token) {\r\n  api = axios.create({\r\n    baseURL: url,\r\n    headers: {\r\n      'Authorization': `Bearer ${token.hasOwnProperty('token') ? token.token : ''}`,\r\n    },\r\n  })\r\n} else {\r\n  api = axios.create({\r\n    baseURL: url,\r\n  })\r\n}\r\n\r\n\r\nexport default api","import api from '../../config/api'\r\nimport socket from '../../config/socket.io'\r\n\r\nexport const LOADING_CONVERSATIONS = 'conversations:LOADING_CONVERSATIONS'\r\nexport const UPDATE_MESSAGES_NOT_READ = 'conversations:UPDATE_MESSAGES_NOT_READ'\r\nexport const STATUS = 'convertation:USER_STATUS'\r\n\r\nexport const loadingConversations = () => async  dispatch => {\r\n  const { data } = await api.get('/conversations')\r\n\r\n  dispatch({\r\n    type: LOADING_CONVERSATIONS,\r\n    payload: data\r\n  })\r\n}\r\n\r\nexport const updateStatus = (cleanStatus) => dispatch => {\r\n  if (cleanStatus) {\r\n    dispatch({\r\n      type: STATUS,\r\n      payload: {}\r\n    })\r\n  } else {\r\n    socket.on('status', status => {\r\n      dispatch({\r\n        type: STATUS,\r\n        payload: status\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n","export default function (time, place) {\r\n  let hour = new Date(time).getHours()\r\n  let minutes = new Date(time).getMinutes()\r\n\r\n  minutes = minutes < 10 ? `0${minutes}` : minutes\r\n  hour = hour < 10 ? `0${hour}` : hour\r\n\r\n  let day = new Date(time).getDate()\r\n  let month = new Date(time).getMonth()\r\n  let year = new Date(time).getFullYear()\r\n  if (place === 'posts') {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if (day === new Date().getDate()) {\r\n    return `${hour}:${minutes}`\r\n  }\r\n  if ((new Date().getDate() - day) > 1 || new Date().getMonth() + 1 > month + 1) {\r\n    // if(new Date().getMonth() - month)\r\n    return `${day < 10 ? `0${day}` : day}/${month < 10 ? `${month + 1}` : month}/${year}`\r\n  }\r\n  if ((new Date().getDate() - day) === 1 && place === 'list') {\r\n    return `Ontem`\r\n  } else {\r\n    return `Ontem ${hour}:${minutes}`\r\n  }\r\n\r\n  // else {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // let hours = (timer / 1000 / 60 / 60)\r\n  // if (hours < 24) {\r\n  //   return `${hour}:${minutes}`\r\n  // } else if (hours > 24 && hours < 48) {\r\n  //   return `${place === 'list' ? 'ontem' : `${hour}:${minutes}`}`\r\n  // } else if (hours > 48) {\r\n  //   return `${day < 10 ? `0${day}` : day}/${month < 10 ? `0${month + 1}` : month}/${year}`\r\n  // }\r\n  // return `${hour}:${minutes}`\r\n}","import styled from 'styled-components'\r\n\r\nexport const ConfigList = styled.ul`\r\n  width: 170px;\r\n  background: #f1f1f1;\r\n  position: absolute;\r\n  top: 60px;\r\n  left: 0px;\r\n  border: solid 1px #bbb;\r\n  color: #666;\r\n  list-style-type: none;\r\n  z-index: 14;\r\n  li{\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    height: 30px;\r\n    border-bottom: 1px solid #bbb;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    label{\r\n      width: 100%;\r\n      display: inline-block;\r\n      padding-top: 5px;\r\n      height: 100%;\r\n    }\r\n\r\n    &:hover{\r\n      background: #ddd;\r\n    }\r\n  }\r\n`","import React, { useRef, useEffect } from 'react'\r\nimport { ConfigList } from './styles'\r\n\r\nconst MenuConfig = ({ setFileImage }) => {\r\n  const configRef = useRef()\r\n  useEffect(() => { configRef.current.focus() }, [])\r\n  const logout = () => {\r\n    localStorage.removeItem('@chat@')\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <>\r\n      <ConfigList ref={configRef}>\r\n        <li>\r\n          <input\r\n            type=\"file\"\r\n            id=\"#file\" hidden\r\n            onChange={({ target: { files } }) => setFileImage(files[0])} />\r\n          <label htmlFor=\"#file\">\r\n            Alterar imagem\r\n        </label></li>\r\n        <li onClick={logout}>Logout</li>\r\n      </ConfigList>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MenuConfig\r\n","import api from '../../config/api'\r\nimport { UPDATE_MESSAGES_NOT_READ } from '../conversations/actionsCreators'\r\nexport const LOADING_POSTS = 'posts:LOADING_POSTS'\r\nexport const PREVIOUS_POSTS = 'posts:PREVIOUS_POSTS'\r\nexport const CLEAN_POSTS_USER = 'posts:CLEAN_POSTS_USER'\r\nexport const NEW_MESSAGE = 'posts:NEW_MESSAGE'\r\nexport const MESSAGE_READ = 'posts:MESSAGE_READ'\r\n\r\n\r\nexport const loadingPosts = (userChatActive) => async dispatch => {\r\n  let messages\r\n  if (userChatActive.idConversation) {\r\n    messages = await api.get(`conversation/messages/${userChatActive.idConversation}/1`)\r\n  }\r\n  dispatch({\r\n    type: LOADING_POSTS,\r\n    payload: {\r\n      // posts: messages ? messages.data : { messages: [], _id: userChatActive.idConversation },\r\n      posts: messages ? messages.data : { messages: [], _id: userChatActive.idConversation },\r\n      userActive: userChatActive,\r\n    }\r\n  })\r\n}\r\n\r\nexport const previousPosts = (idConversation, page) => async dispatch => {\r\n  const messages = await api.get(`conversation/messages/${idConversation}/${page}`)\r\n  dispatch({\r\n    type: PREVIOUS_POSTS,\r\n    payload: {\r\n      posts: messages.data\r\n    }\r\n  })\r\n}\r\n\r\nexport const newMessage = (mensagem) => async dispatch => {\r\n  dispatch({\r\n    type: NEW_MESSAGE,\r\n    payload: mensagem\r\n  })\r\n}\r\n\r\nexport const cleanPosts = ({ idConversation, idUser }) => async dispatch => {\r\n  console.log(idConversation, idUser)\r\n  await api.delete(`conversation/${idConversation}/${idUser}`)\r\n  dispatch({\r\n    type: CLEAN_POSTS_USER,\r\n    payload: idConversation\r\n  })\r\n}\r\n\r\nexport const updateMessageRead = ({ message, messagesNotRead }) => dispatch => {\r\n  dispatch({\r\n    type: UPDATE_MESSAGES_NOT_READ,\r\n    payload: {\r\n      numberMessages: messagesNotRead,\r\n      idConversation: message.conversation\r\n    }\r\n  })\r\n  dispatch({\r\n    type: MESSAGE_READ,\r\n    payload: message\r\n  })\r\n}","import styled from 'styled-components'\r\n\r\nexport const UserConversation = styled.li`\r\n  align-items:center;\r\n  background: #eee;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n  display: flex;\r\n  padding: 2px 5px;\r\n  height: 60px;\r\n  transition: background 200ms linear;\r\n  position: relative;\r\n  width: 100%;\r\n  &:hover{\r\n    background: #ddd;\r\n  }  \r\n  &:hover .btn-user-options{\r\n    display: block;\r\n  }\r\n\r\n  .user-image{\r\n    width: 40px;\r\n    img{\r\n      border-radius: 50%;\r\n      width: 100%;\r\n      max-width: 100%;\r\n    }\r\n  }\r\n\r\n  .user-info{\r\n    margin-left: 10px;\r\n    color: #666;\r\n    width: 70%;\r\n    letter-spacing: 0.6px;\r\n\r\n    p{\r\n     font-size: 12px; \r\n    }\r\n  }\r\n  .messages-not-read{\r\n    position: absolute;\r\n    background:rgba(89, 125, 204, 0.9);\r\n    width: 22px;\r\n    height: 22px;\r\n    max-height: 25px;\r\n    font-size: 14px;\r\n    padding-top: 3px ;\r\n    border-radius: 50%;\r\n    color: #F8f8f8;\r\n    left:25px;\r\n    text-align: center;\r\n    bottom: 1px;\r\n  }\r\n  .last-update{\r\n    position: absolute;\r\n    right: 10px;\r\n    top:6px;\r\n    font-size: 13px;\r\n    color: #777;\r\n    z-index: 8;\r\n  }\r\n  .btn-user-options{\r\n    position: absolute;\r\n    right: 10px;\r\n    bottom: 7px;\r\n    display: none;\r\n    z-index: 14;\r\n    width: 60px;\r\n  \r\n    i{\r\n      margin-left: 15px;\r\n      color: #888;\r\n      border-radius: 50%;\r\n      padding: 6px 12px;\r\n      transition: background 200ms ease-in;\r\n      &:hover{\r\n        background: rgba(0, 0, 0, 0.1);\r\n      }\r\n    }\r\n    .user-options{\r\n      width:160px;\r\n      position: absolute;\r\n      right: 28px;\r\n      background: #EEEEEE;\r\n      border-radius: 4px;\r\n      border: solid 1px #bbb;\r\n      z-index: 15;\r\n    }\r\n    li{\r\n      padding: 8px 5px 8px 10px;\r\n      border-bottom: 1px solid #bbb;\r\n    }\r\n  }\r\n\r\n  .add-chat a{\r\n    display: block;\r\n    text-decoration: none;\r\n    background: #7693D2;\r\n    color: #f8f8f8;\r\n    margin-top: 3px;\r\n    margin-bottom: 3px;\r\n    padding: 3px;\r\n    border-radius: 4px;\r\n    text-align: center;\r\n    width: 150px;\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport getHours from '../../../config/getHours'\r\nimport { loadingPosts } from '../../../reducers/posts/actionsCreators'\r\nimport { updateStatus } from '../../../reducers/conversations/actionsCreators'\r\nimport { UserConversation } from './styles'\r\n\r\nconst UserChat = ({ userChat, loadingPosts, search, listConversations, lastUpdate, updateStatus, userActive, posts, messagesNotRead, setIsShowConfirm, setDeleteUser, idConversation, setShowList }) => {\r\n  const [isMenuOptions, setIsMenuOptions] = useState(false)\r\n\r\n  const createConversation = async (userId) => {\r\n    console.log('teste')\r\n    const isCreatedConversation = listConversations.contacts.some(conversation => conversation.user._id === userId)\r\n    if (!isCreatedConversation) {\r\n      const { data } = await api.post('/create/conversation', { userId })\r\n      await loadingPosts({ ...userChat, idConversation: data.idConversation })\r\n      if (userActive.hasOwnProperty('_id')) {\r\n        if (userActive._id === userId) return false\r\n        updateStatus(true)\r\n        return true\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleClickList = async (idConversation) => {\r\n    if (!userActive.hasOwnProperty('_id')) {\r\n      await loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      return false\r\n    }\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      if (userActive._id.toString() === userChat._id.toString() && posts[idConversation]) {\r\n        return false\r\n      }\r\n      await loadingPosts({ ...userChat, idConversation, messagesNotRead })\r\n      updateStatus(true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UserConversation\r\n      onClick={() => {\r\n        listConversations.contacts.length === 0\r\n          ? createConversation(userChat._id)\r\n          : listConversations.contacts.every(item => item.user._id === userChat._id\r\n            ? handleClickList(item.idConversation)\r\n            : createConversation(userChat._id))\r\n        search && setShowList(false)\r\n      }}>\r\n      <div className=\"user-image\">\r\n        <img src={userChat.imageProfile ? userChat.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n      </div>\r\n      <div className=\"user-info\">\r\n        <div className=\"user-name\">\r\n          <h4>{userChat.name.length >= 18 ? userChat.name.substring(0, 18) + '...' : userChat.name}</h4>\r\n          <p>{userChat.username}</p>\r\n          {!search && !!messagesNotRead && <span className='messages-not-read'>\r\n            {messagesNotRead}\r\n          </span>}\r\n        </div>\r\n      </div>\r\n      {!search &&\r\n        <>\r\n          <div className=\"last-update\">\r\n            <span>{getHours(lastUpdate, 'list')}</span>\r\n          </div>\r\n          <div className=\"btn-user-options\"\r\n            onClick={() => setIsMenuOptions(!isMenuOptions)}\r\n            onMouseLeave={() => setIsMenuOptions(false)}>\r\n            <i className=\"fas fa-ellipsis-v\"></i>\r\n            {isMenuOptions && <ul className='user-options'>\r\n              <li onClick={() => {\r\n                setIsShowConfirm(true)\r\n                setDeleteUser({\r\n                  idUser: userChat._id,\r\n                  idConversation\r\n                })\r\n              }}>Excluir mensagens</li>\r\n            </ul>}\r\n          </div>\r\n        </>\r\n      }\r\n    </UserConversation>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations,\r\n  userActive: state.posts.userActive,\r\n  posts: state.posts.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingPosts, updateStatus })(UserChat)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerSearch = styled.div`\r\n  flex: 3;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  form{\r\n    width: 60%;\r\n    position: relative;\r\n    \r\n    input{\r\n      width: 100%;\r\n      padding: 5px 3px;\r\n      border-top-left-radius: 5px;\r\n      border-bottom-left-radius: 3px;\r\n      border-top-right-radius: 5px;\r\n      border-bottom-right-radius: 3px;\r\n      border: none;\r\n      outline: 0;\r\n    }\r\n    ul{\r\n      box-shadow: 1px 1px 5px #999;\r\n      width: 100%;\r\n      position: absolute;\r\n      z-index: 12;\r\n    }\r\n  }\r\n`","import React, { useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from '../ListChat/UserChat'\r\nimport { searchUser } from '../../reducers/userInfo/actionsCreators'\r\nimport { ContainerSearch } from './styles'\r\n\r\nconst SearchUser = ({ searchUsers, searchUser }) => {\r\n  const [showList, setShowList] = useState(false)\r\n  const inputRef = useRef()\r\n\r\n  const search = () => {\r\n    const input = inputRef.current.value\r\n    searchUser(input)\r\n  }\r\n\r\n  return (\r\n    <ContainerSearch>\r\n      <form action=\"\">\r\n        <input type=\"text\"\r\n          ref={inputRef}\r\n          onFocus={() => setShowList(true)}\r\n          onBlur={() => inputRef.current.value = ''}\r\n          placeholder='Pesquisar usuários'\r\n          name='input'\r\n          autoComplete='off'\r\n          onChange={search}\r\n        />\r\n        {showList && <ul>\r\n          {searchUsers.map(user => (\r\n            <UserChat\r\n              key={`search:${user._id}`}\r\n              search={true}\r\n              userChat={user}\r\n              setShowList={setShowList}\r\n            />\r\n          ))}\r\n        </ul>}\r\n      </form>\r\n    </ContainerSearch>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  searchUsers: state.userInfo.serachUsers\r\n})\r\n\r\nexport default connect(mapStateToProps, { searchUser })(SearchUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ConatinerInfo = styled.header`\r\n  width:100%;\r\n  background: rgba(89, 125, 204, 0.8);\r\n  height: 70px;\r\n  border-bottom: 1px solid #bbb;\r\n  padding: 5px 10px;\r\n  display: flex;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n  justify-content: space-between;\r\n  \r\n  .user-logged > div, .user-conversation{\r\n    display: flex;\r\n    align-items:center;\r\n    color: #f2f2f2;\r\n    position: relative;\r\n    flex: 2;\r\n  }\r\n  .user-conversation{\r\n    flex: 2;\r\n  }\r\n  .user-logged > div{\r\n    justify-content: flex-end;\r\n    height: 100%;\r\n    i {\r\n      margin-right: 15px;\r\n      margin-left: 15px;\r\n    }\r\n  }\r\n  .user-logged{\r\n    position: relative;\r\n  }\r\n  .user-logged > div:hover{\r\n    cursor: pointer;\r\n    background: rgba(89, 125, 204, 0.5);\r\n  }\r\n  .user-img{\r\n    width: 60px;\r\n    img{\r\n      background: white;\r\n      ::selection{\r\n        background: transparent;\r\n      }\r\n      border-radius: 50%;\r\n      max-width:100%;\r\n    }\r\n  }\r\n  .user-img.conversation{\r\n    width: 40px;\r\n    float:right;\r\n  }\r\n  .user-info.logged{\r\n    margin-right: 10px;\r\n  }\r\n  .user-info.conversation{\r\n    margin-left: 10px;\r\n    p{\r\n      font-size: 14px;\r\n    }\r\n    .user-status{\r\n      position: relative;\r\n      margin-left: 4px;\r\n      letter-spacing: 0.6px;\r\n      &::before{\r\n        content: '';\r\n        position: relative;\r\n        top:3px;\r\n        right: 5px;\r\n        display: inline-block;\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        background: #4fdb66;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImage = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  left:0;\r\n  z-index: 15;\r\n\r\n  .close-preview{\r\n    color:white;\r\n    right: 250px;\r\n  }\r\n  .image-content{\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 100%;\r\n    figure{\r\n      margin-top: 50px;\r\n      img{\r\n        display: block;\r\n        width:100%;\r\n        max-width:400px;\r\n      }\r\n    }\r\n  }\r\n  .actions{\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    padding-top: 20px;\r\n\r\n    .btn{\r\n      height: 45px;\r\n      text-transform: uppercase;\r\n      font-weight: 600; \r\n      width: 100%;\r\n      border: 1px solid #aaa;\r\n      outline: none;\r\n      cursor: pointer;\r\n\r\n      &:first-child{\r\n        margin-right: 10px;\r\n        background: rgba(89, 125, 204, 0.8);\r\n        color: #f8f8f8;\r\n        &:hover{\r\n          background: rgba(89, 125, 204, 0.6);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport gethours from '../../config/getHours'\r\nimport UserMenuConfig from './UserConfig'\r\nimport SearchUser from '../SearchUser'\r\nimport socket from '../../config/socket.io'\r\nimport { updateImageProfile } from '../../reducers/userInfo/actionsCreators'\r\nimport { ConatinerInfo, PreviewImage } from './styles'\r\n\r\nlet timer\r\nconst InfoUser = ({ userInfo, userActive, status, updateImageProfile }) => {\r\n  const [isMenuVisible, setIsMenuVisible] = useState(false)\r\n  const [fileImage, setFileImage] = useState(false)\r\n  const [isTyping, setIsTyping] = useState(false)\r\n\r\n  useEffect(() => {\r\n    userActive._id && socket.on('typing', info => {\r\n      if (info.idUser === userActive._id && info.idConversation === userActive.idConversation) {\r\n        clearTimeout(timer)\r\n        setIsTyping(true)\r\n        timer = setTimeout(() => {\r\n          setIsTyping(false)\r\n        }, 1000)\r\n      }\r\n    })\r\n  }, [userActive._id])\r\n\r\n  const renderStatus = () => {\r\n    if (status.hasOwnProperty('_id')) {\r\n      return (\r\n        status.status ?\r\n          <small className='user-status'>\r\n            <b>{isTyping ? 'Digitando...' : 'Online'}</b>\r\n          </small>\r\n          :\r\n          <small style={{ fontSize: 11 }}>\r\n            <b>Visto por último {gethours(status.updatedAt)}</b>\r\n          </small>\r\n      )\r\n    }\r\n  }\r\n\r\n  const imageProfileUpdate = async () => {\r\n    if (fileImage) {\r\n      const data = new FormData()\r\n      data.append('imageProfile', fileImage)\r\n      updateImageProfile(data)\r\n      closeUpdateImage()\r\n    }\r\n  }\r\n\r\n  const closeUpdateImage = () => {\r\n    setFileImage(null)\r\n    setIsMenuVisible(false)\r\n  }\r\n\r\n  return (\r\n    <ConatinerInfo>\r\n      {fileImage && <PreviewImage>\r\n        <div className=\"close-preview\" onClick={closeUpdateImage}>\r\n          <i className=\"fas fa-times\"></i>\r\n        </div>\r\n        <div className=\"image-content\">\r\n          <figure>\r\n            <img src={window.URL.createObjectURL(fileImage)} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className='btn' onClick={imageProfileUpdate}>Confirmar</button>\r\n          <button className='btn' onClick={closeUpdateImage}>Cancelar</button>\r\n        </div>\r\n      </PreviewImage>}\r\n\r\n      <div className=\"user-conversation\">\r\n        {userActive.hasOwnProperty('_id') &&\r\n          <>\r\n            <div className=\"user-img conversation\">\r\n              <img src={userActive.imageProfile ? userActive.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n            </div>\r\n            <div className=\"user-info conversation\">\r\n              {userActive && <h4>{userActive.name}</h4>}\r\n              {userActive && <p>{userActive.username}</p>}\r\n              {renderStatus()}\r\n            </div>\r\n          </>\r\n        }\r\n      </div>\r\n      <SearchUser />\r\n      <div className=\"user-logged\">\r\n        <div onClick={() => setTimeout(() => setIsMenuVisible(!isMenuVisible), 100)}>\r\n          <i className=\"fas fa-sort-down\"></i>\r\n          <div className=\"user-info logged\">\r\n            {userInfo.name && <h3>{userInfo.name}</h3>}\r\n            {userInfo.email && <p>{userInfo.email}</p>}\r\n          </div>\r\n          <div className=\"user-img logged\">\r\n            <img src={userInfo.imageProfile ? userInfo.imageProfile : 'images/userDefault.png'} alt=\"\" />\r\n          </div>\r\n        </div>\r\n        {isMenuVisible &&\r\n          <UserMenuConfig\r\n            setFileImage={setFileImage}\r\n            setIsMenuVisible={setIsMenuVisible} />\r\n        }\r\n      </div>\r\n    </ConatinerInfo>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  status: state.listConversations.status,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateImageProfile })(InfoUser)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerMessage = styled.div`\r\n  clear: both;\r\n  position: relative;\r\n\r\n .warningMessage{\r\n    text-align: center;\r\n    font-weight: bold;\r\n    font-size: 13px;\r\n    color: #888;\r\n    width: fit-content;\r\n    background: #dcdcdc;\r\n    border-bottom: 1px solid #bbb;\r\n    display: block;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n    margin: 0 auto;\r\n  } \r\n\r\n  .content-message{\r\n    width: fit-content;\r\n    min-width:40px;\r\n    max-width: ${props => props.isImg ? '40%' : '60%'};\r\n    background: ${props => props.isIdUserLogged ? 'beige' : '#f8f8f8'};\r\n    margin-bottom: 5px;\r\n    border-radius: 6px;\r\n    padding: 5px 8px;\r\n    z-index: 2;\r\n    float: ${props => props.isIdUserLogged ? 'right' : 'left'};\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: ${props => props.preview ? 'static' : 'relative'};\r\n\r\n    &::after{\r\n      content: '';\r\n      position: absolute;\r\n      border-width: 10px;\r\n      border-color: beige transparent transparent transparent;\r\n      border-style: solid;\r\n      top:0;\r\n      right: -10px;\r\n      ${props => !props.isIdUserLogged && `\r\n        left: -10px;\r\n        right: inherit;\r\n        border-color: #f8f8f8 transparent transparent transparent;\r\n      `}\r\n    }\r\n\r\n    .content-img{\r\n      width: 100%;\r\n      overflow: hidden;\r\n      max-width: 100%;\r\n      max-height: 250px;\r\n    }\r\n    .content-img img{\r\n      width: 210px;\r\n      margin: 0 auto;\r\n      text-align: center;\r\n      display: block;\r\n      transition: transform 300ms ease-in-out;\r\n    }\r\n    div{\r\n      .hour{\r\n        position: relative;\r\n        width: 30px;\r\n        font-weight: 600;\r\n        color: #777;\r\n        float: right;\r\n        font-size: 11px;\r\n        right: -7px;\r\n        margin-top: 3px;\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport getHours from '../../../config/getHours'\r\nimport { ContainerMessage } from './styles'\r\n\r\nconst Message = ({ isIdUserLogged, message, setUrlPreviewImage }) => {\r\n\r\n  return (\r\n    <ContainerMessage\r\n      isIdUserLogged={isIdUserLogged}\r\n      data-id-message={message._id}\r\n      data-js={!isIdUserLogged && `viewed:${message.viewed}`}\r\n      isImg={false}>\r\n      {message &&\r\n        <div className=\"content-message\">\r\n          {message.imagePath && <div className=\"content-img\">\r\n            <img\r\n              onClick={() => setUrlPreviewImage(message.imagePath)}\r\n              src={message.imagePath}\r\n              alt=\"\" />\r\n          </div>}\r\n          <div>\r\n            <p>{message.message}</p>\r\n            <span className='hour'>\r\n              {getHours(message.createdAt, 'posts')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      }\r\n    </ContainerMessage>\r\n  )\r\n}\r\n\r\nexport default Message\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerPosts = styled.main`\r\n  background: #d6d6c5;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 5px 15px;\r\n  overflow-y: auto;\r\n  position: relative;\r\n  opacity: 0;\r\n  transition: opacity 50ms linear;\r\n  flex: 5;\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 6px;\r\n    background: #F4F4F4;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 5px;\r\n    border-radius: 5px;\r\n    background:rgba(172, 167, 167, 0.8); \r\n  }\r\n`","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport socket, { url } from '../../../config/socket.io'\r\nimport { newMessage, previousPosts } from '../../../reducers/posts/actionsCreators'\r\nimport Message from '../Message'\r\nimport { ContainerPosts } from './styles'\r\n\r\nlet idsMessages = {}\r\nlet page = 0\r\nconst Posts = ({ posts, userInfo, idConversation, containerChatRef, positionLine, messagesNotRead, pageActual, nextPage, previousPosts, totalPages, setUrlPreviewImage, setLoadingMessages }) => {\r\n  let socketnewMessage = io(url)\r\n  useEffect(() => {\r\n    page = 0\r\n    containerChatRef.current.style.opacity = 0\r\n    if (!messagesNotRead) {\r\n      containerChatRef.current.scrollTop += 99999\r\n      containerChatRef.current.style.opacity = 1\r\n      initialConversation()\r\n    } else {\r\n      containerChatRef.current.scrollTop = 0\r\n      setWarningMessageNotRead(true)\r\n    }\r\n\r\n    containerChatRef.current.style.opacity = 1\r\n    initialConversation()\r\n  }, [idConversation])\r\n\r\n  useEffect(() => {\r\n    socketnewMessage.on('newMessage', () => {\r\n      initialConversation()\r\n      if (containerChatRef.current.scrollHeight - containerChatRef.current.scrollTop - 100 < 600) {\r\n        containerChatRef.current.scrollTop = containerChatRef.current.scrollHeight\r\n      } else {\r\n        setWarningMessageNotRead(false)\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const createElementWarningMessage = (messages) => {\r\n    let warningMessage = document.createElement('span')\r\n    warningMessage.textContent = 'Mensagen(s) não visualizada(s)'\r\n    warningMessage.classList.add('warningMessage')\r\n    messages.insertAdjacentElement('afterbegin', warningMessage)\r\n    return warningMessage\r\n  }\r\n\r\n  const setWarningMessageNotRead = (scroll) => {\r\n    const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')[0]\r\n    let positionMessage = messages.getBoundingClientRect().top\r\n    containerChatRef.current.style.opacity = 1\r\n    createElementWarningMessage(messages)\r\n    if (scroll) containerChatRef.current.scrollTop = (positionMessage - positionLine) + 100\r\n  }\r\n\r\n  const initialConversation = () => {\r\n    if (containerChatRef.current.scrollHeight === containerChatRef.current.clientHeight) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      if (messages) {\r\n        Object.keys(idsMessages).forEach(id => {\r\n          messages.forEach(async message => {\r\n            if (message.getBoundingClientRect().top < positionLine) {\r\n              socket.emit('registerMessageViewed', id)\r\n            }\r\n          })\r\n        })\r\n        idsMessages = {}\r\n      }\r\n      containerChatRef.current.style.opacity = 1\r\n\r\n    }\r\n  }\r\n  const registerIdsMessages = (message) => {\r\n    let isUserContact = message.from.toString() !== userInfo._id\r\n      ? true : message.to.toString() !== userInfo._id\r\n        ? true : false\r\n\r\n    if (isUserContact && !message.viewed) {\r\n      idsMessages = {\r\n        ...idsMessages,\r\n        [message._id]: message._id\r\n      }\r\n    }\r\n  }\r\n\r\n  const postsPrevious = async (e) => {\r\n    if (e.currentTarget.scrollTop < 200) {\r\n      if (pageActual < totalPages && page !== pageActual) {\r\n        page = pageActual\r\n        setLoadingMessages(true)\r\n        await previousPosts(idConversation, nextPage)\r\n        setTimeout(() => setLoadingMessages(false), 200)\r\n        return\r\n      }\r\n    }\r\n    if (pageActual === totalPages) page = 0\r\n  }\r\n\r\n  const messagesViewed = async (e) => {\r\n    if (Object.keys(idsMessages).length > 0) {\r\n      const messages = document.querySelectorAll('[data-js=\"viewed:false\"]')\r\n      messages.forEach(message => {\r\n        if (idsMessages[message.getAttribute('data-id-message')]) {\r\n          let id = idsMessages[message.getAttribute('data-id-message')]\r\n          if (message.getBoundingClientRect().top < positionLine) {\r\n            let { [id]: key, ...tail } = idsMessages\r\n            idsMessages = {\r\n              ...tail\r\n            }\r\n            socket.emit('registerMessageViewed', id)\r\n          }\r\n        }\r\n      })\r\n    }\r\n    await postsPrevious(e)\r\n  }\r\n\r\n  return (\r\n    <ContainerPosts ref={containerChatRef} onScroll={messagesViewed}>\r\n      {posts[idConversation].map(message => {\r\n        registerIdsMessages(message)\r\n        return (\r\n          <Message\r\n            setUrlPreviewImage={setUrlPreviewImage}\r\n            key={message._id}\r\n            isIdUserLogged={message.from.toString() === userInfo._id}\r\n            message={message}\r\n          />\r\n        )\r\n      })}\r\n    </ContainerPosts>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  posts: state.posts.posts,\r\n  pageActual: state.posts.page,\r\n  totalPages: state.posts.totalPages,\r\n  nextPage: state.posts.nextPage,\r\n  messagesNotRead: state.posts.userActive.messagesNotRead\r\n})\r\n\r\nexport default connect(mapStateToProps, { newMessage, previousPosts })(Posts)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerSend = styled.div`\r\n  background: #ddd;\r\n  padding: 8px 15px;\r\n  width: 100%;\r\n  display: flex;\r\n  max-height: 80px;\r\n  flex-wrap:wrap;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  @media (max-height: 700px) {\r\n    max-height: 100px;\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  .message-content{\r\n    div.close-picker{\r\n      width: 100%;\r\n      height: 1000%;\r\n      background: transparent;\r\n      position: absolute;\r\n      top:-900%;\r\n      left:0;\r\n      z-index: 0;\r\n    }\r\n    textarea{\r\n      max-width: 500px;\r\n      resize: none;\r\n      overflow-x: hidden;\r\n      padding-left:12px;\r\n      padding-top:10px;\r\n      border-radius: 50px;\r\n      border: solid 1px #bbb;\r\n      outline:0;\r\n      @media (max-width: 900px) {\r\n        max-width: 320px;\r\n      }\r\n    }\r\n  }\r\n  .icons i{\r\n    font-size: 28px;\r\n    color: #3bb6e7;\r\n    margin-left: 10px;\r\n    cursor: pointer;\r\n  }\r\n  .icons .fa-laugh{\r\n    color: #999;\r\n  }\r\n  .btn-send{\r\n    margin-left: 8px;\r\n    button{\r\n      border-radius: 20px;\r\n      text-decoration:none;\r\n      background: #aaa;\r\n      color: #f8f8f8;\r\n      font-size: 18px;\r\n      padding: 10px 40px;\r\n      display: block;\r\n      letter-spacing: 0.8px;\r\n      font-weight: 600;\r\n      border:none;\r\n      outline: none;\r\n\r\n      &:active{\r\n        transition: background 200ms ease;\r\n        background: #ccc;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PreviewImg = styled.figure`\r\n  position: absolute;\r\n  max-width: 100%;\r\n  width: 100%;\r\n  padding: 15px 0;\r\n  left: 0;\r\n  background: #eee;\r\n  bottom: 100%;\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  .header{\r\n    .close{\r\n      position: absolute;\r\n      right: 50px;\r\n      top: 10px;\r\n      font-size: 28px;\r\n      cursor: pointer;\r\n      color: #444;\r\n    }\r\n\r\n    .image-name{\r\n      margin-bottom: 20px;\r\n      font-weight: 600;\r\n    }\r\n  }\r\n\r\n  .img-content{\r\n    max-width: 45%;\r\n    max-height: 380px;\r\n    img{\r\n      max-width: 80%;\r\n      max-height: 380px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`","import React, { useState, useRef } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Picker } from 'emoji-mart'\r\nimport socket from '../../../config/socket.io'\r\nimport { loadingConversations } from '../../../reducers/conversations/actionsCreators'\r\nimport 'emoji-mart/css/emoji-mart.css'\r\nimport api from '../../../config/api'\r\nimport { ContainerSend, PreviewImg } from './styles'\r\n\r\nconst SendMessage = ({ userActive, userInfo, containerChatRef }) => {\r\n  const [messageText, setMessageText] = useState('')\r\n  const [showEmoji, setShowEmoji] = useState(false)\r\n  const [fileImg, setFileImg] = useState(null)\r\n  const textareaRef = useRef()\r\n\r\n  const sendMessage = async () => {\r\n    if (messageText || fileImg) {\r\n      const data = new FormData()\r\n      data.append('userId', userActive._id)\r\n      data.append('message', messageText)\r\n      data.append('image', fileImg ? fileImg : '')\r\n      await api.post('conversation/message', data)\r\n      if (containerChatRef.current) {\r\n        containerChatRef.current.scrollTop = containerChatRef.current.scrollHeight\r\n      }\r\n      setMessageText('')\r\n      setFileImg(null)\r\n      let messageWarning = document.querySelector('.warningMessage')\r\n      if (messageWarning) {\r\n        messageWarning.remove()\r\n      }\r\n    }\r\n  }\r\n\r\n  const onChangeTextArea = (e) => {\r\n    setMessageText(e.target.value)\r\n    socket.emit('writing', {\r\n      idUser: userInfo._id,\r\n      idConversation: userActive.idConversation\r\n    })\r\n  }\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setMessageText(messageText + emoji)\r\n  }\r\n\r\n  return (\r\n    <ContainerSend>\r\n      {fileImg && <PreviewImg>\r\n        <div className=\"header\">\r\n          <div className=\"image-name\">\r\n            <p>{fileImg.name}</p>\r\n          </div>\r\n          <div className=\"close\" onClick={() => setFileImg(null)}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n        </div>\r\n        <div className=\"img-content\">\r\n          <img src={URL.createObjectURL(fileImg)} alt=\"\" />\r\n        </div>\r\n      </PreviewImg>}\r\n      <div className=\"message-content\">\r\n        {showEmoji &&\r\n          <>\r\n            <div className='close-picker' onClick={() => {\r\n              textareaRef.current.focus()\r\n              setShowEmoji(false)\r\n            }\r\n            } />\r\n            <Picker\r\n              onSelect={addEmoji}\r\n              set={'google'}\r\n              style={{ position: 'absolute', bottom: '65px', left: 0, zIndex: 20, height: '' }}\r\n            />\r\n          </>\r\n        }\r\n        <textarea\r\n          cols=\"50\"\r\n          rows=\"2\"\r\n          ref={textareaRef}\r\n          placeholder='Escreva uma mensagem'\r\n          value={messageText}\r\n          onChange={onChangeTextArea}\r\n          onKeyUp={(e) => {\r\n\r\n            if (e.keyCode === 13) {\r\n              sendMessage()\r\n            }\r\n          }}\r\n        />\r\n      </div>\r\n      <input type=\"file\"\r\n        id=\"#file\"\r\n        hidden\r\n        onChange={({ target: { files } }) => setFileImg(files[0])}\r\n      />\r\n\r\n      <div className=\"icons\">\r\n        <i className=\"far fa-laugh\"\r\n          onClick={() => {\r\n            setShowEmoji(!showEmoji)\r\n          }} />\r\n        <label htmlFor=\"#file\">\r\n          <i className=\"fas fa-image\" />\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-send\">\r\n        <button onClick={sendMessage}>Enviar</button>\r\n      </div>\r\n    </ContainerSend>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive,\r\n  listConversations: state.listConversations,\r\n  userInfo: state.userInfo\r\n})\r\n\r\nexport default connect(mapStateToProps, { loadingConversations })(SendMessage)\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  flex: 1 1 70%;\r\n  height: 91%;\r\n  display:flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  background-image: url('images/speech-bubble.svg');\r\n  background-repeat: no-repeat;\r\n  background-position-x: 70px;\r\n\r\n  .loader-mensagens{\r\n    width: 100%;\r\n    position: absolute;\r\n    top:0;\r\n    left:0;\r\n    text-align: center;\r\n    background: rgba(255, 255, 255, 0.5);\r\n    z-index: 15;\r\n  }\r\n`\r\n\r\nexport const MessageViewed = styled.div`\r\n  max-width: 1060px;\r\n  height: 30px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom:75px;\r\n  overflow: unset\r\n`","import React, { useEffect, useRef, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport io from 'socket.io-client'\r\nimport { PulseLoader } from 'react-spinners'\r\nimport Posts from './Posts'\r\nimport { newMessage, updateMessageRead } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport SendMessage from './SendMessage'\r\nimport { ContainerChat, MessageViewed } from './styles'\r\nimport socketMessageRead, { url } from '../../config/socket.io'\r\n\r\nlet positionLine\r\nconst Chat = ({ userActive, newMessage, loadingConversations, updateMessageRead }) => {\r\n  const [urlPreviewImage, setUrlPreviewImage] = useState(\"\")\r\n  const [loadingMessages, setLoadingMessages] = useState(false)\r\n  const containerChatRef = useRef()\r\n  const lineRef = useRef()\r\n\r\n  useEffect(() => {\r\n    positionLine = lineRef.current.getBoundingClientRect().top\r\n    const socket = io(url)\r\n    socket.on('newMessage', async message => {\r\n      await newMessage(message)\r\n      setTimeout(() => loadingConversations(), 200)\r\n    })\r\n    socketMessageRead.on('messageRead', message => {\r\n      updateMessageRead(message)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    renderContainerPosts()\r\n  }, [userActive.idConversation])\r\n\r\n  const renderContainerPosts = () => {\r\n    return (\r\n      <Posts\r\n        positionLine={positionLine}\r\n        idConversation={userActive.idConversation}\r\n        containerChatRef={containerChatRef}\r\n        setUrlPreviewImage={setUrlPreviewImage}\r\n        setLoadingMessages={setLoadingMessages}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {urlPreviewImage &&\r\n        <div className=\"preview-image\">\r\n          <div className=\"close-preview\" onClick={() => setUrlPreviewImage(false)}>\r\n            <i className=\"fas fa-times\"></i>\r\n          </div>\r\n          <figure>\r\n            <img src={urlPreviewImage} alt=\"\" />\r\n          </figure>\r\n        </div>\r\n      }\r\n      <ContainerChat>\r\n        <div className=\"loader-mensagens\">\r\n          <PulseLoader\r\n            loading={loadingMessages}\r\n            color='#7693d2'\r\n          />\r\n        </div>\r\n        {userActive.hasOwnProperty('_id') && renderContainerPosts()\r\n\r\n        }\r\n        <MessageViewed ref={lineRef} />\r\n        {userActive.hasOwnProperty('_id')\r\n          && <SendMessage containerChatRef={containerChatRef}\r\n          />\r\n        }\r\n      </ContainerChat>\r\n    </>\r\n  )\r\n}\r\nconst mapStateToProps = state => ({\r\n  userActive: state.posts.userActive\r\n})\r\nexport default connect(mapStateToProps, { newMessage, loadingConversations, updateMessageRead })(Chat)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  height: 120px;\r\n  width: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 6;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  color: #eee;\r\n\r\n  .close-modal{\r\n    position: absolute;\r\n    right: 10%;\r\n    top: 10px;\r\n    font-size: 26px;\r\n  }\r\n  .confirm-content{\r\n    padding-top:10px;\r\n    text-align:center;\r\n\r\n    h3{\r\n      letter-spacing: 0.7px;\r\n      margin-left: 5px;\r\n    }\r\n    i{\r\n      color: #eaf73b;\r\n      font-size: 26px;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n\r\n  .btn-actions{\r\n    margin-top: 20px;\r\n\r\n    .btn{\r\n      max-width: 160px;\r\n      width: 100%;\r\n      height: 30px;\r\n      text-transform: uppercase;\r\n      font-weight: 600;\r\n      border: 1px solid #aaa;\r\n      outline: 0;\r\n      cursor: pointer;\r\n      &:hover{\r\n        background: rgba(255, 255, 255, 0.6)\r\n      }\r\n    }\r\n    .btn.ok{\r\n      margin-left: 10px;\r\n      background: #7693D2;\r\n      color: #f8f8f8;\r\n      &:hover{\r\n        background: rgba(118, 147, 210, 0.8);\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport { Container } from './styles'\r\n\r\nconst Confirm = ({ setIsShowConfirm, deleteConversation }) => {\r\n  return (\r\n    <Container>\r\n      <div className=\"close-modal\" onClick={() => setIsShowConfirm(false)}>\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>\r\n      <div className=\"confirm-content\">\r\n        <h4>\r\n          <i className=\"fas fa-exclamation-triangle\"></i>\r\n          Tem certeza disso? Isso apagará todas as mensagens.<br />Deseja realmente continuar?\r\n        </h4>\r\n        <div className=\"btn-actions\">\r\n          <button className='btn cancel' onClick={() => setIsShowConfirm(false)}>\r\n            Cancelar\r\n          </button>\r\n          <button className='btn ok' onClick={() => deleteConversation()}>\r\n            Excluir\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Confirm\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerList = styled.section`\r\nposition: relative;\r\nflex: 1 1 25%;\r\n@media (max-width: 930px) {\r\n  /* min-width: 500px; */\r\n  /* flex: 0;    */\r\n}\r\n.content{\r\n  z-index: 5;\r\n  position: relative;\r\n  height: 100%;\r\n  background: #ffffef;\r\n  /* height: 90%; */\r\n  overflow-y: auto;\r\n  border-left: solid 1px #bbb;\r\n    /* @media (max-width: 930px) {\r\n      transform: translateX(110%);\r\n      height: 100%;\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n    } */\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport UserChat from './UserChat'\r\nimport Confirm from '../Confirm'\r\nimport { cleanPosts } from '../../reducers/posts/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport { ContainerList } from './styles'\r\n\r\nconst ListChat = ({ listConversations, cleanPosts, loadingConversations }) => {\r\n  const [isShowConfirm, setIsShowConfirm] = useState(false)\r\n  const [deleteUser, setDeleteUser] = useState({})\r\n\r\n  const deleteConversation = async () => {\r\n    await cleanPosts(deleteUser)\r\n    loadingConversations()\r\n    setIsShowConfirm(false)\r\n  }\r\n  return (\r\n    <>\r\n      {isShowConfirm && <Confirm\r\n        deleteConversation={deleteConversation}\r\n        setIsShowConfirm={setIsShowConfirm} />\r\n      }\r\n      <ContainerList>\r\n        <div className=\"content\">\r\n          <ul className=\"list-conversas\">\r\n            {listConversations.contacts.map(conversation => (\r\n              <UserChat\r\n                key={conversation.user._id}\r\n                userChat={conversation.user}\r\n                lastUpdate={conversation.updatedAt}\r\n                idConversation={conversation.idConversation}\r\n                messagesNotRead={conversation.messagesNotRead}\r\n                setDeleteUser={setDeleteUser}\r\n                setIsShowConfirm={setIsShowConfirm}\r\n              />\r\n            ))}\r\n          </ul>\r\n\r\n        </div>\r\n      </ContainerList>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  listConversations: state.listConversations\r\n})\r\n\r\nexport default connect(mapStateToProps, { cleanPosts, loadingConversations })(ListChat)\r\n","import styled from 'styled-components'\r\n\r\nexport const FormContainer = styled.form`\r\n  text-align: center;\r\n  width: 100%;\r\n  max-width: 350px;\r\n  margin: 0 auto;\r\n\r\n  .error{\r\n    color: red;\r\n    display: block;\r\n    margin-bottom: 10px;\r\n  }\r\n  .group-input{\r\n    margin-bottom: 15px;\r\n    position: relative;\r\n\r\n    ${props => props.signUp && `\r\n      &:before{\r\n        content: '*';\r\n        color: red;\r\n        position: absolute;\r\n        display: block;\r\n        left: -10px;\r\n      }\r\n    `}\r\n  }\r\n  input{\r\n    width: 100%;\r\n    max-width: 350px;\r\n    padding: 8px 5px;\r\n  }\r\n  .btn-actions{\r\n    margin: 0 auto;\r\n    align-items: center;\r\n    display: flex;\r\n    max-width: 350px;\r\n    \r\n    .fa-arrow-left{\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n  .btn{\r\n    height: 45px;\r\n    text-transform: uppercase;\r\n    font-weight: 600; \r\n    width: 100%;\r\n    border: 1px solid #aaa;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n  }\r\n  .sign-in{\r\n    background: rgba(89, 125, 204, 0.8);\r\n    color: #f8f8f8;\r\n    &:hover{\r\n      background: rgba(89, 125, 204, 0.6);\r\n    }\r\n  }\r\n  .sign-up{\r\n    &:hover{\r\n      background: rgba(0, 0, 0, 0.1);\r\n      color: #444;\r\n    }\r\n  }\r\n\r\n`","import React from 'react'\r\nimport { FormContainer } from './styles'\r\n\r\nconst Form = ({ submit, signUp, setIsSignIn, messageError }) => {\r\n  return (\r\n    <FormContainer onSubmit={submit} signUp={signUp}>\r\n      <span className='error'>{messageError}</span>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"text\" name='name' placeholder='Digite seu nome completo' />\r\n      </div>}\r\n      <div className=\"group-input\">\r\n        <input type=\"email\" name='email' placeholder='Digite seu email' />\r\n      </div>\r\n      <div className=\"group-input\">\r\n        <input type=\"password\" name='password' placeholder='Digite sua senha' />\r\n      </div>\r\n      {signUp && <div className=\"group-input\">\r\n        <input type=\"password\" name='confirmPassword' placeholder='Confirme sua senha' />\r\n      </div>}\r\n      <div className=\"btn-actions\">\r\n        <button\r\n          onClick={() => signUp ? setIsSignIn(true) : setIsSignIn(false)}\r\n          className='btn sign-up'\r\n          type='button'>\r\n          {signUp\r\n            ? <span><i className=\"fas fa-arrow-left\" />Voltar</span>\r\n            : 'Cadastre-se'}\r\n        </button>\r\n        <button className='btn sign-in'>{signUp ? 'Cadastre-se' : 'Login'}</button>\r\n      </div>\r\n    </FormContainer>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignIn = ({ loginUser, setIsSignIn, messageError, setMessageError }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n\r\n  const login = async (e) => {\r\n    e.preventDefault()\r\n    const { email, password } = e.target\r\n    if (!email.value || !password.value) {\r\n      setMessageError('Preencha os campos corretamente!')\r\n      return false\r\n    }\r\n\r\n    await loginUser(email.value, password.value)\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <Form submit={login} setIsSignIn={setIsSignIn} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignIn)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport api from '../../../config/api'\r\nimport { loginUser } from '../../../reducers/userInfo/actionsCreators'\r\nimport Form from '../../Form'\r\n\r\nconst SignUp = ({ setIsSignIn, messageError, setMessageError, loginUser }) => {\r\n  useEffect(() => {\r\n    setMessageError('')\r\n  }, [])\r\n  const register = async (e) => {\r\n    e.preventDefault()\r\n    const { name, email, password, confirmPassword } = e.target\r\n    if (!name.value || !email.value || !password.value || !confirmPassword.value) {\r\n      setMessageError('Todos os campos são obrigatórios!')\r\n      return false\r\n    }\r\n\r\n    if (password.value !== confirmPassword.value) {\r\n      setMessageError('Senhas diferentes!')\r\n      return false\r\n    }\r\n    try {\r\n      await api.post('auth/register', {\r\n        name: name.value,\r\n        email: email.value,\r\n        password: password.value\r\n      })\r\n      await loginUser(email.value, password.value)\r\n      window.location.reload()\r\n    } catch (error) {\r\n      setMessageError('Ocorreu um erro ao tentar se cadastrar!')\r\n    }\r\n\r\n  }\r\n  return (\r\n    <Form submit={register} setIsSignIn={setIsSignIn} signUp={true} messageError={messageError} />\r\n  )\r\n}\r\n\r\nexport default connect(null, { loginUser })(SignUp)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.section`\r\n  background: #ddd;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  header{\r\n    text-align:center;\r\n\r\n    .logo{\r\n      font-size: 7.5em;\r\n      color: rgba(89, 125, 204, 0.8);\r\n      p{\r\n        font-size: 20px;\r\n      }\r\n    }\r\n    .login{\r\n      color: #444;\r\n      font-style: italic;\r\n      font-size: 1.4em;\r\n    }\r\n  }\r\n`","import React, { useState } from 'react'\r\nimport SignIn from './SignIn'\r\nimport SignUp from './SignUp'\r\nimport { Container } from './styles'\r\nconst Auth = () => {\r\n  const [isSignIn, setIsSignIn] = useState(true)\r\n  const [messageError, setMessageError] = useState('')\r\n  return (\r\n    <Container>\r\n      <header>\r\n        <div className=\"logo\">\r\n          <i className=\"fas fa-comments\"></i>\r\n          <p>Chat</p>\r\n        </div>\r\n        <div className=\"login\">\r\n          <h1>{isSignIn ? 'Login' : 'Cadastro'}</h1>\r\n        </div>\r\n      </header>\r\n      {isSignIn\r\n        ? <SignIn\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />\r\n        : <SignUp\r\n          setIsSignIn={setIsSignIn}\r\n          messageError={messageError}\r\n          setMessageError={setMessageError} />}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n","import styled from 'styled-components'\r\n\r\nexport const ContainerChat = styled.div`\r\n  max-width: 1160px;\r\n  min-width: 1000px;\r\n  width: 100%;\r\n  height: 88vh;\r\n  border: 1px solid #bbb;\r\n  margin: 40px auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  position: relative;\r\n\r\n  /* @media (max-height:670px){\r\n    height: 85vh\r\n  } */\r\n  .preview-image{\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: #f8f8f8;\r\n    z-index: 10;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    figure{\r\n      width: 100%;\r\n      img{\r\n        margin: 20px auto;\r\n        display: block;\r\n        max-width: 70%;\r\n        max-height: 500px;\r\n      }\r\n    }\r\n  }\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { updateStatus } from '../../reducers/conversations/actionsCreators'\r\nimport { loginUser, getInfoUserLogged } from '../../reducers/userInfo/actionsCreators'\r\nimport { loadingConversations } from '../../reducers/conversations/actionsCreators'\r\nimport InfoUser from '../../components/InfoUser'\r\nimport Posts from '../../components/Chat'\r\nimport ListChat from '../../components/ListChat'\r\nimport Auth from '../../components/Auth'\r\nimport { ContainerChat } from './styles'\r\nimport socket from '../../config/socket.io'\r\nlet timer\r\n\r\nconst Chat = ({ userInfo, loadingConversations, userActive, updateStatus, getInfoUserLogged }) => {\r\n  const [isLogged, setIsLogged] = useState(null)\r\n  const [isInitialStatusUpdate, setIsInitialStatusUpdate] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getUserInfo = async () => {\r\n      const token = JSON.parse(localStorage.getItem('@chat@'))\r\n      if (token) {\r\n        setIsLogged(true)\r\n        getInfoUserLogged()\r\n        loadingConversations()\r\n      } else {\r\n        setIsLogged(false)\r\n      }\r\n    }\r\n    getUserInfo()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (userActive.hasOwnProperty('_id')) {\r\n      clearInterval(timer)\r\n      timer = setInterval(() => {\r\n        socket.emit('verifyStatus', userActive._id)\r\n      }, 3000)\r\n    }\r\n  }, [userActive])\r\n\r\n  useEffect(() => {\r\n    if (!isInitialStatusUpdate) {\r\n      updateStatus()\r\n      setIsInitialStatusUpdate(true)\r\n    }\r\n  }, [userActive])\r\n\r\n  userInfo._id && window.addEventListener('beforeunload', function () {\r\n    socket.emit('off', userInfo._id)\r\n    return ''\r\n  })\r\n\r\n  return (\r\n    <ContainerChat>\r\n      {isLogged === false && <Auth />}\r\n\r\n      {isLogged && <>\r\n        {/* info user and search users */}\r\n        <InfoUser socket={socket} />\r\n        {/* Component message */}\r\n        <Posts />\r\n        {/* Component list users */}\r\n        <ListChat />\r\n      </>}\r\n    </ContainerChat>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.userInfo,\r\n  userActive: state.posts.userActive\r\n})\r\n\r\nexport default connect(mapStateToProps, { updateStatus, loadingConversations, loginUser, getInfoUserLogged })(Chat)\r\n","import React from 'react';\nimport Chat from './pages/Chat'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Chat />\n    </div>\n  );\n}\n\nexport default App\n","import { LOGIN_USER, SEARCH_USER, UPDATE_IMAGE_PROFILE } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  serachUsers: []\r\n}\r\n\r\nconst userInfo = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER:\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    case SEARCH_USER:\r\n      return {\r\n        ...state,\r\n        serachUsers: action.payload\r\n      }\r\n    case UPDATE_IMAGE_PROFILE:\r\n      return {\r\n        ...state,\r\n        imageProfile: action.payload\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userInfo","import { LOADING_POSTS, NEW_MESSAGE, CLEAN_POSTS_USER, MESSAGE_READ, PREVIOUS_POSTS } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  posts: {},\r\n  userActive: {}\r\n}\r\n\r\nconst loadingPosts = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_POSTS: {\r\n      const { userActive, posts } = action.payload\r\n      return {\r\n        ...state,\r\n        ...posts,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: posts.posts\r\n        },\r\n        userActive: userActive\r\n      }\r\n    }\r\n    case PREVIOUS_POSTS: {\r\n      const { posts } = action.payload\r\n      return {\r\n        ...state,\r\n        ...action.payload.posts,\r\n        posts: {\r\n          ...state.posts,\r\n          [posts.idConversation]: [...posts.posts, ...state.posts[posts.idConversation]]\r\n        },\r\n      }\r\n    }\r\n    case NEW_MESSAGE: {\r\n      const { conversation } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [conversation]: state.posts[conversation]\r\n            ? state.posts[conversation].concat(action.payload)\r\n            : [action.payload]\r\n        }\r\n      }\r\n    }\r\n    case CLEAN_POSTS_USER: {\r\n      const { [action.payload]: id, ...tall } = state.posts\r\n      return {\r\n        posts: {\r\n          ...tall\r\n        },\r\n        userActive: {}\r\n      }\r\n    }\r\n    case MESSAGE_READ: {\r\n      const { _id, conversation } = action.payload\r\n      return {\r\n        ...state,\r\n        posts: {\r\n          ...state.posts,\r\n          [conversation]: state.posts[conversation].map(message => message._id === _id\r\n            ? { ...action.payload }\r\n            : message)\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default loadingPosts","import { LOADING_CONVERSATIONS, STATUS, UPDATE_MESSAGES_NOT_READ } from './actionsCreators'\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  status: {}\r\n}\r\nconst conversations = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOADING_CONVERSATIONS:\r\n      return {\r\n        ...state,\r\n        contacts: action.payload\r\n      }\r\n    case STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.payload\r\n      }\r\n    case UPDATE_MESSAGES_NOT_READ:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => contact.idConversation === action.payload.idConversation\r\n          ? { ...contact, messagesNotRead: action.payload.numberMessages }\r\n          : contact)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default conversations","import { compose, createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from '../reducers'\r\n\r\nconst logger = () => {\r\n  return window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n}\r\nlet compo\r\nif (logger()) {\r\n  compo = compose(applyMiddleware(thunk), logger())\r\n} else {\r\n  compo = compose(applyMiddleware(thunk))\r\n}\r\n\r\nexport default createStore(reducers, {}, compo)","import { combineReducers } from 'redux'\r\nimport userInfo from './userInfo'\r\nimport posts from './posts'\r\nimport listConversations from './conversations'\r\n\r\nexport default combineReducers({\r\n  userInfo,\r\n  posts,\r\n  listConversations\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport './index.css';\nimport store from './store'\nimport 'normalize.css'\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}